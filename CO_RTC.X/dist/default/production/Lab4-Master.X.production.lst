

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 09 12:53:09 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    53                           	dabs	1,0x7E,2
    54     0000                     
    55                           ; Version 2.40
    56                           ; Generated 17/11/2021 GMT
    57                           ; 
    58                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F887 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90     0000                     	;# 
    91     0001                     	;# 
    92     0002                     	;# 
    93     0003                     	;# 
    94     0004                     	;# 
    95     0005                     	;# 
    96     0006                     	;# 
    97     0007                     	;# 
    98     0008                     	;# 
    99     0009                     	;# 
   100     000A                     	;# 
   101     000B                     	;# 
   102     000C                     	;# 
   103     000D                     	;# 
   104     000E                     	;# 
   105     000E                     	;# 
   106     000F                     	;# 
   107     0010                     	;# 
   108     0011                     	;# 
   109     0012                     	;# 
   110     0013                     	;# 
   111     0014                     	;# 
   112     0015                     	;# 
   113     0015                     	;# 
   114     0016                     	;# 
   115     0017                     	;# 
   116     0018                     	;# 
   117     0019                     	;# 
   118     001A                     	;# 
   119     001B                     	;# 
   120     001B                     	;# 
   121     001C                     	;# 
   122     001D                     	;# 
   123     001E                     	;# 
   124     001F                     	;# 
   125     0081                     	;# 
   126     0085                     	;# 
   127     0086                     	;# 
   128     0087                     	;# 
   129     0088                     	;# 
   130     0089                     	;# 
   131     008C                     	;# 
   132     008D                     	;# 
   133     008E                     	;# 
   134     008F                     	;# 
   135     0090                     	;# 
   136     0091                     	;# 
   137     0092                     	;# 
   138     0093                     	;# 
   139     0093                     	;# 
   140     0093                     	;# 
   141     0094                     	;# 
   142     0095                     	;# 
   143     0096                     	;# 
   144     0097                     	;# 
   145     0098                     	;# 
   146     0099                     	;# 
   147     009A                     	;# 
   148     009B                     	;# 
   149     009C                     	;# 
   150     009D                     	;# 
   151     009E                     	;# 
   152     009F                     	;# 
   153     0105                     	;# 
   154     0107                     	;# 
   155     0108                     	;# 
   156     0109                     	;# 
   157     010C                     	;# 
   158     010C                     	;# 
   159     010D                     	;# 
   160     010E                     	;# 
   161     010F                     	;# 
   162     0185                     	;# 
   163     0187                     	;# 
   164     0188                     	;# 
   165     0189                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     0000                     	;# 
   169     0001                     	;# 
   170     0002                     	;# 
   171     0003                     	;# 
   172     0004                     	;# 
   173     0005                     	;# 
   174     0006                     	;# 
   175     0007                     	;# 
   176     0008                     	;# 
   177     0009                     	;# 
   178     000A                     	;# 
   179     000B                     	;# 
   180     000C                     	;# 
   181     000D                     	;# 
   182     000E                     	;# 
   183     000E                     	;# 
   184     000F                     	;# 
   185     0010                     	;# 
   186     0011                     	;# 
   187     0012                     	;# 
   188     0013                     	;# 
   189     0014                     	;# 
   190     0015                     	;# 
   191     0015                     	;# 
   192     0016                     	;# 
   193     0017                     	;# 
   194     0018                     	;# 
   195     0019                     	;# 
   196     001A                     	;# 
   197     001B                     	;# 
   198     001B                     	;# 
   199     001C                     	;# 
   200     001D                     	;# 
   201     001E                     	;# 
   202     001F                     	;# 
   203     0081                     	;# 
   204     0085                     	;# 
   205     0086                     	;# 
   206     0087                     	;# 
   207     0088                     	;# 
   208     0089                     	;# 
   209     008C                     	;# 
   210     008D                     	;# 
   211     008E                     	;# 
   212     008F                     	;# 
   213     0090                     	;# 
   214     0091                     	;# 
   215     0092                     	;# 
   216     0093                     	;# 
   217     0093                     	;# 
   218     0093                     	;# 
   219     0094                     	;# 
   220     0095                     	;# 
   221     0096                     	;# 
   222     0097                     	;# 
   223     0098                     	;# 
   224     0099                     	;# 
   225     009A                     	;# 
   226     009B                     	;# 
   227     009C                     	;# 
   228     009D                     	;# 
   229     009E                     	;# 
   230     009F                     	;# 
   231     0105                     	;# 
   232     0107                     	;# 
   233     0108                     	;# 
   234     0109                     	;# 
   235     010C                     	;# 
   236     010C                     	;# 
   237     010D                     	;# 
   238     010E                     	;# 
   239     010F                     	;# 
   240     0185                     	;# 
   241     0187                     	;# 
   242     0188                     	;# 
   243     0189                     	;# 
   244     018C                     	;# 
   245     018D                     	;# 
   246     0000                     	;# 
   247     0001                     	;# 
   248     0002                     	;# 
   249     0003                     	;# 
   250     0004                     	;# 
   251     0005                     	;# 
   252     0006                     	;# 
   253     0007                     	;# 
   254     0008                     	;# 
   255     0009                     	;# 
   256     000A                     	;# 
   257     000B                     	;# 
   258     000C                     	;# 
   259     000D                     	;# 
   260     000E                     	;# 
   261     000E                     	;# 
   262     000F                     	;# 
   263     0010                     	;# 
   264     0011                     	;# 
   265     0012                     	;# 
   266     0013                     	;# 
   267     0014                     	;# 
   268     0015                     	;# 
   269     0015                     	;# 
   270     0016                     	;# 
   271     0017                     	;# 
   272     0018                     	;# 
   273     0019                     	;# 
   274     001A                     	;# 
   275     001B                     	;# 
   276     001B                     	;# 
   277     001C                     	;# 
   278     001D                     	;# 
   279     001E                     	;# 
   280     001F                     	;# 
   281     0081                     	;# 
   282     0085                     	;# 
   283     0086                     	;# 
   284     0087                     	;# 
   285     0088                     	;# 
   286     0089                     	;# 
   287     008C                     	;# 
   288     008D                     	;# 
   289     008E                     	;# 
   290     008F                     	;# 
   291     0090                     	;# 
   292     0091                     	;# 
   293     0092                     	;# 
   294     0093                     	;# 
   295     0093                     	;# 
   296     0093                     	;# 
   297     0094                     	;# 
   298     0095                     	;# 
   299     0096                     	;# 
   300     0097                     	;# 
   301     0098                     	;# 
   302     0099                     	;# 
   303     009A                     	;# 
   304     009B                     	;# 
   305     009C                     	;# 
   306     009D                     	;# 
   307     009E                     	;# 
   308     009F                     	;# 
   309     0105                     	;# 
   310     0107                     	;# 
   311     0108                     	;# 
   312     0109                     	;# 
   313     010C                     	;# 
   314     010C                     	;# 
   315     010D                     	;# 
   316     010E                     	;# 
   317     010F                     	;# 
   318     0185                     	;# 
   319     0187                     	;# 
   320     0188                     	;# 
   321     0189                     	;# 
   322     018C                     	;# 
   323     018D                     	;# 
   324     0000                     	;# 
   325     0001                     	;# 
   326     0002                     	;# 
   327     0003                     	;# 
   328     0004                     	;# 
   329     0005                     	;# 
   330     0006                     	;# 
   331     0007                     	;# 
   332     0008                     	;# 
   333     0009                     	;# 
   334     000A                     	;# 
   335     000B                     	;# 
   336     000C                     	;# 
   337     000D                     	;# 
   338     000E                     	;# 
   339     000E                     	;# 
   340     000F                     	;# 
   341     0010                     	;# 
   342     0011                     	;# 
   343     0012                     	;# 
   344     0013                     	;# 
   345     0014                     	;# 
   346     0015                     	;# 
   347     0015                     	;# 
   348     0016                     	;# 
   349     0017                     	;# 
   350     0018                     	;# 
   351     0019                     	;# 
   352     001A                     	;# 
   353     001B                     	;# 
   354     001B                     	;# 
   355     001C                     	;# 
   356     001D                     	;# 
   357     001E                     	;# 
   358     001F                     	;# 
   359     0081                     	;# 
   360     0085                     	;# 
   361     0086                     	;# 
   362     0087                     	;# 
   363     0088                     	;# 
   364     0089                     	;# 
   365     008C                     	;# 
   366     008D                     	;# 
   367     008E                     	;# 
   368     008F                     	;# 
   369     0090                     	;# 
   370     0091                     	;# 
   371     0092                     	;# 
   372     0093                     	;# 
   373     0093                     	;# 
   374     0093                     	;# 
   375     0094                     	;# 
   376     0095                     	;# 
   377     0096                     	;# 
   378     0097                     	;# 
   379     0098                     	;# 
   380     0099                     	;# 
   381     009A                     	;# 
   382     009B                     	;# 
   383     009C                     	;# 
   384     009D                     	;# 
   385     009E                     	;# 
   386     009F                     	;# 
   387     0105                     	;# 
   388     0107                     	;# 
   389     0108                     	;# 
   390     0109                     	;# 
   391     010C                     	;# 
   392     010C                     	;# 
   393     010D                     	;# 
   394     010E                     	;# 
   395     010F                     	;# 
   396     0185                     	;# 
   397     0187                     	;# 
   398     0188                     	;# 
   399     0189                     	;# 
   400     018C                     	;# 
   401     018D                     	;# 
   402     0000                     	;# 
   403     0001                     	;# 
   404     0002                     	;# 
   405     0003                     	;# 
   406     0004                     	;# 
   407     0005                     	;# 
   408     0006                     	;# 
   409     0007                     	;# 
   410     0008                     	;# 
   411     0009                     	;# 
   412     000A                     	;# 
   413     000B                     	;# 
   414     000C                     	;# 
   415     000D                     	;# 
   416     000E                     	;# 
   417     000E                     	;# 
   418     000F                     	;# 
   419     0010                     	;# 
   420     0011                     	;# 
   421     0012                     	;# 
   422     0013                     	;# 
   423     0014                     	;# 
   424     0015                     	;# 
   425     0015                     	;# 
   426     0016                     	;# 
   427     0017                     	;# 
   428     0018                     	;# 
   429     0019                     	;# 
   430     001A                     	;# 
   431     001B                     	;# 
   432     001B                     	;# 
   433     001C                     	;# 
   434     001D                     	;# 
   435     001E                     	;# 
   436     001F                     	;# 
   437     0081                     	;# 
   438     0085                     	;# 
   439     0086                     	;# 
   440     0087                     	;# 
   441     0088                     	;# 
   442     0089                     	;# 
   443     008C                     	;# 
   444     008D                     	;# 
   445     008E                     	;# 
   446     008F                     	;# 
   447     0090                     	;# 
   448     0091                     	;# 
   449     0092                     	;# 
   450     0093                     	;# 
   451     0093                     	;# 
   452     0093                     	;# 
   453     0094                     	;# 
   454     0095                     	;# 
   455     0096                     	;# 
   456     0097                     	;# 
   457     0098                     	;# 
   458     0099                     	;# 
   459     009A                     	;# 
   460     009B                     	;# 
   461     009C                     	;# 
   462     009D                     	;# 
   463     009E                     	;# 
   464     009F                     	;# 
   465     0105                     	;# 
   466     0107                     	;# 
   467     0108                     	;# 
   468     0109                     	;# 
   469     010C                     	;# 
   470     010C                     	;# 
   471     010D                     	;# 
   472     010E                     	;# 
   473     010F                     	;# 
   474     0185                     	;# 
   475     0187                     	;# 
   476     0188                     	;# 
   477     0189                     	;# 
   478     018C                     	;# 
   479     018D                     	;# 
   480                           
   481                           	psect	idataBANK1
   482     0A27                     __pidataBANK1:
   483                           
   484                           ;initializer for _Fecha
   485     0A27  3430               	retlw	48
   486     0A28  3439               	retlw	57
   487     0A29  3430               	retlw	48
   488     0A2A  3433               	retlw	51
   489     0A2B  3432               	retlw	50
   490     0A2C  3433               	retlw	51
   491     0A2D  3400               	retlw	0
   492                           
   493                           ;initializer for _Hora
   494     0A2E  3430               	retlw	48
   495     0A2F  3430               	retlw	48
   496     0A30  3430               	retlw	48
   497     0A31  3430               	retlw	48
   498     0A32  3430               	retlw	48
   499     0A33  3430               	retlw	48
   500     0A34  3400               	retlw	0
   501                           
   502                           	psect	strings
   503     0800                     __pstrings:
   504     0800                     stringtab:
   505     0800                     __stringtab:
   506                           
   507                           ;	String table - string pointers are 1 byte each
   508     0800  1BFF               	btfsc	btemp+1,7
   509     0801  280A               	ljmp	stringcode
   510     0802  1383               	bcf	3,7
   511     0803  187F               	btfsc	btemp+1,0
   512     0804  1783               	bsf	3,7
   513     0805  0800               	movf	0,w
   514     0806  0A84               	incf	4,f
   515     0807  1903               	skipnz
   516     0808  0AFF               	incf	btemp+1,f
   517     0809  0008               	return
   518     080A                     stringcode:
   519     080A                     stringdir:
   520     080A  3008               	movlw	high stringdir
   521     080B  008A               	movwf	10
   522     080C  0804               	movf	4,w
   523     080D  0A84               	incf	4,f
   524     080E  0782               	addwf	2,f
   525     080F                     __stringbase:
   526     080F  3400               	retlw	0
   527     0810                     __end_of__stringtab:
   528     0810                     _dpowers:
   529     0810  3401               	retlw	1
   530     0811  3400               	retlw	0
   531     0812  340A               	retlw	10
   532     0813  3400               	retlw	0
   533     0814  3464               	retlw	100
   534     0815  3400               	retlw	0
   535     0816  34E8               	retlw	232
   536     0817  3403               	retlw	3
   537     0818  3410               	retlw	16
   538     0819  3427               	retlw	39
   539     081A                     __end_of_dpowers:
   540     001E                     _ADRESH	set	30
   541     001F                     _ADCON0bits	set	31
   542     001F                     _ADCON0	set	31
   543     0005                     _PORTAbits	set	5
   544     0013                     _SSPBUF	set	19
   545     000C                     _PIR1bits	set	12
   546     0014                     _SSPCON	set	20
   547     0005                     _PORTA	set	5
   548     0091                     _SSPCON2bits	set	145
   549     0093                     _SSPADD	set	147
   550     0091                     _SSPCON2	set	145
   551     0094                     _SSPSTAT	set	148
   552     0087                     _TRISCbits	set	135
   553     008F                     _OSCCONbits	set	143
   554     0085                     _TRISA	set	133
   555     009F                     _ADCON1	set	159
   556     0189                     _ANSELH	set	393
   557     0188                     _ANSEL	set	392
   558     081A                     STR_2:
   559     081A  3425               	retlw	37	;'%'
   560     081B  3464               	retlw	100	;'d'
   561     081C  3420               	retlw	32	;' '
   562     081D  3470               	retlw	112	;'p'
   563     081E  3470               	retlw	112	;'p'
   564     081F  346D               	retlw	109	;'m'
   565     0820  3400               	retlw	0
   566     0821                     STR_1:
   567     0821  3443               	retlw	67	;'C'
   568     0822  344F               	retlw	79	;'O'
   569     0823  343A               	retlw	58	;':'
   570     0824  3400               	retlw	0
   571                           
   572                           	psect	cinit
   573     07DE                     start_initialization:	
   574                           ; #config settings
   575                           
   576     07DE                     __initialization:
   577                           
   578                           ; Initialize objects allocated to BANK1
   579     07DE  1383               	bcf	3,7	;select IRP bank0
   580     07DF  30DC               	movlw	low (__pdataBANK1+14)
   581     07E0  00FD               	movwf	btemp+-1
   582     07E1  300A               	movlw	high __pidataBANK1
   583     07E2  00FE               	movwf	btemp
   584     07E3  3027               	movlw	low __pidataBANK1
   585     07E4  00FF               	movwf	btemp+1
   586     07E5  30CE               	movlw	low __pdataBANK1
   587     07E6  0084               	movwf	4
   588     07E7  120A  158A  2239  120A  118A  	fcall	init_ram0
   589                           
   590                           ; Clear objects allocated to BANK1
   591     07EC  30BA               	movlw	low __pbssBANK1
   592     07ED  0084               	movwf	4
   593     07EE  30CE               	movlw	low (__pbssBANK1+20)
   594     07EF  120A  158A  21BC  120A  118A  	fcall	clear_ram0
   595                           
   596                           ; Clear objects allocated to BANK0
   597     07F4  3060               	movlw	low __pbssBANK0
   598     07F5  0084               	movwf	4
   599     07F6  306D               	movlw	low (__pbssBANK0+13)
   600     07F7  120A  158A  21BC  120A  118A  	fcall	clear_ram0
   601     07FC                     end_of_initialization:	
   602                           ;End of C runtime variable initialization code
   603                           
   604     07FC                     __end_of__initialization:
   605     07FC  0183               	clrf	3
   606     07FD  120A  118A  2945   	ljmp	_main	;jump to C main() function
   607                           
   608                           	psect	bssBANK0
   609     0060                     __pbssBANK0:
   610     0060                     _caso:
   611     0060                     	ds	2
   612     0062                     _co_concentration:
   613     0062                     	ds	2
   614     0064                     _adc_value:
   615     0064                     	ds	2
   616     0066                     _anio:
   617     0066                     	ds	1
   618     0067                     _mes:
   619     0067                     	ds	1
   620     0068                     _dia:
   621     0068                     	ds	1
   622     0069                     _hora:
   623     0069                     	ds	1
   624     006A                     _min:
   625     006A                     	ds	1
   626     006B                     _sec:
   627     006B                     	ds	1
   628     006C                     _ADC:
   629     006C                     	ds	1
   630                           
   631                           	psect	bssBANK1
   632     00BA                     __pbssBANK1:
   633     00BA                     _buffer:
   634     00BA                     	ds	20
   635                           
   636                           	psect	dataBANK1
   637     00CE                     __pdataBANK1:
   638     00CE                     _Fecha:
   639     00CE                     	ds	7
   640     00D5                     _Hora:
   641     00D5                     	ds	7
   642                           
   643                           	psect	inittext
   644     0A35                     init_fetch0:	
   645                           ;	Called with low address in FSR and high address in W
   646                           
   647     0A35  087E               	movf	btemp,w
   648     0A36  008A               	movwf	10
   649     0A37  087F               	movf	btemp+1,w
   650     0A38  0082               	movwf	2
   651     0A39                     init_ram0:	
   652                           ;Called with:
   653                           ;	high address of idata address in btemp 
   654                           ;	low address of idata address in btemp+1 
   655                           ;	low address of data in FSR
   656                           ;	high address + 1 of data in btemp-1
   657                           
   658     0A39  120A  158A  2235  120A  158A  	fcall	init_fetch0
   659     0A3E  0080               	movwf	0
   660     0A3F  0A84               	incf	4,f
   661     0A40  0804               	movf	4,w
   662     0A41  067D               	xorwf	btemp+-1,w
   663     0A42  1903               	btfsc	3,2
   664     0A43  3400               	retlw	0
   665     0A44  0AFF               	incf	btemp+1,f
   666     0A45  1903               	btfsc	3,2
   667     0A46  0AFE               	incf	btemp,f
   668     0A47  2A39               	goto	init_ram0
   669                           
   670                           	psect	clrtext
   671     09BC                     clear_ram0:	
   672                           ;	Called with FSR containing the base address, and
   673                           ;	W with the last address+1
   674                           
   675     09BC  0064               	clrwdt	;clear the watchdog before getting into this loop
   676     09BD                     clrloop0:
   677     09BD  0180               	clrf	0	;clear RAM location pointed to by FSR
   678     09BE  0A84               	incf	4,f	;increment pointer
   679     09BF  0604               	xorwf	4,w	;XOR with final address
   680     09C0  1903               	btfsc	3,2	;have we reached the end yet?
   681     09C1  3400               	retlw	0	;all done for this memory range, return
   682     09C2  0604               	xorwf	4,w	;XOR again to restore value
   683     09C3  29BD               	goto	clrloop0	;do the next byte
   684                           
   685                           	psect	cstackBANK1
   686     00A0                     __pcstackBANK1:
   687     00A0                     main@co_string:
   688                           
   689                           ; 16 bytes @ 0x0
   690     00A0                     	ds	16
   691     00B0                     main@co_voltage:
   692                           
   693                           ; 4 bytes @ 0x10
   694     00B0                     	ds	4
   695     00B4                     main@co_concentration:
   696                           
   697                           ; 2 bytes @ 0x14
   698     00B4                     	ds	2
   699     00B6                     main@i:
   700                           
   701                           ; 2 bytes @ 0x16
   702     00B6                     	ds	2
   703     00B8                     main@adc_value:
   704                           
   705                           ; 2 bytes @ 0x18
   706     00B8                     	ds	2
   707                           
   708                           	psect	cstackCOMMON
   709     0070                     __pcstackCOMMON:
   710     0070                     ?_setup:
   711     0070                     ?_Lcd_Init:	
   712                           ; 1 bytes @ 0x0
   713                           
   714     0070                     ?_Lcd_Clear:	
   715                           ; 1 bytes @ 0x0
   716                           
   717     0070                     ?_convertirHora:	
   718                           ; 1 bytes @ 0x0
   719                           
   720     0070                     ??_convertirHora:	
   721                           ; 1 bytes @ 0x0
   722                           
   723     0070                     ?_enviar_hora:	
   724                           ; 1 bytes @ 0x0
   725                           
   726     0070                     ?_convertirFecha:	
   727                           ; 1 bytes @ 0x0
   728                           
   729     0070                     ??_convertirFecha:	
   730                           ; 1 bytes @ 0x0
   731                           
   732     0070                     ?_enviar_fecha:	
   733                           ; 1 bytes @ 0x0
   734                           
   735     0070                     ?_leer_hora:	
   736                           ; 1 bytes @ 0x0
   737                           
   738     0070                     ?_mostrar_hora:	
   739                           ; 1 bytes @ 0x0
   740                           
   741     0070                     ?_leer_fecha:	
   742                           ; 1 bytes @ 0x0
   743                           
   744     0070                     ?_mostrar_fecha:	
   745                           ; 1 bytes @ 0x0
   746                           
   747     0070                     ?_ADC_Init:	
   748                           ; 1 bytes @ 0x0
   749                           
   750     0070                     ??_ADC_Init:	
   751                           ; 1 bytes @ 0x0
   752                           
   753     0070                     ?_I2C_Init_Master:	
   754                           ; 1 bytes @ 0x0
   755                           
   756     0070                     ??_I2C_Init_Master:	
   757                           ; 1 bytes @ 0x0
   758                           
   759     0070                     ?_I2C_Start:	
   760                           ; 1 bytes @ 0x0
   761                           
   762     0070                     ??_I2C_Start:	
   763                           ; 1 bytes @ 0x0
   764                           
   765     0070                     ??_I2C_Write:	
   766                           ; 1 bytes @ 0x0
   767                           
   768     0070                     ?_I2C_Stop:	
   769                           ; 1 bytes @ 0x0
   770                           
   771     0070                     ??_I2C_Stop:	
   772                           ; 1 bytes @ 0x0
   773                           
   774     0070                     ?_I2C_Restart:	
   775                           ; 1 bytes @ 0x0
   776                           
   777     0070                     ??_I2C_Restart:	
   778                           ; 1 bytes @ 0x0
   779                           
   780     0070                     ?_I2C_Read:	
   781                           ; 1 bytes @ 0x0
   782                           
   783     0070                     ??_I2C_Read:	
   784                           ; 1 bytes @ 0x0
   785                           
   786     0070                     ?_I2C_Ack:	
   787                           ; 1 bytes @ 0x0
   788                           
   789     0070                     ??_I2C_Ack:	
   790                           ; 1 bytes @ 0x0
   791                           
   792     0070                     ?_I2C_Nack:	
   793                           ; 1 bytes @ 0x0
   794                           
   795     0070                     ??_I2C_Nack:	
   796                           ; 1 bytes @ 0x0
   797                           
   798     0070                     ?_Lcd_Write_Char:	
   799                           ; 1 bytes @ 0x0
   800                           
   801     0070                     ?_main:	
   802                           ; 1 bytes @ 0x0
   803                           
   804     0070                     ?_Lcd_Port:	
   805                           ; 1 bytes @ 0x0
   806                           
   807     0070                     ??_Lcd_Port:	
   808                           ; 1 bytes @ 0x0
   809                           
   810     0070                     ?_Lcd_Cmd:	
   811                           ; 1 bytes @ 0x0
   812                           
   813     0070                     ?_ADC_Read:	
   814                           ; 1 bytes @ 0x0
   815                           
   816     0070                     ?_I2C_Write:	
   817                           ; 2 bytes @ 0x0
   818                           
   819     0070                     ?__Umul8_16:	
   820                           ; 2 bytes @ 0x0
   821                           
   822     0070                     ?___awdiv:	
   823                           ; 2 bytes @ 0x0
   824                           
   825     0070                     ?___lwdiv:	
   826                           ; 2 bytes @ 0x0
   827                           
   828     0070                     ?___xxtofl:	
   829                           ; 2 bytes @ 0x0
   830                           
   831     0070                     I2C_Init_Master@sp_i2c:	
   832                           ; 4 bytes @ 0x0
   833                           
   834     0070                     I2C_Write@data:	
   835                           ; 1 bytes @ 0x0
   836                           
   837     0070                     Lcd_Port@a:	
   838                           ; 1 bytes @ 0x0
   839                           
   840     0070                     ADC_Init@p_ang:	
   841                           ; 1 bytes @ 0x0
   842                           
   843     0070                     __Umul8_16@multiplicand:	
   844                           ; 1 bytes @ 0x0
   845                           
   846     0070                     ___awdiv@divisor:	
   847                           ; 1 bytes @ 0x0
   848                           
   849     0070                     ___lwdiv@divisor:	
   850                           ; 2 bytes @ 0x0
   851                           
   852     0070                     ___xxtofl@val:	
   853                           ; 2 bytes @ 0x0
   854                           
   855                           
   856                           ; 4 bytes @ 0x0
   857     0070                     	ds	1
   858     0071                     ??_setup:
   859     0071                     ??_enviar_hora:	
   860                           ; 1 bytes @ 0x1
   861                           
   862     0071                     ??_enviar_fecha:	
   863                           ; 1 bytes @ 0x1
   864                           
   865     0071                     ??_leer_hora:	
   866                           ; 1 bytes @ 0x1
   867                           
   868     0071                     ??_leer_fecha:	
   869                           ; 1 bytes @ 0x1
   870                           
   871     0071                     ??_Lcd_Write_Char:	
   872                           ; 1 bytes @ 0x1
   873                           
   874     0071                     ??_Lcd_Cmd:	
   875                           ; 1 bytes @ 0x1
   876                           
   877     0071                     convertirHora@i:	
   878                           ; 1 bytes @ 0x1
   879                           
   880     0071                     convertirFecha@i:	
   881                           ; 1 bytes @ 0x1
   882                           
   883                           
   884                           ; 1 bytes @ 0x1
   885     0071                     	ds	1
   886     0072                     ??_ADC_Read:
   887     0072                     ??__Umul8_16:	
   888                           ; 1 bytes @ 0x2
   889                           
   890     0072                     Lcd_Write_Char@temp:	
   891                           ; 1 bytes @ 0x2
   892                           
   893     0072                     ___awdiv@dividend:	
   894                           ; 1 bytes @ 0x2
   895                           
   896     0072                     ___lwdiv@dividend:	
   897                           ; 2 bytes @ 0x2
   898                           
   899                           
   900                           ; 2 bytes @ 0x2
   901     0072                     	ds	1
   902     0073                     Lcd_Cmd@a:
   903     0073                     Lcd_Write_Char@y:	
   904                           ; 1 bytes @ 0x3
   905                           
   906                           
   907                           ; 1 bytes @ 0x3
   908     0073                     	ds	1
   909     0074                     ??_Lcd_Init:
   910     0074                     ??_Lcd_Clear:	
   911                           ; 1 bytes @ 0x4
   912                           
   913     0074                     ?_Lcd_Set_Cursor:	
   914                           ; 1 bytes @ 0x4
   915                           
   916     0074                     ??___awdiv:	
   917                           ; 1 bytes @ 0x4
   918                           
   919     0074                     ??___lwdiv:	
   920                           ; 1 bytes @ 0x4
   921                           
   922     0074                     ??___xxtofl:	
   923                           ; 1 bytes @ 0x4
   924                           
   925     0074                     Lcd_Set_Cursor@b:	
   926                           ; 1 bytes @ 0x4
   927                           
   928     0074                     Lcd_Write_Char@a:	
   929                           ; 1 bytes @ 0x4
   930                           
   931     0074                     ADC_Read@ch:	
   932                           ; 1 bytes @ 0x4
   933                           
   934     0074                     __Umul8_16@product:	
   935                           ; 1 bytes @ 0x4
   936                           
   937                           
   938                           ; 2 bytes @ 0x4
   939     0074                     	ds	1
   940     0075                     ??_Lcd_Set_Cursor:
   941     0075                     ??_mostrar_hora:	
   942                           ; 1 bytes @ 0x5
   943                           
   944     0075                     ??_mostrar_fecha:	
   945                           ; 1 bytes @ 0x5
   946                           
   947     0075                     ?_Lcd_Write_String:	
   948                           ; 1 bytes @ 0x5
   949                           
   950     0075                     ___awdiv@counter:	
   951                           ; 1 bytes @ 0x5
   952                           
   953     0075                     Lcd_Write_String@a:	
   954                           ; 1 bytes @ 0x5
   955                           
   956     0075                     ___lwdiv@quotient:	
   957                           ; 2 bytes @ 0x5
   958                           
   959                           
   960                           ; 2 bytes @ 0x5
   961     0075                     	ds	1
   962     0076                     Lcd_Set_Cursor@a:
   963     0076                     ___awdiv@sign:	
   964                           ; 1 bytes @ 0x6
   965                           
   966     0076                     __Umul8_16@word_mpld:	
   967                           ; 1 bytes @ 0x6
   968                           
   969                           
   970                           ; 2 bytes @ 0x6
   971     0076                     	ds	1
   972     0077                     ??_Lcd_Write_String:
   973     0077                     Lcd_Set_Cursor@z:	
   974                           ; 1 bytes @ 0x7
   975                           
   976     0077                     ___lwdiv@counter:	
   977                           ; 1 bytes @ 0x7
   978                           
   979     0077                     ___awdiv@quotient:	
   980                           ; 1 bytes @ 0x7
   981                           
   982                           
   983                           ; 2 bytes @ 0x7
   984     0077                     	ds	1
   985     0078                     ?___lwmod:
   986     0078                     Lcd_Set_Cursor@y:	
   987                           ; 2 bytes @ 0x8
   988                           
   989     0078                     __Umul8_16@multiplier:	
   990                           ; 1 bytes @ 0x8
   991                           
   992     0078                     ___xxtofl@sign:	
   993                           ; 1 bytes @ 0x8
   994                           
   995     0078                     ___lwmod@divisor:	
   996                           ; 1 bytes @ 0x8
   997                           
   998                           
   999                           ; 2 bytes @ 0x8
  1000     0078                     	ds	1
  1001     0079                     Lcd_Set_Cursor@temp:
  1002     0079                     ___xxtofl@exp:	
  1003                           ; 1 bytes @ 0x9
  1004                           
  1005                           
  1006                           ; 1 bytes @ 0x9
  1007     0079                     	ds	1
  1008     007A                     Lcd_Write_String@i:
  1009     007A                     ___lwmod@dividend:	
  1010                           ; 2 bytes @ 0xA
  1011                           
  1012     007A                     ___xxtofl@arg:	
  1013                           ; 2 bytes @ 0xA
  1014                           
  1015                           
  1016                           ; 4 bytes @ 0xA
  1017     007A                     	ds	2
  1018     007C                     ??___lwmod:
  1019                           
  1020                           ; 1 bytes @ 0xC
  1021     007C                     	ds	1
  1022     007D                     ___lwmod@counter:
  1023                           
  1024                           ; 1 bytes @ 0xD
  1025     007D                     	ds	1
  1026                           
  1027                           	psect	cstackBANK0
  1028     0020                     __pcstackBANK0:
  1029     0020                     ?_sprintf:
  1030     0020                     ?___flmul:	
  1031                           ; 2 bytes @ 0x0
  1032                           
  1033     0020                     sprintf@f:	
  1034                           ; 4 bytes @ 0x0
  1035                           
  1036     0020                     ___flmul@b:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039                           
  1040                           ; 4 bytes @ 0x0
  1041     0020                     	ds	3
  1042     0023                     ??_sprintf:
  1043                           
  1044                           ; 1 bytes @ 0x3
  1045     0023                     	ds	1
  1046     0024                     ___flmul@a:
  1047                           
  1048                           ; 4 bytes @ 0x4
  1049     0024                     	ds	2
  1050     0026                     sprintf@ap:
  1051                           
  1052                           ; 1 bytes @ 0x6
  1053     0026                     	ds	1
  1054     0027                     sprintf@flag:
  1055                           
  1056                           ; 1 bytes @ 0x7
  1057     0027                     	ds	1
  1058     0028                     ??___flmul:
  1059     0028                     sprintf@prec:	
  1060                           ; 1 bytes @ 0x8
  1061                           
  1062                           
  1063                           ; 1 bytes @ 0x8
  1064     0028                     	ds	1
  1065     0029                     sprintf@val:
  1066                           
  1067                           ; 2 bytes @ 0x9
  1068     0029                     	ds	2
  1069     002B                     sprintf@sp:
  1070                           
  1071                           ; 1 bytes @ 0xB
  1072     002B                     	ds	1
  1073     002C                     sprintf@c:
  1074                           
  1075                           ; 1 bytes @ 0xC
  1076     002C                     	ds	1
  1077     002D                     ___flmul@sign:
  1078                           
  1079                           ; 1 bytes @ 0xD
  1080     002D                     	ds	1
  1081     002E                     ___flmul@grs:
  1082                           
  1083                           ; 4 bytes @ 0xE
  1084     002E                     	ds	4
  1085     0032                     ___flmul@aexp:
  1086                           
  1087                           ; 1 bytes @ 0x12
  1088     0032                     	ds	1
  1089     0033                     ___flmul@bexp:
  1090                           
  1091                           ; 1 bytes @ 0x13
  1092     0033                     	ds	1
  1093     0034                     ___flmul@prod:
  1094                           
  1095                           ; 4 bytes @ 0x14
  1096     0034                     	ds	4
  1097     0038                     ___flmul@temp:
  1098                           
  1099                           ; 2 bytes @ 0x18
  1100     0038                     	ds	2
  1101     003A                     ?___fldiv:
  1102     003A                     ___fldiv@a:	
  1103                           ; 4 bytes @ 0x1A
  1104                           
  1105                           
  1106                           ; 4 bytes @ 0x1A
  1107     003A                     	ds	4
  1108     003E                     ___fldiv@b:
  1109                           
  1110                           ; 4 bytes @ 0x1E
  1111     003E                     	ds	4
  1112     0042                     ??___fldiv:
  1113                           
  1114                           ; 1 bytes @ 0x22
  1115     0042                     	ds	5
  1116     0047                     ___fldiv@rem:
  1117                           
  1118                           ; 4 bytes @ 0x27
  1119     0047                     	ds	4
  1120     004B                     ___fldiv@sign:
  1121                           
  1122                           ; 1 bytes @ 0x2B
  1123     004B                     	ds	1
  1124     004C                     ___fldiv@new_exp:
  1125                           
  1126                           ; 2 bytes @ 0x2C
  1127     004C                     	ds	2
  1128     004E                     ___fldiv@grs:
  1129                           
  1130                           ; 4 bytes @ 0x2E
  1131     004E                     	ds	4
  1132     0052                     ___fldiv@bexp:
  1133                           
  1134                           ; 1 bytes @ 0x32
  1135     0052                     	ds	1
  1136     0053                     ___fldiv@aexp:
  1137                           
  1138                           ; 1 bytes @ 0x33
  1139     0053                     	ds	1
  1140     0054                     ?___fltol:
  1141     0054                     ___fltol@f1:	
  1142                           ; 4 bytes @ 0x34
  1143                           
  1144                           
  1145                           ; 4 bytes @ 0x34
  1146     0054                     	ds	4
  1147     0058                     ??___fltol:
  1148                           
  1149                           ; 1 bytes @ 0x38
  1150     0058                     	ds	4
  1151     005C                     ___fltol@sign1:
  1152                           
  1153                           ; 1 bytes @ 0x3C
  1154     005C                     	ds	1
  1155     005D                     ___fltol@exp1:
  1156                           
  1157                           ; 1 bytes @ 0x3D
  1158     005D                     	ds	1
  1159     005E                     ??_main:
  1160                           
  1161                           ; 1 bytes @ 0x3E
  1162     005E                     	ds	2
  1163                           
  1164                           	psect	maintext
  1165     0145                     __pmaintext:	
  1166 ;;
  1167 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1168 ;;
  1169 ;; *************** function _main *****************
  1170 ;; Defined at:
  1171 ;;		line 72 in file "master.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;		None
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;  i               2   22[BANK1 ] int 
  1176 ;;  co_string      16    0[BANK1 ] unsigned char [16]
  1177 ;;  co_voltage      4   16[BANK1 ] float 
  1178 ;;  adc_value       2   24[BANK1 ] int 
  1179 ;;  co_concentra    2   20[BANK1 ] int 
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  1    wreg      void 
  1182 ;; Registers used:
  1183 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1184 ;; Tracked objects:
  1185 ;;		On entry : B00/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1189 ;;      Params:         0       0       0       0       0
  1190 ;;      Locals:         0       0      26       0       0
  1191 ;;      Temps:          0       2       0       0       0
  1192 ;;      Totals:         0       2      26       0       0
  1193 ;;Total ram usage:       28 bytes
  1194 ;; Hardware stack levels required when called: 3
  1195 ;; This function calls:
  1196 ;;		_ADC_Init
  1197 ;;		_ADC_Read
  1198 ;;		_Lcd_Clear
  1199 ;;		_Lcd_Init
  1200 ;;		_Lcd_Set_Cursor
  1201 ;;		_Lcd_Write_String
  1202 ;;		___awdiv
  1203 ;;		___fldiv
  1204 ;;		___flmul
  1205 ;;		___fltol
  1206 ;;		___xxtofl
  1207 ;;		_convertirFecha
  1208 ;;		_convertirHora
  1209 ;;		_enviar_fecha
  1210 ;;		_enviar_hora
  1211 ;;		_leer_fecha
  1212 ;;		_leer_hora
  1213 ;;		_mostrar_fecha
  1214 ;;		_mostrar_hora
  1215 ;;		_setup
  1216 ;;		_sprintf
  1217 ;; This function is called by:
  1218 ;;		Startup code after reset
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222     0145                     _main:	
  1223                           ;psect for function _main
  1224                           
  1225     0145                     l2543:	
  1226                           ;incstack = 0
  1227                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1228                           
  1229                           
  1230                           ;master.c: 73:     setup();
  1231     0145  120A  158A  2248  120A  118A  	fcall	_setup
  1232                           
  1233                           ;master.c: 74:     Lcd_Init();
  1234     014A  120A  158A  25B6  120A  118A  	fcall	_Lcd_Init
  1235                           
  1236                           ;master.c: 75:     Lcd_Clear();
  1237     014F  120A  158A  220C  120A  118A  	fcall	_Lcd_Clear
  1238     0154                     l2545:
  1239                           
  1240                           ;master.c: 77:     ADCON1 = 0X06;
  1241     0154  3006               	movlw	6
  1242     0155  1683               	bsf	3,5	;RP0=1, select bank1
  1243     0156  1303               	bcf	3,6	;RP1=0, select bank1
  1244     0157  009F               	movwf	31	;volatile
  1245     0158                     l2547:
  1246                           
  1247                           ;master.c: 79:     convertirHora();
  1248     0158  120A  158A  2417  120A  118A  	fcall	_convertirHora
  1249     015D                     l2549:
  1250                           
  1251                           ;master.c: 80:     enviar_hora();
  1252     015D  120A  158A  2338  120A  118A  	fcall	_enviar_hora
  1253     0162                     l2551:
  1254                           
  1255                           ;master.c: 82:     convertirFecha();
  1256     0162  120A  158A  23D6  120A  118A  	fcall	_convertirFecha
  1257     0167                     l2553:
  1258                           
  1259                           ;master.c: 83:     enviar_fecha();
  1260     0167  120A  158A  2309  120A  118A  	fcall	_enviar_fecha
  1261     016C                     l2555:
  1262                           
  1263                           ;master.c: 87:         Lcd_Set_Cursor(1, 8);
  1264     016C  3008               	movlw	8
  1265     016D  00F4               	movwf	Lcd_Set_Cursor@b
  1266     016E  3001               	movlw	1
  1267     016F  120A  158A  24DE  120A  118A  	fcall	_Lcd_Set_Cursor
  1268     0174                     l2557:
  1269                           
  1270                           ;master.c: 88:         leer_hora();
  1271     0174  120A  158A  256D  120A  118A  	fcall	_leer_hora
  1272     0179                     l2559:
  1273                           
  1274                           ;master.c: 89:         mostrar_hora();
  1275     0179  120A  158A  2672  120A  118A  	fcall	_mostrar_hora
  1276     017E                     l2561:
  1277                           
  1278                           ;master.c: 91:         Lcd_Set_Cursor(2, 8);
  1279     017E  3008               	movlw	8
  1280     017F  00F4               	movwf	Lcd_Set_Cursor@b
  1281     0180  3002               	movlw	2
  1282     0181  120A  158A  24DE  120A  118A  	fcall	_Lcd_Set_Cursor
  1283     0186                     l2563:
  1284                           
  1285                           ;master.c: 92:         leer_fecha();
  1286     0186  120A  158A  2524  120A  118A  	fcall	_leer_fecha
  1287     018B                     l2565:
  1288                           
  1289                           ;master.c: 93:         mostrar_fecha();
  1290     018B  120A  158A  2614  120A  118A  	fcall	_mostrar_fecha
  1291     0190                     l2567:
  1292                           
  1293                           ;master.c: 95:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1294     0190  3082               	movlw	130
  1295     0191  1283               	bcf	3,5	;RP0=0, select bank0
  1296     0192  1303               	bcf	3,6	;RP1=0, select bank0
  1297     0193  00DF               	movwf	??_main+1
  1298     0194  30DD               	movlw	221
  1299     0195  00DE               	movwf	??_main
  1300     0196                     u3257:
  1301     0196  0BDE               	decfsz	??_main,f
  1302     0197  2996               	goto	u3257
  1303     0198  0BDF               	decfsz	??_main+1,f
  1304     0199  2996               	goto	u3257
  1305     019A                     l2569:
  1306                           
  1307                           ;master.c: 98:         int adc_value = 0;
  1308     019A  1683               	bsf	3,5	;RP0=1, select bank1
  1309     019B  1303               	bcf	3,6	;RP1=0, select bank1
  1310     019C  01B8               	clrf	main@adc_value^(0+128)
  1311     019D  01B9               	clrf	(main@adc_value+1)^(0+128)
  1312     019E                     l2571:
  1313                           
  1314                           ;master.c: 99:         for (int i = 0; i < 16; i++) {
  1315     019E  01B6               	clrf	main@i^(0+128)
  1316     019F  01B7               	clrf	(main@i+1)^(0+128)
  1317     01A0                     l2577:
  1318                           
  1319                           ;master.c: 100:             ADC_Init(0b01011100);
  1320     01A0  305C               	movlw	92
  1321     01A1  120A  158A  21C4  120A  118A  	fcall	_ADC_Init
  1322                           
  1323                           ;master.c: 101:             adc_value += ADC_Read(7);
  1324     01A6  3007               	movlw	7
  1325     01A7  120A  158A  22BB  120A  118A  	fcall	_ADC_Read
  1326     01AC  0870               	movf	?_ADC_Read,w
  1327     01AD  1683               	bsf	3,5	;RP0=1, select bank1
  1328     01AE  1303               	bcf	3,6	;RP1=0, select bank1
  1329     01AF  07B8               	addwf	main@adc_value^(0+128),f
  1330     01B0  1803               	skipnc
  1331     01B1  0AB9               	incf	(main@adc_value+1)^(0+128),f
  1332     01B2  0871               	movf	?_ADC_Read+1,w
  1333     01B3  07B9               	addwf	(main@adc_value+1)^(0+128),f
  1334     01B4                     l2579:
  1335                           
  1336                           ;master.c: 102:         }
  1337     01B4  3001               	movlw	1
  1338     01B5  07B6               	addwf	main@i^(0+128),f
  1339     01B6  1803               	skipnc
  1340     01B7  0AB7               	incf	(main@i+1)^(0+128),f
  1341     01B8  3000               	movlw	0
  1342     01B9  07B7               	addwf	(main@i+1)^(0+128),f
  1343     01BA                     l2581:
  1344     01BA  0837               	movf	(main@i+1)^(0+128),w
  1345     01BB  3A80               	xorlw	128
  1346     01BC  00FF               	movwf	btemp+1
  1347     01BD  3080               	movlw	128
  1348     01BE  027F               	subwf	btemp+1,w
  1349     01BF  1D03               	skipz
  1350     01C0  29C3               	goto	u3245
  1351     01C1  3010               	movlw	16
  1352     01C2  0236               	subwf	main@i^(0+128),w
  1353     01C3                     u3245:
  1354     01C3  1C03               	skipc
  1355     01C4  29C6               	goto	u3241
  1356     01C5  29C7               	goto	u3240
  1357     01C6                     u3241:
  1358     01C6  29A0               	goto	l2577
  1359     01C7                     u3240:
  1360     01C7                     l2583:
  1361                           
  1362                           ;master.c: 103:         adc_value /= 16;
  1363     01C7  3010               	movlw	16
  1364     01C8  00F0               	movwf	___awdiv@divisor
  1365     01C9  3000               	movlw	0
  1366     01CA  00F1               	movwf	___awdiv@divisor+1
  1367     01CB  1683               	bsf	3,5	;RP0=1, select bank1
  1368     01CC  1303               	bcf	3,6	;RP1=0, select bank1
  1369     01CD  0839               	movf	(main@adc_value+1)^(0+128),w
  1370     01CE  00F3               	movwf	___awdiv@dividend+1
  1371     01CF  0838               	movf	main@adc_value^(0+128),w
  1372     01D0  00F2               	movwf	___awdiv@dividend
  1373     01D1  120A  118A  2004  120A  118A  	fcall	___awdiv
  1374     01D6  0871               	movf	?___awdiv+1,w
  1375     01D7  1683               	bsf	3,5	;RP0=1, select bank1
  1376     01D8  1303               	bcf	3,6	;RP1=0, select bank1
  1377     01D9  00B9               	movwf	(main@adc_value+1)^(0+128)
  1378     01DA  0870               	movf	?___awdiv,w
  1379     01DB  00B8               	movwf	main@adc_value^(0+128)
  1380     01DC                     l2585:
  1381                           
  1382                           ;master.c: 106:         float co_voltage = (float) adc_value * 5.0 / 4096.0;
  1383     01DC  3045               	movlw	69
  1384     01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1385     01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1386     01DF  00BD               	movwf	___fldiv@a+3
  1387     01E0  3080               	movlw	128
  1388     01E1  00BC               	movwf	___fldiv@a+2
  1389     01E2  3000               	movlw	0
  1390     01E3  00BB               	movwf	___fldiv@a+1
  1391     01E4  3000               	movlw	0
  1392     01E5  00BA               	movwf	___fldiv@a
  1393     01E6  3040               	movlw	64
  1394     01E7  00A3               	movwf	___flmul@b+3
  1395     01E8  30A0               	movlw	160
  1396     01E9  00A2               	movwf	___flmul@b+2
  1397     01EA  3000               	movlw	0
  1398     01EB  00A1               	movwf	___flmul@b+1
  1399     01EC  3000               	movlw	0
  1400     01ED  00A0               	movwf	___flmul@b
  1401     01EE  1683               	bsf	3,5	;RP0=1, select bank1
  1402     01EF  1303               	bcf	3,6	;RP1=0, select bank1
  1403     01F0  0838               	movf	main@adc_value^(0+128),w
  1404     01F1  00F0               	movwf	___xxtofl@val
  1405     01F2  0839               	movf	(main@adc_value+1)^(0+128),w
  1406     01F3  00F1               	movwf	___xxtofl@val+1
  1407     01F4  3000               	movlw	0
  1408     01F5  1BF1               	btfsc	___xxtofl@val+1,7
  1409     01F6  30FF               	movlw	255
  1410     01F7  00F2               	movwf	___xxtofl@val+2
  1411     01F8  00F3               	movwf	___xxtofl@val+3
  1412     01F9  3001               	movlw	1
  1413     01FA  120A  158A  2748  120A  118A  	fcall	___xxtofl
  1414     01FF  0873               	movf	?___xxtofl+3,w
  1415     0200  1283               	bcf	3,5	;RP0=0, select bank0
  1416     0201  1303               	bcf	3,6	;RP1=0, select bank0
  1417     0202  00A7               	movwf	___flmul@a+3
  1418     0203  0872               	movf	?___xxtofl+2,w
  1419     0204  00A6               	movwf	___flmul@a+2
  1420     0205  0871               	movf	?___xxtofl+1,w
  1421     0206  00A5               	movwf	___flmul@a+1
  1422     0207  0870               	movf	?___xxtofl,w
  1423     0208  00A4               	movwf	___flmul@a
  1424     0209  120A  118A  2499  120A  118A  	fcall	___flmul
  1425     020E  1283               	bcf	3,5	;RP0=0, select bank0
  1426     020F  1303               	bcf	3,6	;RP1=0, select bank0
  1427     0210  0823               	movf	?___flmul+3,w
  1428     0211  00C1               	movwf	___fldiv@b+3
  1429     0212  0822               	movf	?___flmul+2,w
  1430     0213  00C0               	movwf	___fldiv@b+2
  1431     0214  0821               	movf	?___flmul+1,w
  1432     0215  00BF               	movwf	___fldiv@b+1
  1433     0216  0820               	movf	?___flmul,w
  1434     0217  00BE               	movwf	___fldiv@b
  1435     0218  120A  118A  22C6  120A  118A  	fcall	___fldiv
  1436     021D  1283               	bcf	3,5	;RP0=0, select bank0
  1437     021E  1303               	bcf	3,6	;RP1=0, select bank0
  1438     021F  083D               	movf	?___fldiv+3,w
  1439     0220  1683               	bsf	3,5	;RP0=1, select bank1
  1440     0221  1303               	bcf	3,6	;RP1=0, select bank1
  1441     0222  00B3               	movwf	(main@co_voltage+3)^(0+128)
  1442     0223  1283               	bcf	3,5	;RP0=0, select bank0
  1443     0224  1303               	bcf	3,6	;RP1=0, select bank0
  1444     0225  083C               	movf	?___fldiv+2,w
  1445     0226  1683               	bsf	3,5	;RP0=1, select bank1
  1446     0227  1303               	bcf	3,6	;RP1=0, select bank1
  1447     0228  00B2               	movwf	(main@co_voltage+2)^(0+128)
  1448     0229  1283               	bcf	3,5	;RP0=0, select bank0
  1449     022A  1303               	bcf	3,6	;RP1=0, select bank0
  1450     022B  083B               	movf	?___fldiv+1,w
  1451     022C  1683               	bsf	3,5	;RP0=1, select bank1
  1452     022D  1303               	bcf	3,6	;RP1=0, select bank1
  1453     022E  00B1               	movwf	(main@co_voltage+1)^(0+128)
  1454     022F  1283               	bcf	3,5	;RP0=0, select bank0
  1455     0230  1303               	bcf	3,6	;RP1=0, select bank0
  1456     0231  083A               	movf	?___fldiv,w
  1457     0232  1683               	bsf	3,5	;RP0=1, select bank1
  1458     0233  1303               	bcf	3,6	;RP1=0, select bank1
  1459     0234  00B0               	movwf	main@co_voltage^(0+128)
  1460     0235                     l2587:
  1461                           
  1462                           ;master.c: 107:         int co_concentration = co_voltage * 255 / 1.4;
  1463     0235  0833               	movf	(main@co_voltage+3)^(0+128),w
  1464     0236  1283               	bcf	3,5	;RP0=0, select bank0
  1465     0237  1303               	bcf	3,6	;RP1=0, select bank0
  1466     0238  00A7               	movwf	___flmul@a+3
  1467     0239  1683               	bsf	3,5	;RP0=1, select bank1
  1468     023A  1303               	bcf	3,6	;RP1=0, select bank1
  1469     023B  0832               	movf	(main@co_voltage+2)^(0+128),w
  1470     023C  1283               	bcf	3,5	;RP0=0, select bank0
  1471     023D  1303               	bcf	3,6	;RP1=0, select bank0
  1472     023E  00A6               	movwf	___flmul@a+2
  1473     023F  1683               	bsf	3,5	;RP0=1, select bank1
  1474     0240  1303               	bcf	3,6	;RP1=0, select bank1
  1475     0241  0831               	movf	(main@co_voltage+1)^(0+128),w
  1476     0242  1283               	bcf	3,5	;RP0=0, select bank0
  1477     0243  1303               	bcf	3,6	;RP1=0, select bank0
  1478     0244  00A5               	movwf	___flmul@a+1
  1479     0245  1683               	bsf	3,5	;RP0=1, select bank1
  1480     0246  1303               	bcf	3,6	;RP1=0, select bank1
  1481     0247  0830               	movf	main@co_voltage^(0+128),w
  1482     0248  1283               	bcf	3,5	;RP0=0, select bank0
  1483     0249  1303               	bcf	3,6	;RP1=0, select bank0
  1484     024A  00A4               	movwf	___flmul@a
  1485     024B  3043               	movlw	67
  1486     024C  00A3               	movwf	___flmul@b+3
  1487     024D  307F               	movlw	127
  1488     024E  00A2               	movwf	___flmul@b+2
  1489     024F  3000               	movlw	0
  1490     0250  00A1               	movwf	___flmul@b+1
  1491     0251  3000               	movlw	0
  1492     0252  00A0               	movwf	___flmul@b
  1493     0253  120A  118A  2499  120A  118A  	fcall	___flmul
  1494     0258  1283               	bcf	3,5	;RP0=0, select bank0
  1495     0259  1303               	bcf	3,6	;RP1=0, select bank0
  1496     025A  0823               	movf	?___flmul+3,w
  1497     025B  00C1               	movwf	___fldiv@b+3
  1498     025C  0822               	movf	?___flmul+2,w
  1499     025D  00C0               	movwf	___fldiv@b+2
  1500     025E  0821               	movf	?___flmul+1,w
  1501     025F  00BF               	movwf	___fldiv@b+1
  1502     0260  0820               	movf	?___flmul,w
  1503     0261  00BE               	movwf	___fldiv@b
  1504     0262  303F               	movlw	63
  1505     0263  00BD               	movwf	___fldiv@a+3
  1506     0264  30B3               	movlw	179
  1507     0265  00BC               	movwf	___fldiv@a+2
  1508     0266  3033               	movlw	51
  1509     0267  00BB               	movwf	___fldiv@a+1
  1510     0268  3033               	movlw	51
  1511     0269  00BA               	movwf	___fldiv@a
  1512     026A  120A  118A  22C6  120A  118A  	fcall	___fldiv
  1513     026F  1283               	bcf	3,5	;RP0=0, select bank0
  1514     0270  1303               	bcf	3,6	;RP1=0, select bank0
  1515     0271  083D               	movf	?___fldiv+3,w
  1516     0272  00D7               	movwf	___fltol@f1+3
  1517     0273  083C               	movf	?___fldiv+2,w
  1518     0274  00D6               	movwf	___fltol@f1+2
  1519     0275  083B               	movf	?___fldiv+1,w
  1520     0276  00D5               	movwf	___fltol@f1+1
  1521     0277  083A               	movf	?___fldiv,w
  1522     0278  00D4               	movwf	___fltol@f1
  1523     0279  120A  158A  26D0  120A  118A  	fcall	___fltol
  1524     027E  1283               	bcf	3,5	;RP0=0, select bank0
  1525     027F  1303               	bcf	3,6	;RP1=0, select bank0
  1526     0280  0855               	movf	?___fltol+1,w
  1527     0281  1683               	bsf	3,5	;RP0=1, select bank1
  1528     0282  1303               	bcf	3,6	;RP1=0, select bank1
  1529     0283  00B5               	movwf	(main@co_concentration+1)^(0+128)
  1530     0284  1283               	bcf	3,5	;RP0=0, select bank0
  1531     0285  1303               	bcf	3,6	;RP1=0, select bank0
  1532     0286  0854               	movf	?___fltol,w
  1533     0287  1683               	bsf	3,5	;RP0=1, select bank1
  1534     0288  1303               	bcf	3,6	;RP1=0, select bank1
  1535     0289  00B4               	movwf	main@co_concentration^(0+128)
  1536                           
  1537                           ;master.c: 110:         char co_string[16];;master.c: 111:         Lcd_Set_Cursor(1,1);
  1538     028A  01F4               	clrf	Lcd_Set_Cursor@b
  1539     028B  0AF4               	incf	Lcd_Set_Cursor@b,f
  1540     028C  3001               	movlw	1
  1541     028D  120A  158A  24DE  120A  118A  	fcall	_Lcd_Set_Cursor
  1542     0292                     l2589:
  1543                           
  1544                           ;master.c: 112:         Lcd_Write_String("CO:");
  1545     0292  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1546     0293  00F5               	movwf	Lcd_Write_String@a
  1547     0294  3080               	movlw	128
  1548     0295  00F6               	movwf	Lcd_Write_String@a+1
  1549     0296  120A  158A  2458  120A  118A  	fcall	_Lcd_Write_String
  1550     029B                     l2591:
  1551                           
  1552                           ;master.c: 113:         sprintf(co_string, "%d ppm", co_concentration);
  1553     029B  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1554     029C  1283               	bcf	3,5	;RP0=0, select bank0
  1555     029D  1303               	bcf	3,6	;RP1=0, select bank0
  1556     029E  00A0               	movwf	sprintf@f
  1557     029F  1683               	bsf	3,5	;RP0=1, select bank1
  1558     02A0  1303               	bcf	3,6	;RP1=0, select bank1
  1559     02A1  0835               	movf	(main@co_concentration+1)^(0+128),w
  1560     02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1561     02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1562     02A4  00A2               	movwf	?_sprintf+2
  1563     02A5  1683               	bsf	3,5	;RP0=1, select bank1
  1564     02A6  1303               	bcf	3,6	;RP1=0, select bank1
  1565     02A7  0834               	movf	main@co_concentration^(0+128),w
  1566     02A8  1283               	bcf	3,5	;RP0=0, select bank0
  1567     02A9  1303               	bcf	3,6	;RP1=0, select bank0
  1568     02AA  00A1               	movwf	?_sprintf+1
  1569     02AB  30A0               	movlw	(low (main@co_string| 0))& (0+255)
  1570     02AC  120A  118A  206B  120A  118A  	fcall	_sprintf
  1571                           
  1572                           ;master.c: 114:         Lcd_Set_Cursor(2,1);
  1573     02B1  01F4               	clrf	Lcd_Set_Cursor@b
  1574     02B2  0AF4               	incf	Lcd_Set_Cursor@b,f
  1575     02B3  3002               	movlw	2
  1576     02B4  120A  158A  24DE  120A  118A  	fcall	_Lcd_Set_Cursor
  1577     02B9                     l2593:
  1578                           
  1579                           ;master.c: 115:         Lcd_Write_String(co_string);
  1580     02B9  30A0               	movlw	(low (main@co_string| 0))& (0+255)
  1581     02BA  00F5               	movwf	Lcd_Write_String@a
  1582     02BB  3000               	movlw	0
  1583     02BC  00F6               	movwf	Lcd_Write_String@a+1
  1584     02BD  120A  158A  2458  120A  118A  	fcall	_Lcd_Write_String
  1585     02C2  296C               	goto	l2555
  1586     02C3  120A  118A  2800   	ljmp	start
  1587     02C6                     __end_of_main:
  1588                           
  1589                           	psect	text1
  1590     006B                     __ptext1:	
  1591 ;; *************** function _sprintf *****************
  1592 ;; Defined at:
  1593 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;  sp              1    wreg     PTR unsigned char 
  1596 ;;		 -> main@co_string(16), 
  1597 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1598 ;;		 -> STR_2(7), 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1601 ;;		 -> main@co_string(16), 
  1602 ;;  tmpval          4    0        struct .
  1603 ;;  val             2    9[BANK0 ] unsigned int 
  1604 ;;  cp              2    0        PTR const unsigned char 
  1605 ;;  len             2    0        unsigned int 
  1606 ;;  c               1   12[BANK0 ] unsigned char 
  1607 ;;  prec            1    8[BANK0 ] char 
  1608 ;;  flag            1    7[BANK0 ] unsigned char 
  1609 ;;  ap              1    6[BANK0 ] PTR void [1]
  1610 ;;		 -> ?_sprintf(2), 
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  2    0[BANK0 ] int 
  1613 ;; Registers used:
  1614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1620 ;;      Params:         0       3       0       0       0
  1621 ;;      Locals:         0       7       0       0       0
  1622 ;;      Temps:          0       3       0       0       0
  1623 ;;      Totals:         0      13       0       0       0
  1624 ;;Total ram usage:       13 bytes
  1625 ;; Hardware stack levels used: 1
  1626 ;; Hardware stack levels required when called: 1
  1627 ;; This function calls:
  1628 ;;		___lwdiv
  1629 ;;		___lwmod
  1630 ;; This function is called by:
  1631 ;;		_main
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635     006B                     _sprintf:	
  1636                           ;psect for function _sprintf
  1637                           
  1638                           
  1639                           ;incstack = 0
  1640                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1641                           ;sprintf@sp stored from wreg
  1642     006B  1283               	bcf	3,5	;RP0=0, select bank0
  1643     006C  1303               	bcf	3,6	;RP1=0, select bank0
  1644     006D  00AB               	movwf	sprintf@sp
  1645     006E                     l2075:
  1646                           
  1647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1648     006E  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1649     006F  00A6               	movwf	sprintf@ap
  1650                           
  1651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1652     0070  2930               	goto	l2127
  1653     0071                     l2077:
  1654                           
  1655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1656     0071  3025               	movlw	37
  1657     0072  062C               	xorwf	sprintf@c,w
  1658     0073  1903               	btfsc	3,2
  1659     0074  2876               	goto	u2171
  1660     0075  2877               	goto	u2170
  1661     0076                     u2171:
  1662     0076  2881               	goto	l2083
  1663     0077                     u2170:
  1664     0077                     l2079:
  1665                           
  1666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1667     0077  082B               	movf	sprintf@sp,w
  1668     0078  0084               	movwf	4
  1669     0079  082C               	movf	sprintf@c,w
  1670     007A  1383               	bcf	3,7	;select IRP bank0
  1671     007B  0080               	movwf	0
  1672     007C                     l2081:
  1673     007C  3001               	movlw	1
  1674     007D  00A3               	movwf	??_sprintf
  1675     007E  0823               	movf	??_sprintf,w
  1676     007F  07AB               	addwf	sprintf@sp,f
  1677                           
  1678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1679     0080  2930               	goto	l2127
  1680     0081                     l2083:
  1681                           
  1682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1683     0081  01A7               	clrf	sprintf@flag
  1684     0082                     l2087:	
  1685                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1686                           
  1687     0082  3001               	movlw	1
  1688     0083  07A0               	addwf	sprintf@f,f
  1689     0084  30FF               	movlw	-1
  1690     0085  0720               	addwf	sprintf@f,w
  1691     0086  0084               	movwf	4
  1692     0087  120A  158A  200A  120A  118A  	fcall	stringdir
  1693     008C  00AC               	movwf	sprintf@c
  1694     008D  00A3               	movwf	??_sprintf
  1695     008E  01A4               	clrf	??_sprintf+1
  1696                           
  1697                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1698                           ; Switch size 1, requested type "simple"
  1699                           ; Number of cases is 1, Range of values is 0 to 0
  1700                           ; switch strategies available:
  1701                           ; Name         Instructions Cycles
  1702                           ; simple_byte            4     3 (average)
  1703                           ; direct_byte           11     8 (fixed)
  1704                           ; jumptable            260     6 (fixed)
  1705                           ;	Chosen strategy is simple_byte
  1706     008F  0824               	movf	??_sprintf+1,w
  1707     0090  3A00               	xorlw	0	; case 0
  1708     0091  1903               	skipnz
  1709     0092  2894               	goto	l2619
  1710     0093  2930               	goto	l2127
  1711     0094                     l2619:
  1712                           
  1713                           ; Switch size 1, requested type "simple"
  1714                           ; Number of cases is 3, Range of values is 0 to 105
  1715                           ; switch strategies available:
  1716                           ; Name         Instructions Cycles
  1717                           ; simple_byte           10     6 (average)
  1718                           ; jumptable            260     6 (fixed)
  1719                           ;	Chosen strategy is simple_byte
  1720     0094  0823               	movf	??_sprintf,w
  1721     0095  3A00               	xorlw	0	; case 0
  1722     0096  1903               	skipnz
  1723     0097  2940               	goto	l2129
  1724     0098  3A64               	xorlw	100	; case 100
  1725     0099  1903               	skipnz
  1726     009A  289F               	goto	l2089
  1727     009B  3A0D               	xorlw	13	; case 105
  1728     009C  1903               	skipnz
  1729     009D  289F               	goto	l2089
  1730     009E  2930               	goto	l2127
  1731     009F                     l2089:
  1732                           
  1733                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1734     009F  0826               	movf	sprintf@ap,w
  1735     00A0  0084               	movwf	4
  1736     00A1  1383               	bcf	3,7	;select IRP bank0
  1737     00A2  0800               	movf	0,w
  1738     00A3  00A9               	movwf	sprintf@val
  1739     00A4  0A84               	incf	4,f
  1740     00A5  0800               	movf	0,w
  1741     00A6  00AA               	movwf	sprintf@val+1
  1742     00A7                     l2091:
  1743     00A7  3002               	movlw	2
  1744     00A8  00A3               	movwf	??_sprintf
  1745     00A9  0823               	movf	??_sprintf,w
  1746     00AA  07A6               	addwf	sprintf@ap,f
  1747     00AB                     l2093:
  1748                           
  1749                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1750     00AB  1FAA               	btfss	sprintf@val+1,7
  1751     00AC  28AE               	goto	u2181
  1752     00AD  28AF               	goto	u2180
  1753     00AE                     u2181:
  1754     00AE  28B8               	goto	l2099
  1755     00AF                     u2180:
  1756     00AF                     l2095:
  1757                           
  1758                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1759     00AF  3003               	movlw	3
  1760     00B0  00A3               	movwf	??_sprintf
  1761     00B1  0823               	movf	??_sprintf,w
  1762     00B2  04A7               	iorwf	sprintf@flag,f
  1763     00B3                     l2097:
  1764                           
  1765                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1766     00B3  09A9               	comf	sprintf@val,f
  1767     00B4  09AA               	comf	sprintf@val+1,f
  1768     00B5  0AA9               	incf	sprintf@val,f
  1769     00B6  1903               	skipnz
  1770     00B7  0AAA               	incf	sprintf@val+1,f
  1771     00B8                     l2099:
  1772                           
  1773                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1774     00B8  01AC               	clrf	sprintf@c
  1775     00B9  0AAC               	incf	sprintf@c,f
  1776     00BA                     l2105:
  1777                           
  1778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1779     00BA  082C               	movf	sprintf@c,w
  1780     00BB  00A3               	movwf	??_sprintf
  1781     00BC  0723               	addwf	??_sprintf,w
  1782     00BD  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1783     00BE  0084               	movwf	4
  1784     00BF  120A  158A  200A  120A  118A  	fcall	stringdir
  1785     00C4  00A4               	movwf	??_sprintf+1
  1786     00C5  120A  158A  200A  120A  118A  	fcall	stringdir
  1787     00CA  00A5               	movwf	??_sprintf+2
  1788     00CB  0825               	movf	??_sprintf+2,w
  1789     00CC  022A               	subwf	sprintf@val+1,w
  1790     00CD  1D03               	skipz
  1791     00CE  28D1               	goto	u2195
  1792     00CF  0824               	movf	??_sprintf+1,w
  1793     00D0  0229               	subwf	sprintf@val,w
  1794     00D1                     u2195:
  1795     00D1  1803               	skipnc
  1796     00D2  28D4               	goto	u2191
  1797     00D3  28D5               	goto	u2190
  1798     00D4                     u2191:
  1799     00D4  28D6               	goto	l2109
  1800     00D5                     u2190:
  1801     00D5  28E0               	goto	l2111
  1802     00D6                     l2109:
  1803     00D6  3001               	movlw	1
  1804     00D7  00A3               	movwf	??_sprintf
  1805     00D8  0823               	movf	??_sprintf,w
  1806     00D9  07AC               	addwf	sprintf@c,f
  1807     00DA  3005               	movlw	5
  1808     00DB  062C               	xorwf	sprintf@c,w
  1809     00DC  1D03               	btfss	3,2
  1810     00DD  28DF               	goto	u2201
  1811     00DE  28E0               	goto	u2200
  1812     00DF                     u2201:
  1813     00DF  28BA               	goto	l2105
  1814     00E0                     u2200:
  1815     00E0                     l2111:
  1816                           
  1817                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1818     00E0  0827               	movf	sprintf@flag,w
  1819     00E1  3903               	andlw	3
  1820     00E2  1903               	btfsc	3,2
  1821     00E3  28E5               	goto	u2211
  1822     00E4  28E6               	goto	u2210
  1823     00E5                     u2211:
  1824     00E5  28EF               	goto	l2117
  1825     00E6                     u2210:
  1826     00E6                     l2113:
  1827                           
  1828                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1829     00E6  082B               	movf	sprintf@sp,w
  1830     00E7  0084               	movwf	4
  1831     00E8  302D               	movlw	45
  1832     00E9  1383               	bcf	3,7	;select IRP bank0
  1833     00EA  0080               	movwf	0
  1834     00EB                     l2115:
  1835     00EB  3001               	movlw	1
  1836     00EC  00A3               	movwf	??_sprintf
  1837     00ED  0823               	movf	??_sprintf,w
  1838     00EE  07AB               	addwf	sprintf@sp,f
  1839     00EF                     l2117:
  1840                           
  1841                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1842     00EF  082C               	movf	sprintf@c,w
  1843     00F0  00A8               	movwf	sprintf@prec
  1844                           
  1845                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1846     00F1  2927               	goto	l2125
  1847     00F2                     l2119:
  1848                           
  1849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1850     00F2  300A               	movlw	10
  1851     00F3  00F8               	movwf	___lwmod@divisor
  1852     00F4  3000               	movlw	0
  1853     00F5  00F9               	movwf	___lwmod@divisor+1
  1854     00F6  0828               	movf	sprintf@prec,w
  1855     00F7  00A3               	movwf	??_sprintf
  1856     00F8  0723               	addwf	??_sprintf,w
  1857     00F9  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1858     00FA  0084               	movwf	4
  1859     00FB  120A  158A  200A  120A  118A  	fcall	stringdir
  1860     0100  00F0               	movwf	___lwdiv@divisor
  1861     0101  120A  158A  200A  120A  118A  	fcall	stringdir
  1862     0106  00F1               	movwf	___lwdiv@divisor+1
  1863     0107  082A               	movf	sprintf@val+1,w
  1864     0108  00F3               	movwf	___lwdiv@dividend+1
  1865     0109  0829               	movf	sprintf@val,w
  1866     010A  00F2               	movwf	___lwdiv@dividend
  1867     010B  120A  158A  249A  120A  118A  	fcall	___lwdiv
  1868     0110  0871               	movf	?___lwdiv+1,w
  1869     0111  00FB               	movwf	___lwmod@dividend+1
  1870     0112  0870               	movf	?___lwdiv,w
  1871     0113  00FA               	movwf	___lwmod@dividend
  1872     0114  120A  158A  239C  120A  118A  	fcall	___lwmod
  1873     0119  0878               	movf	?___lwmod,w
  1874     011A  3E30               	addlw	48
  1875     011B  1283               	bcf	3,5	;RP0=0, select bank0
  1876     011C  1303               	bcf	3,6	;RP1=0, select bank0
  1877     011D  00AC               	movwf	sprintf@c
  1878     011E                     l2121:
  1879                           
  1880                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1881     011E  082B               	movf	sprintf@sp,w
  1882     011F  0084               	movwf	4
  1883     0120  082C               	movf	sprintf@c,w
  1884     0121  1383               	bcf	3,7	;select IRP bank0
  1885     0122  0080               	movwf	0
  1886     0123                     l2123:
  1887     0123  3001               	movlw	1
  1888     0124  00A3               	movwf	??_sprintf
  1889     0125  0823               	movf	??_sprintf,w
  1890     0126  07AB               	addwf	sprintf@sp,f
  1891     0127                     l2125:
  1892                           
  1893                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1894     0127  30FF               	movlw	255
  1895     0128  00A3               	movwf	??_sprintf
  1896     0129  0823               	movf	??_sprintf,w
  1897     012A  07A8               	addwf	sprintf@prec,f
  1898     012B  0A28               	incf	sprintf@prec,w
  1899     012C  1D03               	btfss	3,2
  1900     012D  292F               	goto	u2221
  1901     012E  2930               	goto	u2220
  1902     012F                     u2221:
  1903     012F  28F2               	goto	l2119
  1904     0130                     u2220:
  1905     0130                     l2127:
  1906                           
  1907                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1908     0130  3001               	movlw	1
  1909     0131  07A0               	addwf	sprintf@f,f
  1910     0132  30FF               	movlw	-1
  1911     0133  0720               	addwf	sprintf@f,w
  1912     0134  0084               	movwf	4
  1913     0135  120A  158A  200A  120A  118A  	fcall	stringdir
  1914     013A  00AC               	movwf	sprintf@c
  1915     013B  082C               	movf	sprintf@c,w
  1916     013C  1D03               	btfss	3,2
  1917     013D  293F               	goto	u2231
  1918     013E  2940               	goto	u2230
  1919     013F                     u2231:
  1920     013F  2871               	goto	l2077
  1921     0140                     u2230:
  1922     0140                     l2129:
  1923                           
  1924                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1925     0140  082B               	movf	sprintf@sp,w
  1926     0141  0084               	movwf	4
  1927     0142  1383               	bcf	3,7	;select IRP bank0
  1928     0143  0180               	clrf	0
  1929     0144                     l369:
  1930     0144  0008               	return
  1931     0145                     __end_of_sprintf:
  1932                           
  1933                           	psect	text2
  1934     0B9C                     __ptext2:	
  1935 ;; *************** function ___lwmod *****************
  1936 ;; Defined at:
  1937 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;  divisor         2    8[COMMON] unsigned int 
  1940 ;;  dividend        2   10[COMMON] unsigned int 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  counter         1   13[COMMON] unsigned char 
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  2    8[COMMON] unsigned int 
  1945 ;; Registers used:
  1946 ;;		wreg, status,2, status,0
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1952 ;;      Params:         4       0       0       0       0
  1953 ;;      Locals:         1       0       0       0       0
  1954 ;;      Temps:          1       0       0       0       0
  1955 ;;      Totals:         6       0       0       0       0
  1956 ;;Total ram usage:        6 bytes
  1957 ;; Hardware stack levels used: 1
  1958 ;; This function calls:
  1959 ;;		Nothing
  1960 ;; This function is called by:
  1961 ;;		_sprintf
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965     0B9C                     ___lwmod:	
  1966                           ;psect for function ___lwmod
  1967                           
  1968     0B9C                     l1851:	
  1969                           ;incstack = 0
  1970                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1971                           
  1972     0B9C  0878               	movf	___lwmod@divisor,w
  1973     0B9D  0479               	iorwf	___lwmod@divisor+1,w
  1974     0B9E  1903               	btfsc	3,2
  1975     0B9F  2BA1               	goto	u1841
  1976     0BA0  2BA2               	goto	u1840
  1977     0BA1                     u1841:
  1978     0BA1  2BD1               	goto	l1869
  1979     0BA2                     u1840:
  1980     0BA2                     l1853:
  1981     0BA2  01FD               	clrf	___lwmod@counter
  1982     0BA3  0AFD               	incf	___lwmod@counter,f
  1983     0BA4  2BB0               	goto	l1859
  1984     0BA5                     l1855:
  1985     0BA5  3001               	movlw	1
  1986     0BA6                     u1855:
  1987     0BA6  1003               	clrc
  1988     0BA7  0DF8               	rlf	___lwmod@divisor,f
  1989     0BA8  0DF9               	rlf	___lwmod@divisor+1,f
  1990     0BA9  3EFF               	addlw	-1
  1991     0BAA  1D03               	skipz
  1992     0BAB  2BA6               	goto	u1855
  1993     0BAC                     l1857:
  1994     0BAC  3001               	movlw	1
  1995     0BAD  00FC               	movwf	??___lwmod
  1996     0BAE  087C               	movf	??___lwmod,w
  1997     0BAF  07FD               	addwf	___lwmod@counter,f
  1998     0BB0                     l1859:
  1999     0BB0  1FF9               	btfss	___lwmod@divisor+1,7
  2000     0BB1  2BB3               	goto	u1861
  2001     0BB2  2BB4               	goto	u1860
  2002     0BB3                     u1861:
  2003     0BB3  2BA5               	goto	l1855
  2004     0BB4                     u1860:
  2005     0BB4                     l1861:
  2006     0BB4  0879               	movf	___lwmod@divisor+1,w
  2007     0BB5  027B               	subwf	___lwmod@dividend+1,w
  2008     0BB6  1D03               	skipz
  2009     0BB7  2BBA               	goto	u1875
  2010     0BB8  0878               	movf	___lwmod@divisor,w
  2011     0BB9  027A               	subwf	___lwmod@dividend,w
  2012     0BBA                     u1875:
  2013     0BBA  1C03               	skipc
  2014     0BBB  2BBD               	goto	u1871
  2015     0BBC  2BBE               	goto	u1870
  2016     0BBD                     u1871:
  2017     0BBD  2BC4               	goto	l1865
  2018     0BBE                     u1870:
  2019     0BBE                     l1863:
  2020     0BBE  0878               	movf	___lwmod@divisor,w
  2021     0BBF  02FA               	subwf	___lwmod@dividend,f
  2022     0BC0  0879               	movf	___lwmod@divisor+1,w
  2023     0BC1  1C03               	skipc
  2024     0BC2  03FB               	decf	___lwmod@dividend+1,f
  2025     0BC3  02FB               	subwf	___lwmod@dividend+1,f
  2026     0BC4                     l1865:
  2027     0BC4  3001               	movlw	1
  2028     0BC5                     u1885:
  2029     0BC5  1003               	clrc
  2030     0BC6  0CF9               	rrf	___lwmod@divisor+1,f
  2031     0BC7  0CF8               	rrf	___lwmod@divisor,f
  2032     0BC8  3EFF               	addlw	-1
  2033     0BC9  1D03               	skipz
  2034     0BCA  2BC5               	goto	u1885
  2035     0BCB                     l1867:
  2036     0BCB  3001               	movlw	1
  2037     0BCC  02FD               	subwf	___lwmod@counter,f
  2038     0BCD  1D03               	btfss	3,2
  2039     0BCE  2BD0               	goto	u1891
  2040     0BCF  2BD1               	goto	u1890
  2041     0BD0                     u1891:
  2042     0BD0  2BB4               	goto	l1861
  2043     0BD1                     u1890:
  2044     0BD1                     l1869:
  2045     0BD1  087B               	movf	___lwmod@dividend+1,w
  2046     0BD2  00F9               	movwf	?___lwmod+1
  2047     0BD3  087A               	movf	___lwmod@dividend,w
  2048     0BD4  00F8               	movwf	?___lwmod
  2049     0BD5                     l655:
  2050     0BD5  0008               	return
  2051     0BD6                     __end_of___lwmod:
  2052                           
  2053                           	psect	text3
  2054     0C9A                     __ptext3:	
  2055 ;; *************** function ___lwdiv *****************
  2056 ;; Defined at:
  2057 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  divisor         2    0[COMMON] unsigned int 
  2060 ;;  dividend        2    2[COMMON] unsigned int 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  quotient        2    5[COMMON] unsigned int 
  2063 ;;  counter         1    7[COMMON] unsigned char 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  2    0[COMMON] unsigned int 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2073 ;;      Params:         4       0       0       0       0
  2074 ;;      Locals:         3       0       0       0       0
  2075 ;;      Temps:          1       0       0       0       0
  2076 ;;      Totals:         8       0       0       0       0
  2077 ;;Total ram usage:        8 bytes
  2078 ;; Hardware stack levels used: 1
  2079 ;; This function calls:
  2080 ;;		Nothing
  2081 ;; This function is called by:
  2082 ;;		_sprintf
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086     0C9A                     ___lwdiv:	
  2087                           ;psect for function ___lwdiv
  2088                           
  2089     0C9A                     l1825:	
  2090                           ;incstack = 0
  2091                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2092                           
  2093     0C9A  01F5               	clrf	___lwdiv@quotient
  2094     0C9B  01F6               	clrf	___lwdiv@quotient+1
  2095     0C9C                     l1827:
  2096     0C9C  0870               	movf	___lwdiv@divisor,w
  2097     0C9D  0471               	iorwf	___lwdiv@divisor+1,w
  2098     0C9E  1903               	btfsc	3,2
  2099     0C9F  2CA1               	goto	u1771
  2100     0CA0  2CA2               	goto	u1770
  2101     0CA1                     u1771:
  2102     0CA1  2CD9               	goto	l1847
  2103     0CA2                     u1770:
  2104     0CA2                     l1829:
  2105     0CA2  01F7               	clrf	___lwdiv@counter
  2106     0CA3  0AF7               	incf	___lwdiv@counter,f
  2107     0CA4  2CB0               	goto	l1835
  2108     0CA5                     l1831:
  2109     0CA5  3001               	movlw	1
  2110     0CA6                     u1785:
  2111     0CA6  1003               	clrc
  2112     0CA7  0DF0               	rlf	___lwdiv@divisor,f
  2113     0CA8  0DF1               	rlf	___lwdiv@divisor+1,f
  2114     0CA9  3EFF               	addlw	-1
  2115     0CAA  1D03               	skipz
  2116     0CAB  2CA6               	goto	u1785
  2117     0CAC                     l1833:
  2118     0CAC  3001               	movlw	1
  2119     0CAD  00F4               	movwf	??___lwdiv
  2120     0CAE  0874               	movf	??___lwdiv,w
  2121     0CAF  07F7               	addwf	___lwdiv@counter,f
  2122     0CB0                     l1835:
  2123     0CB0  1FF1               	btfss	___lwdiv@divisor+1,7
  2124     0CB1  2CB3               	goto	u1791
  2125     0CB2  2CB4               	goto	u1790
  2126     0CB3                     u1791:
  2127     0CB3  2CA5               	goto	l1831
  2128     0CB4                     u1790:
  2129     0CB4                     l1837:
  2130     0CB4  3001               	movlw	1
  2131     0CB5                     u1805:
  2132     0CB5  1003               	clrc
  2133     0CB6  0DF5               	rlf	___lwdiv@quotient,f
  2134     0CB7  0DF6               	rlf	___lwdiv@quotient+1,f
  2135     0CB8  3EFF               	addlw	-1
  2136     0CB9  1D03               	skipz
  2137     0CBA  2CB5               	goto	u1805
  2138     0CBB  0871               	movf	___lwdiv@divisor+1,w
  2139     0CBC  0273               	subwf	___lwdiv@dividend+1,w
  2140     0CBD  1D03               	skipz
  2141     0CBE  2CC1               	goto	u1815
  2142     0CBF  0870               	movf	___lwdiv@divisor,w
  2143     0CC0  0272               	subwf	___lwdiv@dividend,w
  2144     0CC1                     u1815:
  2145     0CC1  1C03               	skipc
  2146     0CC2  2CC4               	goto	u1811
  2147     0CC3  2CC5               	goto	u1810
  2148     0CC4                     u1811:
  2149     0CC4  2CCC               	goto	l1843
  2150     0CC5                     u1810:
  2151     0CC5                     l1839:
  2152     0CC5  0870               	movf	___lwdiv@divisor,w
  2153     0CC6  02F2               	subwf	___lwdiv@dividend,f
  2154     0CC7  0871               	movf	___lwdiv@divisor+1,w
  2155     0CC8  1C03               	skipc
  2156     0CC9  03F3               	decf	___lwdiv@dividend+1,f
  2157     0CCA  02F3               	subwf	___lwdiv@dividend+1,f
  2158     0CCB                     l1841:
  2159     0CCB  1475               	bsf	___lwdiv@quotient,0
  2160     0CCC                     l1843:
  2161     0CCC  3001               	movlw	1
  2162     0CCD                     u1825:
  2163     0CCD  1003               	clrc
  2164     0CCE  0CF1               	rrf	___lwdiv@divisor+1,f
  2165     0CCF  0CF0               	rrf	___lwdiv@divisor,f
  2166     0CD0  3EFF               	addlw	-1
  2167     0CD1  1D03               	skipz
  2168     0CD2  2CCD               	goto	u1825
  2169     0CD3                     l1845:
  2170     0CD3  3001               	movlw	1
  2171     0CD4  02F7               	subwf	___lwdiv@counter,f
  2172     0CD5  1D03               	btfss	3,2
  2173     0CD6  2CD8               	goto	u1831
  2174     0CD7  2CD9               	goto	u1830
  2175     0CD8                     u1831:
  2176     0CD8  2CB4               	goto	l1837
  2177     0CD9                     u1830:
  2178     0CD9                     l1847:
  2179     0CD9  0876               	movf	___lwdiv@quotient+1,w
  2180     0CDA  00F1               	movwf	?___lwdiv+1
  2181     0CDB  0875               	movf	___lwdiv@quotient,w
  2182     0CDC  00F0               	movwf	?___lwdiv
  2183     0CDD                     l645:
  2184     0CDD  0008               	return
  2185     0CDE                     __end_of___lwdiv:
  2186                           
  2187                           	psect	text4
  2188     0A48                     __ptext4:	
  2189 ;; *************** function _setup *****************
  2190 ;; Defined at:
  2191 ;;		line 123 in file "master.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;		None
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;		None
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      void 
  2198 ;; Registers used:
  2199 ;;		wreg, status,2, status,0, pclath, cstack
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2205 ;;      Params:         0       0       0       0       0
  2206 ;;      Locals:         0       0       0       0       0
  2207 ;;      Temps:          0       0       0       0       0
  2208 ;;      Totals:         0       0       0       0       0
  2209 ;;Total ram usage:        0 bytes
  2210 ;; Hardware stack levels used: 1
  2211 ;; Hardware stack levels required when called: 1
  2212 ;; This function calls:
  2213 ;;		_I2C_Init_Master
  2214 ;; This function is called by:
  2215 ;;		_main
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219     0A48                     _setup:	
  2220                           ;psect for function _setup
  2221                           
  2222     0A48                     l1887:	
  2223                           ;incstack = 0
  2224                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2225                           
  2226                           
  2227                           ;master.c: 124:     TRISA = 0b01011100;
  2228     0A48  305C               	movlw	92
  2229     0A49  1683               	bsf	3,5	;RP0=1, select bank1
  2230     0A4A  1303               	bcf	3,6	;RP1=0, select bank1
  2231     0A4B  0085               	movwf	5	;volatile
  2232     0A4C                     l1889:
  2233                           
  2234                           ;master.c: 125:     TRISA = 0;
  2235     0A4C  0185               	clrf	5	;volatile
  2236     0A4D                     l1891:
  2237                           
  2238                           ;master.c: 126:     PORTA = 0;
  2239     0A4D  1283               	bcf	3,5	;RP0=0, select bank0
  2240     0A4E  1303               	bcf	3,6	;RP1=0, select bank0
  2241     0A4F  0185               	clrf	5	;volatile
  2242     0A50                     l1893:
  2243                           
  2244                           ;master.c: 127:     ANSEL = 0;
  2245     0A50  1683               	bsf	3,5	;RP0=1, select bank3
  2246     0A51  1703               	bsf	3,6	;RP1=1, select bank3
  2247     0A52  0188               	clrf	8	;volatile
  2248     0A53                     l1895:
  2249                           
  2250                           ;master.c: 128:     ANSELH = 0;
  2251     0A53  0189               	clrf	9	;volatile
  2252     0A54                     l1897:
  2253                           
  2254                           ;master.c: 129:     OSCCONbits.IRCF2 = 0;
  2255     0A54  1683               	bsf	3,5	;RP0=1, select bank1
  2256     0A55  1303               	bcf	3,6	;RP1=0, select bank1
  2257     0A56  130F               	bcf	15,6	;volatile
  2258     0A57                     l1899:
  2259                           
  2260                           ;master.c: 130:     OSCCONbits.IRCF1 = 1;
  2261     0A57  168F               	bsf	15,5	;volatile
  2262     0A58                     l1901:
  2263                           
  2264                           ;master.c: 131:     OSCCONbits.IRCF0 = 0;
  2265     0A58  120F               	bcf	15,4	;volatile
  2266     0A59                     l1903:
  2267                           
  2268                           ;master.c: 133:     I2C_Init_Master(0x80);
  2269     0A59  3080               	movlw	128
  2270     0A5A  120A  158A  227A  120A  158A  	fcall	_I2C_Init_Master
  2271     0A5F                     l103:
  2272     0A5F  0008               	return
  2273     0A60                     __end_of_setup:
  2274                           
  2275                           	psect	text5
  2276     0A7A                     __ptext5:	
  2277 ;; *************** function _I2C_Init_Master *****************
  2278 ;; Defined at:
  2279 ;;		line 4 in file "I2C.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  sp_i2c          1    wreg     unsigned char 
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  sp_i2c          1    0[COMMON] unsigned char 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  1    wreg      void 
  2286 ;; Registers used:
  2287 ;;		wreg, status,2, status,0
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2293 ;;      Params:         0       0       0       0       0
  2294 ;;      Locals:         1       0       0       0       0
  2295 ;;      Temps:          0       0       0       0       0
  2296 ;;      Totals:         1       0       0       0       0
  2297 ;;Total ram usage:        1 bytes
  2298 ;; Hardware stack levels used: 1
  2299 ;; This function calls:
  2300 ;;		Nothing
  2301 ;; This function is called by:
  2302 ;;		_setup
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306     0A7A                     _I2C_Init_Master:	
  2307                           ;psect for function _I2C_Init_Master
  2308                           
  2309                           
  2310                           ;incstack = 0
  2311                           ; Regs used in _I2C_Init_Master: [wreg+status,2+status,0]
  2312                           ;I2C_Init_Master@sp_i2c stored from wreg
  2313     0A7A  00F0               	movwf	I2C_Init_Master@sp_i2c
  2314     0A7B                     l1759:
  2315                           
  2316                           ;I2C.c: 4: void I2C_Init_Master(unsigned char sp_i2c);I2C.c: 5: {;I2C.c: 6:     TRISCbit
      +                          s.TRISC3 = 1;
  2317     0A7B  1683               	bsf	3,5	;RP0=1, select bank1
  2318     0A7C  1303               	bcf	3,6	;RP1=0, select bank1
  2319     0A7D  1587               	bsf	7,3	;volatile
  2320                           
  2321                           ;I2C.c: 7:     TRISCbits.TRISC4 = 1;
  2322     0A7E  1607               	bsf	7,4	;volatile
  2323     0A7F                     l1761:
  2324                           
  2325                           ;I2C.c: 8:     SSPSTAT = sp_i2c;
  2326     0A7F  0870               	movf	I2C_Init_Master@sp_i2c,w
  2327     0A80  0094               	movwf	20	;volatile
  2328                           
  2329                           ;I2C.c: 9:  SSPCON = 0x28;
  2330     0A81  3028               	movlw	40
  2331     0A82  1283               	bcf	3,5	;RP0=0, select bank0
  2332     0A83  1303               	bcf	3,6	;RP1=0, select bank0
  2333     0A84  0094               	movwf	20	;volatile
  2334     0A85                     l1763:
  2335                           
  2336                           ;I2C.c: 10:     SSPCON2 = 0x00;
  2337     0A85  1683               	bsf	3,5	;RP0=1, select bank1
  2338     0A86  1303               	bcf	3,6	;RP1=0, select bank1
  2339     0A87  0191               	clrf	17	;volatile
  2340     0A88                     l1765:
  2341                           
  2342                           ;I2C.c: 11:     if(sp_i2c == 0x80){
  2343     0A88  3080               	movlw	128
  2344     0A89  0670               	xorwf	I2C_Init_Master@sp_i2c,w
  2345     0A8A  1D03               	btfss	3,2
  2346     0A8B  2A8D               	goto	u1671
  2347     0A8C  2A8E               	goto	u1670
  2348     0A8D                     u1671:
  2349     0A8D  2A91               	goto	l1769
  2350     0A8E                     u1670:
  2351     0A8E                     l1767:
  2352                           
  2353                           ;I2C.c: 12:         SSPADD = 19;
  2354     0A8E  3013               	movlw	19
  2355     0A8F  0093               	movwf	19	;volatile
  2356                           
  2357                           ;I2C.c: 13:     }
  2358     0A90  2A98               	goto	l153
  2359     0A91                     l1769:
  2360     0A91  0870               	movf	I2C_Init_Master@sp_i2c,w
  2361     0A92  1D03               	btfss	3,2
  2362     0A93  2A95               	goto	u1681
  2363     0A94  2A96               	goto	u1680
  2364     0A95                     u1681:
  2365     0A95  2A98               	goto	l153
  2366     0A96                     u1680:
  2367     0A96                     l1771:
  2368                           
  2369                           ;I2C.c: 15:         SSPADD = 29;
  2370     0A96  301D               	movlw	29
  2371     0A97  0093               	movwf	19	;volatile
  2372     0A98                     l153:
  2373     0A98  0008               	return
  2374     0A99                     __end_of_I2C_Init_Master:
  2375                           
  2376                           	psect	text6
  2377     0E72                     __ptext6:	
  2378 ;; *************** function _mostrar_hora *****************
  2379 ;; Defined at:
  2380 ;;		line 213 in file "master.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;		None
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;		None
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  1    wreg      void 
  2387 ;; Registers used:
  2388 ;;		wreg, status,2, status,0, pclath, cstack
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2394 ;;      Params:         0       0       0       0       0
  2395 ;;      Locals:         0       0       0       0       0
  2396 ;;      Temps:          1       0       0       0       0
  2397 ;;      Totals:         1       0       0       0       0
  2398 ;;Total ram usage:        1 bytes
  2399 ;; Hardware stack levels used: 1
  2400 ;; Hardware stack levels required when called: 2
  2401 ;; This function calls:
  2402 ;;		_Lcd_Write_Char
  2403 ;; This function is called by:
  2404 ;;		_main
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408     0E72                     _mostrar_hora:	
  2409                           ;psect for function _mostrar_hora
  2410                           
  2411     0E72                     l2017:	
  2412                           ;incstack = 0
  2413                           ; Regs used in _mostrar_hora: [wreg+status,2+status,0+pclath+cstack]
  2414                           
  2415                           
  2416                           ;master.c: 214:     Lcd_Write_Char((hora>>4)+0x30);
  2417     0E72  1283               	bcf	3,5	;RP0=0, select bank0
  2418     0E73  1303               	bcf	3,6	;RP1=0, select bank0
  2419     0E74  0869               	movf	_hora,w
  2420     0E75  00F5               	movwf	??_mostrar_hora
  2421     0E76  3004               	movlw	4
  2422     0E77                     u2055:
  2423     0E77  1003               	clrc
  2424     0E78  0CF5               	rrf	??_mostrar_hora,f
  2425     0E79  3EFF               	addlw	-1
  2426     0E7A  1D03               	skipz
  2427     0E7B  2E77               	goto	u2055
  2428     0E7C  0875               	movf	??_mostrar_hora,w
  2429     0E7D  3E30               	addlw	48
  2430     0E7E  120A  158A  2367  120A  158A  	fcall	_Lcd_Write_Char
  2431                           
  2432                           ;master.c: 215:     Lcd_Write_Char((hora & 0x0F)+0x30);
  2433     0E83  1283               	bcf	3,5	;RP0=0, select bank0
  2434     0E84  1303               	bcf	3,6	;RP1=0, select bank0
  2435     0E85  0869               	movf	_hora,w
  2436     0E86  390F               	andlw	15
  2437     0E87  3E30               	addlw	48
  2438     0E88  120A  158A  2367  120A  158A  	fcall	_Lcd_Write_Char
  2439                           
  2440                           ;master.c: 216:     Lcd_Write_Char(':');
  2441     0E8D  303A               	movlw	58
  2442     0E8E  120A  158A  2367  120A  158A  	fcall	_Lcd_Write_Char
  2443                           
  2444                           ;master.c: 217:     Lcd_Write_Char((min>>4)+0x30);
  2445     0E93  1283               	bcf	3,5	;RP0=0, select bank0
  2446     0E94  1303               	bcf	3,6	;RP1=0, select bank0
  2447     0E95  086A               	movf	_min,w
  2448     0E96  00F5               	movwf	??_mostrar_hora
  2449     0E97  3004               	movlw	4
  2450     0E98                     u2065:
  2451     0E98  1003               	clrc
  2452     0E99  0CF5               	rrf	??_mostrar_hora,f
  2453     0E9A  3EFF               	addlw	-1
  2454     0E9B  1D03               	skipz
  2455     0E9C  2E98               	goto	u2065
  2456     0E9D  0875               	movf	??_mostrar_hora,w
  2457     0E9E  3E30               	addlw	48
  2458     0E9F  120A  158A  2367  120A  158A  	fcall	_Lcd_Write_Char
  2459                           
  2460                           ;master.c: 218:     Lcd_Write_Char((min & 0x0F)+0x30);
  2461     0EA4  1283               	bcf	3,5	;RP0=0, select bank0
  2462     0EA5  1303               	bcf	3,6	;RP1=0, select bank0
  2463     0EA6  086A               	movf	_min,w
  2464     0EA7  390F               	andlw	15
  2465     0EA8  3E30               	addlw	48
  2466     0EA9  120A  158A  2367  120A  158A  	fcall	_Lcd_Write_Char
  2467                           
  2468                           ;master.c: 219:     Lcd_Write_Char(':');
  2469     0EAE  303A               	movlw	58
  2470     0EAF  120A  158A  2367  120A  158A  	fcall	_Lcd_Write_Char
  2471                           
  2472                           ;master.c: 220:     Lcd_Write_Char((sec>>4)+0x30);
  2473     0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  2474     0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  2475     0EB6  086B               	movf	_sec,w
  2476     0EB7  00F5               	movwf	??_mostrar_hora
  2477     0EB8  3004               	movlw	4
  2478     0EB9                     u2075:
  2479     0EB9  1003               	clrc
  2480     0EBA  0CF5               	rrf	??_mostrar_hora,f
  2481     0EBB  3EFF               	addlw	-1
  2482     0EBC  1D03               	skipz
  2483     0EBD  2EB9               	goto	u2075
  2484     0EBE  0875               	movf	??_mostrar_hora,w
  2485     0EBF  3E30               	addlw	48
  2486     0EC0  120A  158A  2367  120A  158A  	fcall	_Lcd_Write_Char
  2487                           
  2488                           ;master.c: 221:     Lcd_Write_Char((sec & 0x0F)+0x30);
  2489     0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  2490     0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  2491     0EC7  086B               	movf	_sec,w
  2492     0EC8  390F               	andlw	15
  2493     0EC9  3E30               	addlw	48
  2494     0ECA  120A  158A  2367  120A  158A  	fcall	_Lcd_Write_Char
  2495     0ECF                     l128:
  2496     0ECF  0008               	return
  2497     0ED0                     __end_of_mostrar_hora:
  2498                           
  2499                           	psect	text7
  2500     0E14                     __ptext7:	
  2501 ;; *************** function _mostrar_fecha *****************
  2502 ;; Defined at:
  2503 ;;		line 224 in file "master.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;		None
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;		None
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  1    wreg      void 
  2510 ;; Registers used:
  2511 ;;		wreg, status,2, status,0, pclath, cstack
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2517 ;;      Params:         0       0       0       0       0
  2518 ;;      Locals:         0       0       0       0       0
  2519 ;;      Temps:          1       0       0       0       0
  2520 ;;      Totals:         1       0       0       0       0
  2521 ;;Total ram usage:        1 bytes
  2522 ;; Hardware stack levels used: 1
  2523 ;; Hardware stack levels required when called: 2
  2524 ;; This function calls:
  2525 ;;		_Lcd_Write_Char
  2526 ;; This function is called by:
  2527 ;;		_main
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531     0E14                     _mostrar_fecha:	
  2532                           ;psect for function _mostrar_fecha
  2533                           
  2534     0E14                     l2041:	
  2535                           ;incstack = 0
  2536                           ; Regs used in _mostrar_fecha: [wreg+status,2+status,0+pclath+cstack]
  2537                           
  2538                           
  2539                           ;master.c: 226:     Lcd_Write_Char((dia>>4)+0x30);
  2540     0E14  1283               	bcf	3,5	;RP0=0, select bank0
  2541     0E15  1303               	bcf	3,6	;RP1=0, select bank0
  2542     0E16  0868               	movf	_dia,w
  2543     0E17  00F5               	movwf	??_mostrar_fecha
  2544     0E18  3004               	movlw	4
  2545     0E19                     u2085:
  2546     0E19  1003               	clrc
  2547     0E1A  0CF5               	rrf	??_mostrar_fecha,f
  2548     0E1B  3EFF               	addlw	-1
  2549     0E1C  1D03               	skipz
  2550     0E1D  2E19               	goto	u2085
  2551     0E1E  0875               	movf	??_mostrar_fecha,w
  2552     0E1F  3E30               	addlw	48
  2553     0E20  120A  158A  2367  120A  158A  	fcall	_Lcd_Write_Char
  2554                           
  2555                           ;master.c: 227:     Lcd_Write_Char((dia & 0x0F)+0x30);
  2556     0E25  1283               	bcf	3,5	;RP0=0, select bank0
  2557     0E26  1303               	bcf	3,6	;RP1=0, select bank0
  2558     0E27  0868               	movf	_dia,w
  2559     0E28  390F               	andlw	15
  2560     0E29  3E30               	addlw	48
  2561     0E2A  120A  158A  2367  120A  158A  	fcall	_Lcd_Write_Char
  2562                           
  2563                           ;master.c: 228:     Lcd_Write_Char('/');
  2564     0E2F  302F               	movlw	47
  2565     0E30  120A  158A  2367  120A  158A  	fcall	_Lcd_Write_Char
  2566                           
  2567                           ;master.c: 229:     Lcd_Write_Char((mes>>4)+0x30);
  2568     0E35  1283               	bcf	3,5	;RP0=0, select bank0
  2569     0E36  1303               	bcf	3,6	;RP1=0, select bank0
  2570     0E37  0867               	movf	_mes,w
  2571     0E38  00F5               	movwf	??_mostrar_fecha
  2572     0E39  3004               	movlw	4
  2573     0E3A                     u2095:
  2574     0E3A  1003               	clrc
  2575     0E3B  0CF5               	rrf	??_mostrar_fecha,f
  2576     0E3C  3EFF               	addlw	-1
  2577     0E3D  1D03               	skipz
  2578     0E3E  2E3A               	goto	u2095
  2579     0E3F  0875               	movf	??_mostrar_fecha,w
  2580     0E40  3E30               	addlw	48
  2581     0E41  120A  158A  2367  120A  158A  	fcall	_Lcd_Write_Char
  2582                           
  2583                           ;master.c: 230:     Lcd_Write_Char((mes & 0x0F)+0x30);
  2584     0E46  1283               	bcf	3,5	;RP0=0, select bank0
  2585     0E47  1303               	bcf	3,6	;RP1=0, select bank0
  2586     0E48  0867               	movf	_mes,w
  2587     0E49  390F               	andlw	15
  2588     0E4A  3E30               	addlw	48
  2589     0E4B  120A  158A  2367  120A  158A  	fcall	_Lcd_Write_Char
  2590                           
  2591                           ;master.c: 231:     Lcd_Write_Char ('/');
  2592     0E50  302F               	movlw	47
  2593     0E51  120A  158A  2367  120A  158A  	fcall	_Lcd_Write_Char
  2594                           
  2595                           ;master.c: 232:     Lcd_Write_Char ((anio>>4)+0x30);
  2596     0E56  1283               	bcf	3,5	;RP0=0, select bank0
  2597     0E57  1303               	bcf	3,6	;RP1=0, select bank0
  2598     0E58  0866               	movf	_anio,w
  2599     0E59  00F5               	movwf	??_mostrar_fecha
  2600     0E5A  3004               	movlw	4
  2601     0E5B                     u2105:
  2602     0E5B  1003               	clrc
  2603     0E5C  0CF5               	rrf	??_mostrar_fecha,f
  2604     0E5D  3EFF               	addlw	-1
  2605     0E5E  1D03               	skipz
  2606     0E5F  2E5B               	goto	u2105
  2607     0E60  0875               	movf	??_mostrar_fecha,w
  2608     0E61  3E30               	addlw	48
  2609     0E62  120A  158A  2367  120A  158A  	fcall	_Lcd_Write_Char
  2610                           
  2611                           ;master.c: 233:     Lcd_Write_Char ((anio & 0x0F)+0x30);
  2612     0E67  1283               	bcf	3,5	;RP0=0, select bank0
  2613     0E68  1303               	bcf	3,6	;RP1=0, select bank0
  2614     0E69  0866               	movf	_anio,w
  2615     0E6A  390F               	andlw	15
  2616     0E6B  3E30               	addlw	48
  2617     0E6C  120A  158A  2367  120A  158A  	fcall	_Lcd_Write_Char
  2618     0E71                     l131:
  2619     0E71  0008               	return
  2620     0E72                     __end_of_mostrar_fecha:
  2621                           
  2622                           	psect	text8
  2623     0D6D                     __ptext8:	
  2624 ;; *************** function _leer_hora *****************
  2625 ;; Defined at:
  2626 ;;		line 169 in file "master.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;		None
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;		None
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      void 
  2633 ;; Registers used:
  2634 ;;		wreg, status,2, status,0, pclath, cstack
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2640 ;;      Params:         0       0       0       0       0
  2641 ;;      Locals:         0       0       0       0       0
  2642 ;;      Temps:          0       0       0       0       0
  2643 ;;      Totals:         0       0       0       0       0
  2644 ;;Total ram usage:        0 bytes
  2645 ;; Hardware stack levels used: 1
  2646 ;; Hardware stack levels required when called: 1
  2647 ;; This function calls:
  2648 ;;		_I2C_Ack
  2649 ;;		_I2C_Nack
  2650 ;;		_I2C_Read
  2651 ;;		_I2C_Restart
  2652 ;;		_I2C_Start
  2653 ;;		_I2C_Stop
  2654 ;;		_I2C_Write
  2655 ;; This function is called by:
  2656 ;;		_main
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660     0D6D                     _leer_hora:	
  2661                           ;psect for function _leer_hora
  2662                           
  2663     0D6D                     l1995:	
  2664                           ;incstack = 0
  2665                           ; Regs used in _leer_hora: [wreg+status,2+status,0+pclath+cstack]
  2666                           
  2667                           
  2668                           ;master.c: 171:     I2C_Start();
  2669     0D6D  120A  158A  21CD  120A  158A  	fcall	_I2C_Start
  2670     0D72                     l1997:
  2671                           
  2672                           ;master.c: 172:     I2C_Write(0xD0);
  2673     0D72  30D0               	movlw	208
  2674     0D73  120A  158A  2219  120A  158A  	fcall	_I2C_Write
  2675     0D78                     l1999:
  2676                           
  2677                           ;master.c: 173:     I2C_Write(0x00);
  2678     0D78  3000               	movlw	0
  2679     0D79  120A  158A  2219  120A  158A  	fcall	_I2C_Write
  2680                           
  2681                           ;master.c: 174:     I2C_Restart();
  2682     0D7E  120A  158A  21E1  120A  158A  	fcall	_I2C_Restart
  2683     0D83                     l2001:
  2684                           
  2685                           ;master.c: 175:     I2C_Write(0xD1);
  2686     0D83  30D1               	movlw	209
  2687     0D84  120A  158A  2219  120A  158A  	fcall	_I2C_Write
  2688     0D89                     l2003:
  2689                           
  2690                           ;master.c: 176:     sec = I2C_Read();
  2691     0D89  120A  158A  2201  120A  158A  	fcall	_I2C_Read
  2692     0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  2693     0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  2694     0D90  00EB               	movwf	_sec
  2695     0D91                     l2005:
  2696                           
  2697                           ;master.c: 177:     I2C_Ack();
  2698     0D91  120A  158A  21EB  120A  158A  	fcall	_I2C_Ack
  2699     0D96                     l2007:
  2700                           
  2701                           ;master.c: 178:     min = I2C_Read();
  2702     0D96  120A  158A  2201  120A  158A  	fcall	_I2C_Read
  2703     0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  2704     0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  2705     0D9D  00EA               	movwf	_min
  2706     0D9E                     l2009:
  2707                           
  2708                           ;master.c: 179:     I2C_Ack();
  2709     0D9E  120A  158A  21EB  120A  158A  	fcall	_I2C_Ack
  2710     0DA3                     l2011:
  2711                           
  2712                           ;master.c: 180:     hora = I2C_Read();
  2713     0DA3  120A  158A  2201  120A  158A  	fcall	_I2C_Read
  2714     0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  2715     0DA9  1303               	bcf	3,6	;RP1=0, select bank0
  2716     0DAA  00E9               	movwf	_hora
  2717     0DAB                     l2013:
  2718                           
  2719                           ;master.c: 181:     I2C_Nack();
  2720     0DAB  120A  158A  21F6  120A  158A  	fcall	_I2C_Nack
  2721     0DB0                     l2015:
  2722                           
  2723                           ;master.c: 182:     I2C_Stop();
  2724     0DB0  120A  158A  21D7  120A  158A  	fcall	_I2C_Stop
  2725     0DB5                     l119:
  2726     0DB5  0008               	return
  2727     0DB6                     __end_of_leer_hora:
  2728                           
  2729                           	psect	text9
  2730     0D24                     __ptext9:	
  2731 ;; *************** function _leer_fecha *****************
  2732 ;; Defined at:
  2733 ;;		line 196 in file "master.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;		None
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;		None
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  1    wreg      void 
  2740 ;; Registers used:
  2741 ;;		wreg, status,2, status,0, pclath, cstack
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2747 ;;      Params:         0       0       0       0       0
  2748 ;;      Locals:         0       0       0       0       0
  2749 ;;      Temps:          0       0       0       0       0
  2750 ;;      Totals:         0       0       0       0       0
  2751 ;;Total ram usage:        0 bytes
  2752 ;; Hardware stack levels used: 1
  2753 ;; Hardware stack levels required when called: 1
  2754 ;; This function calls:
  2755 ;;		_I2C_Ack
  2756 ;;		_I2C_Nack
  2757 ;;		_I2C_Read
  2758 ;;		_I2C_Restart
  2759 ;;		_I2C_Start
  2760 ;;		_I2C_Stop
  2761 ;;		_I2C_Write
  2762 ;; This function is called by:
  2763 ;;		_main
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767     0D24                     _leer_fecha:	
  2768                           ;psect for function _leer_fecha
  2769                           
  2770     0D24                     l2019:	
  2771                           ;incstack = 0
  2772                           ; Regs used in _leer_fecha: [wreg+status,2+status,0+pclath+cstack]
  2773                           
  2774                           
  2775                           ;master.c: 198:     I2C_Start();
  2776     0D24  120A  158A  21CD  120A  158A  	fcall	_I2C_Start
  2777     0D29                     l2021:
  2778                           
  2779                           ;master.c: 199:     I2C_Write(0xD0);
  2780     0D29  30D0               	movlw	208
  2781     0D2A  120A  158A  2219  120A  158A  	fcall	_I2C_Write
  2782     0D2F                     l2023:
  2783                           
  2784                           ;master.c: 200:     I2C_Write(0x04);
  2785     0D2F  3004               	movlw	4
  2786     0D30  120A  158A  2219  120A  158A  	fcall	_I2C_Write
  2787                           
  2788                           ;master.c: 201:     I2C_Restart();
  2789     0D35  120A  158A  21E1  120A  158A  	fcall	_I2C_Restart
  2790     0D3A                     l2025:
  2791                           
  2792                           ;master.c: 202:     I2C_Write(0xD1);
  2793     0D3A  30D1               	movlw	209
  2794     0D3B  120A  158A  2219  120A  158A  	fcall	_I2C_Write
  2795     0D40                     l2027:
  2796                           
  2797                           ;master.c: 203:     dia = I2C_Read();
  2798     0D40  120A  158A  2201  120A  158A  	fcall	_I2C_Read
  2799     0D45  1283               	bcf	3,5	;RP0=0, select bank0
  2800     0D46  1303               	bcf	3,6	;RP1=0, select bank0
  2801     0D47  00E8               	movwf	_dia
  2802     0D48                     l2029:
  2803                           
  2804                           ;master.c: 204:     I2C_Ack();
  2805     0D48  120A  158A  21EB  120A  158A  	fcall	_I2C_Ack
  2806     0D4D                     l2031:
  2807                           
  2808                           ;master.c: 205:     mes = I2C_Read();
  2809     0D4D  120A  158A  2201  120A  158A  	fcall	_I2C_Read
  2810     0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2811     0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2812     0D54  00E7               	movwf	_mes
  2813     0D55                     l2033:
  2814                           
  2815                           ;master.c: 206:     I2C_Ack();
  2816     0D55  120A  158A  21EB  120A  158A  	fcall	_I2C_Ack
  2817     0D5A                     l2035:
  2818                           
  2819                           ;master.c: 207:     anio = I2C_Read();
  2820     0D5A  120A  158A  2201  120A  158A  	fcall	_I2C_Read
  2821     0D5F  1283               	bcf	3,5	;RP0=0, select bank0
  2822     0D60  1303               	bcf	3,6	;RP1=0, select bank0
  2823     0D61  00E6               	movwf	_anio
  2824     0D62                     l2037:
  2825                           
  2826                           ;master.c: 208:     I2C_Nack();
  2827     0D62  120A  158A  21F6  120A  158A  	fcall	_I2C_Nack
  2828     0D67                     l2039:
  2829                           
  2830                           ;master.c: 209:     I2C_Stop();
  2831     0D67  120A  158A  21D7  120A  158A  	fcall	_I2C_Stop
  2832     0D6C                     l125:
  2833     0D6C  0008               	return
  2834     0D6D                     __end_of_leer_fecha:
  2835                           
  2836                           	psect	text10
  2837     09E1                     __ptext10:	
  2838 ;; *************** function _I2C_Restart *****************
  2839 ;; Defined at:
  2840 ;;		line 33 in file "I2C.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;		None
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		None
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2854 ;;      Params:         0       0       0       0       0
  2855 ;;      Locals:         0       0       0       0       0
  2856 ;;      Temps:          0       0       0       0       0
  2857 ;;      Totals:         0       0       0       0       0
  2858 ;;Total ram usage:        0 bytes
  2859 ;; Hardware stack levels used: 1
  2860 ;; This function calls:
  2861 ;;		Nothing
  2862 ;; This function is called by:
  2863 ;;		_leer_hora
  2864 ;;		_leer_fecha
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868     09E1                     _I2C_Restart:	
  2869                           ;psect for function _I2C_Restart
  2870                           
  2871     09E1                     l1783:	
  2872                           ;incstack = 0
  2873                           ; Regs used in _I2C_Restart: []
  2874                           
  2875                           
  2876                           ;I2C.c: 35:     SSPCON2bits.RSEN = 1;
  2877     09E1  1683               	bsf	3,5	;RP0=1, select bank1
  2878     09E2  1303               	bcf	3,6	;RP1=0, select bank1
  2879     09E3  1491               	bsf	17,1	;volatile
  2880     09E4                     l168:	
  2881                           ;I2C.c: 36:     while(PIR1bits.SSPIF == 0);
  2882                           
  2883     09E4  1283               	bcf	3,5	;RP0=0, select bank0
  2884     09E5  1D8C               	btfss	12,3	;volatile
  2885     09E6  29E8               	goto	u1721
  2886     09E7  29E9               	goto	u1720
  2887     09E8                     u1721:
  2888     09E8  29E4               	goto	l168
  2889     09E9                     u1720:
  2890     09E9                     l170:
  2891                           
  2892                           ;I2C.c: 37:     PIR1bits.SSPIF = 0;
  2893     09E9  118C               	bcf	12,3	;volatile
  2894     09EA                     l171:
  2895     09EA  0008               	return
  2896     09EB                     __end_of_I2C_Restart:
  2897                           
  2898                           	psect	text11
  2899     0A01                     __ptext11:	
  2900 ;; *************** function _I2C_Read *****************
  2901 ;; Defined at:
  2902 ;;		line 65 in file "I2C.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;		None
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;		None
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      unsigned char 
  2909 ;; Registers used:
  2910 ;;		wreg
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2916 ;;      Params:         0       0       0       0       0
  2917 ;;      Locals:         0       0       0       0       0
  2918 ;;      Temps:          0       0       0       0       0
  2919 ;;      Totals:         0       0       0       0       0
  2920 ;;Total ram usage:        0 bytes
  2921 ;; Hardware stack levels used: 1
  2922 ;; This function calls:
  2923 ;;		Nothing
  2924 ;; This function is called by:
  2925 ;;		_leer_hora
  2926 ;;		_leer_fecha
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930     0A01                     _I2C_Read:	
  2931                           ;psect for function _I2C_Read
  2932                           
  2933     0A01                     l1785:	
  2934                           ;incstack = 0
  2935                           ; Regs used in _I2C_Read: [wreg]
  2936                           
  2937                           
  2938                           ;I2C.c: 67:     SSPCON2bits.RCEN = 1;
  2939     0A01  1683               	bsf	3,5	;RP0=1, select bank1
  2940     0A02  1303               	bcf	3,6	;RP1=0, select bank1
  2941     0A03  1591               	bsf	17,3	;volatile
  2942     0A04                     l192:	
  2943                           ;I2C.c: 68:     while(PIR1bits.SSPIF == 0);
  2944                           
  2945     0A04  1283               	bcf	3,5	;RP0=0, select bank0
  2946     0A05  1D8C               	btfss	12,3	;volatile
  2947     0A06  2A08               	goto	u1731
  2948     0A07  2A09               	goto	u1730
  2949     0A08                     u1731:
  2950     0A08  2A04               	goto	l192
  2951     0A09                     u1730:
  2952     0A09                     l194:
  2953                           
  2954                           ;I2C.c: 69:     PIR1bits.SSPIF = 0;
  2955     0A09  118C               	bcf	12,3	;volatile
  2956     0A0A                     l1787:
  2957                           
  2958                           ;I2C.c: 70:     return SSPBUF;
  2959     0A0A  0813               	movf	19,w	;volatile
  2960     0A0B                     l195:
  2961     0A0B  0008               	return
  2962     0A0C                     __end_of_I2C_Read:
  2963                           
  2964                           	psect	text12
  2965     09F6                     __ptext12:	
  2966 ;; *************** function _I2C_Nack *****************
  2967 ;; Defined at:
  2968 ;;		line 48 in file "I2C.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;		None
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;		None
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		None
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2982 ;;      Params:         0       0       0       0       0
  2983 ;;      Locals:         0       0       0       0       0
  2984 ;;      Temps:          0       0       0       0       0
  2985 ;;      Totals:         0       0       0       0       0
  2986 ;;Total ram usage:        0 bytes
  2987 ;; Hardware stack levels used: 1
  2988 ;; This function calls:
  2989 ;;		Nothing
  2990 ;; This function is called by:
  2991 ;;		_leer_hora
  2992 ;;		_leer_fecha
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996     09F6                     _I2C_Nack:	
  2997                           ;psect for function _I2C_Nack
  2998                           
  2999     09F6                     l1793:	
  3000                           ;incstack = 0
  3001                           ; Regs used in _I2C_Nack: []
  3002                           
  3003                           
  3004                           ;I2C.c: 50:     SSPCON2bits.ACKDT = 1;
  3005     09F6  1683               	bsf	3,5	;RP0=1, select bank1
  3006     09F7  1303               	bcf	3,6	;RP1=0, select bank1
  3007     09F8  1691               	bsf	17,5	;volatile
  3008                           
  3009                           ;I2C.c: 51:  SSPCON2bits.ACKEN = 1;
  3010     09F9  1611               	bsf	17,4	;volatile
  3011     09FA                     l180:	
  3012                           ;I2C.c: 52:  while(PIR1bits.SSPIF == 0);
  3013                           
  3014     09FA  1283               	bcf	3,5	;RP0=0, select bank0
  3015     09FB  1D8C               	btfss	12,3	;volatile
  3016     09FC  29FE               	goto	u1751
  3017     09FD  29FF               	goto	u1750
  3018     09FE                     u1751:
  3019     09FE  29FA               	goto	l180
  3020     09FF                     u1750:
  3021     09FF                     l182:
  3022                           
  3023                           ;I2C.c: 53:     PIR1bits.SSPIF = 0;
  3024     09FF  118C               	bcf	12,3	;volatile
  3025     0A00                     l183:
  3026     0A00  0008               	return
  3027     0A01                     __end_of_I2C_Nack:
  3028                           
  3029                           	psect	text13
  3030     09EB                     __ptext13:	
  3031 ;; *************** function _I2C_Ack *****************
  3032 ;; Defined at:
  3033 ;;		line 40 in file "I2C.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;		None
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;		None
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  1    wreg      void 
  3040 ;; Registers used:
  3041 ;;		None
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3047 ;;      Params:         0       0       0       0       0
  3048 ;;      Locals:         0       0       0       0       0
  3049 ;;      Temps:          0       0       0       0       0
  3050 ;;      Totals:         0       0       0       0       0
  3051 ;;Total ram usage:        0 bytes
  3052 ;; Hardware stack levels used: 1
  3053 ;; This function calls:
  3054 ;;		Nothing
  3055 ;; This function is called by:
  3056 ;;		_leer_hora
  3057 ;;		_leer_fecha
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061     09EB                     _I2C_Ack:	
  3062                           ;psect for function _I2C_Ack
  3063                           
  3064     09EB                     l1791:	
  3065                           ;incstack = 0
  3066                           ; Regs used in _I2C_Ack: []
  3067                           
  3068                           
  3069                           ;I2C.c: 42:     SSPCON2bits.ACKDT = 0;
  3070     09EB  1683               	bsf	3,5	;RP0=1, select bank1
  3071     09EC  1303               	bcf	3,6	;RP1=0, select bank1
  3072     09ED  1291               	bcf	17,5	;volatile
  3073                           
  3074                           ;I2C.c: 43:  SSPCON2bits.ACKEN = 1;
  3075     09EE  1611               	bsf	17,4	;volatile
  3076     09EF                     l174:	
  3077                           ;I2C.c: 44:  while(PIR1bits.SSPIF == 0);
  3078                           
  3079     09EF  1283               	bcf	3,5	;RP0=0, select bank0
  3080     09F0  1D8C               	btfss	12,3	;volatile
  3081     09F1  29F3               	goto	u1741
  3082     09F2  29F4               	goto	u1740
  3083     09F3                     u1741:
  3084     09F3  29EF               	goto	l174
  3085     09F4                     u1740:
  3086     09F4                     l176:
  3087                           
  3088                           ;I2C.c: 45:     PIR1bits.SSPIF = 0;
  3089     09F4  118C               	bcf	12,3	;volatile
  3090     09F5                     l177:
  3091     09F5  0008               	return
  3092     09F6                     __end_of_I2C_Ack:
  3093                           
  3094                           	psect	text14
  3095     0B38                     __ptext14:	
  3096 ;; *************** function _enviar_hora *****************
  3097 ;; Defined at:
  3098 ;;		line 158 in file "master.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;		None
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;		None
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      void 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, status,0, pclath, cstack
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3112 ;;      Params:         0       0       0       0       0
  3113 ;;      Locals:         0       0       0       0       0
  3114 ;;      Temps:          0       0       0       0       0
  3115 ;;      Totals:         0       0       0       0       0
  3116 ;;Total ram usage:        0 bytes
  3117 ;; Hardware stack levels used: 1
  3118 ;; Hardware stack levels required when called: 1
  3119 ;; This function calls:
  3120 ;;		_I2C_Start
  3121 ;;		_I2C_Stop
  3122 ;;		_I2C_Write
  3123 ;; This function is called by:
  3124 ;;		_main
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           
  3128     0B38                     _enviar_hora:	
  3129                           ;psect for function _enviar_hora
  3130                           
  3131     0B38                     l1933:	
  3132                           ;incstack = 0
  3133                           ; Regs used in _enviar_hora: [wreg+status,2+status,0+pclath+cstack]
  3134                           
  3135                           
  3136                           ;master.c: 160:     I2C_Start();
  3137     0B38  120A  158A  21CD  120A  158A  	fcall	_I2C_Start
  3138     0B3D                     l1935:
  3139                           
  3140                           ;master.c: 161:     I2C_Write(0xD0);
  3141     0B3D  30D0               	movlw	208
  3142     0B3E  120A  158A  2219  120A  158A  	fcall	_I2C_Write
  3143     0B43                     l1937:
  3144                           
  3145                           ;master.c: 162:     I2C_Write(0x00);
  3146     0B43  3000               	movlw	0
  3147     0B44  120A  158A  2219  120A  158A  	fcall	_I2C_Write
  3148     0B49                     l1939:
  3149                           
  3150                           ;master.c: 163:     I2C_Write(sec);
  3151     0B49  1283               	bcf	3,5	;RP0=0, select bank0
  3152     0B4A  1303               	bcf	3,6	;RP1=0, select bank0
  3153     0B4B  086B               	movf	_sec,w
  3154     0B4C  120A  158A  2219  120A  158A  	fcall	_I2C_Write
  3155     0B51                     l1941:
  3156                           
  3157                           ;master.c: 164:     I2C_Write(min);
  3158     0B51  1283               	bcf	3,5	;RP0=0, select bank0
  3159     0B52  1303               	bcf	3,6	;RP1=0, select bank0
  3160     0B53  086A               	movf	_min,w
  3161     0B54  120A  158A  2219  120A  158A  	fcall	_I2C_Write
  3162     0B59                     l1943:
  3163                           
  3164                           ;master.c: 165:     I2C_Write(hora);
  3165     0B59  1283               	bcf	3,5	;RP0=0, select bank0
  3166     0B5A  1303               	bcf	3,6	;RP1=0, select bank0
  3167     0B5B  0869               	movf	_hora,w
  3168     0B5C  120A  158A  2219  120A  158A  	fcall	_I2C_Write
  3169     0B61                     l1945:
  3170                           
  3171                           ;master.c: 166:     I2C_Stop();
  3172     0B61  120A  158A  21D7  120A  158A  	fcall	_I2C_Stop
  3173     0B66                     l116:
  3174     0B66  0008               	return
  3175     0B67                     __end_of_enviar_hora:
  3176                           
  3177                           	psect	text15
  3178     0B09                     __ptext15:	
  3179 ;; *************** function _enviar_fecha *****************
  3180 ;; Defined at:
  3181 ;;		line 185 in file "master.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;		None
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;		None
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      void 
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, status,0, pclath, cstack
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3195 ;;      Params:         0       0       0       0       0
  3196 ;;      Locals:         0       0       0       0       0
  3197 ;;      Temps:          0       0       0       0       0
  3198 ;;      Totals:         0       0       0       0       0
  3199 ;;Total ram usage:        0 bytes
  3200 ;; Hardware stack levels used: 1
  3201 ;; Hardware stack levels required when called: 1
  3202 ;; This function calls:
  3203 ;;		_I2C_Start
  3204 ;;		_I2C_Stop
  3205 ;;		_I2C_Write
  3206 ;; This function is called by:
  3207 ;;		_main
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211     0B09                     _enviar_fecha:	
  3212                           ;psect for function _enviar_fecha
  3213                           
  3214     0B09                     l1961:	
  3215                           ;incstack = 0
  3216                           ; Regs used in _enviar_fecha: [wreg+status,2+status,0+pclath+cstack]
  3217                           
  3218                           
  3219                           ;master.c: 187:     I2C_Start();
  3220     0B09  120A  158A  21CD  120A  158A  	fcall	_I2C_Start
  3221     0B0E                     l1963:
  3222                           
  3223                           ;master.c: 188:     I2C_Write(0xD0);
  3224     0B0E  30D0               	movlw	208
  3225     0B0F  120A  158A  2219  120A  158A  	fcall	_I2C_Write
  3226     0B14                     l1965:
  3227                           
  3228                           ;master.c: 189:     I2C_Write(0x04);
  3229     0B14  3004               	movlw	4
  3230     0B15  120A  158A  2219  120A  158A  	fcall	_I2C_Write
  3231     0B1A                     l1967:
  3232                           
  3233                           ;master.c: 190:     I2C_Write(dia);
  3234     0B1A  1283               	bcf	3,5	;RP0=0, select bank0
  3235     0B1B  1303               	bcf	3,6	;RP1=0, select bank0
  3236     0B1C  0868               	movf	_dia,w
  3237     0B1D  120A  158A  2219  120A  158A  	fcall	_I2C_Write
  3238     0B22                     l1969:
  3239                           
  3240                           ;master.c: 191:     I2C_Write(mes);
  3241     0B22  1283               	bcf	3,5	;RP0=0, select bank0
  3242     0B23  1303               	bcf	3,6	;RP1=0, select bank0
  3243     0B24  0867               	movf	_mes,w
  3244     0B25  120A  158A  2219  120A  158A  	fcall	_I2C_Write
  3245     0B2A                     l1971:
  3246                           
  3247                           ;master.c: 192:     I2C_Write(anio);
  3248     0B2A  1283               	bcf	3,5	;RP0=0, select bank0
  3249     0B2B  1303               	bcf	3,6	;RP1=0, select bank0
  3250     0B2C  0866               	movf	_anio,w
  3251     0B2D  120A  158A  2219  120A  158A  	fcall	_I2C_Write
  3252     0B32                     l1973:
  3253                           
  3254                           ;master.c: 193:     I2C_Stop();
  3255     0B32  120A  158A  21D7  120A  158A  	fcall	_I2C_Stop
  3256     0B37                     l122:
  3257     0B37  0008               	return
  3258     0B38                     __end_of_enviar_fecha:
  3259                           
  3260                           	psect	text16
  3261     0A19                     __ptext16:	
  3262 ;; *************** function _I2C_Write *****************
  3263 ;; Defined at:
  3264 ;;		line 56 in file "I2C.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  data            1    wreg     unsigned char 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;  data            1    0[COMMON] unsigned char 
  3269 ;;  b_ok            2    0        short 
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  2   52[None  ] short 
  3272 ;; Registers used:
  3273 ;;		wreg
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3279 ;;      Params:         0       0       0       0       0
  3280 ;;      Locals:         1       0       0       0       0
  3281 ;;      Temps:          0       0       0       0       0
  3282 ;;      Totals:         1       0       0       0       0
  3283 ;;Total ram usage:        1 bytes
  3284 ;; Hardware stack levels used: 1
  3285 ;; This function calls:
  3286 ;;		Nothing
  3287 ;; This function is called by:
  3288 ;;		_enviar_hora
  3289 ;;		_leer_hora
  3290 ;;		_enviar_fecha
  3291 ;;		_leer_fecha
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295     0A19                     _I2C_Write:	
  3296                           ;psect for function _I2C_Write
  3297                           
  3298                           
  3299                           ;incstack = 0
  3300                           ; Regs used in _I2C_Write: [wreg]
  3301                           ;I2C_Write@data stored from wreg
  3302     0A19  00F0               	movwf	I2C_Write@data
  3303     0A1A                     l1775:
  3304                           
  3305                           ;I2C.c: 56: short I2C_Write(char data);I2C.c: 57: {;I2C.c: 58:     SSPBUF = data;
  3306     0A1A  0870               	movf	I2C_Write@data,w
  3307     0A1B  1283               	bcf	3,5	;RP0=0, select bank0
  3308     0A1C  1303               	bcf	3,6	;RP1=0, select bank0
  3309     0A1D  0093               	movwf	19	;volatile
  3310     0A1E                     l186:	
  3311                           ;I2C.c: 59:     while(PIR1bits.SSPIF == 0);
  3312                           
  3313     0A1E  1D8C               	btfss	12,3	;volatile
  3314     0A1F  2A21               	goto	u1701
  3315     0A20  2A22               	goto	u1700
  3316     0A21                     u1701:
  3317     0A21  2A1E               	goto	l186
  3318     0A22                     u1700:
  3319     0A22                     l188:
  3320                           
  3321                           ;I2C.c: 60:     PIR1bits.SSPIF = 0;
  3322     0A22  118C               	bcf	12,3	;volatile
  3323     0A23                     l1777:
  3324     0A23  1683               	bsf	3,5	;RP0=1, select bank1
  3325     0A24  1303               	bcf	3,6	;RP1=0, select bank1
  3326     0A25  0811               	movf	17,w	;volatile
  3327     0A26                     l189:
  3328     0A26  0008               	return
  3329     0A27                     __end_of_I2C_Write:
  3330                           
  3331                           	psect	text17
  3332     09D7                     __ptext17:	
  3333 ;; *************** function _I2C_Stop *****************
  3334 ;; Defined at:
  3335 ;;		line 26 in file "I2C.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;		None
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;		None
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  1    wreg      void 
  3342 ;; Registers used:
  3343 ;;		None
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3349 ;;      Params:         0       0       0       0       0
  3350 ;;      Locals:         0       0       0       0       0
  3351 ;;      Temps:          0       0       0       0       0
  3352 ;;      Totals:         0       0       0       0       0
  3353 ;;Total ram usage:        0 bytes
  3354 ;; Hardware stack levels used: 1
  3355 ;; This function calls:
  3356 ;;		Nothing
  3357 ;; This function is called by:
  3358 ;;		_enviar_hora
  3359 ;;		_leer_hora
  3360 ;;		_enviar_fecha
  3361 ;;		_leer_fecha
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365     09D7                     _I2C_Stop:	
  3366                           ;psect for function _I2C_Stop
  3367                           
  3368     09D7                     l1781:	
  3369                           ;incstack = 0
  3370                           ; Regs used in _I2C_Stop: []
  3371                           
  3372                           
  3373                           ;I2C.c: 28:     SSPCON2bits.PEN = 1;
  3374     09D7  1683               	bsf	3,5	;RP0=1, select bank1
  3375     09D8  1303               	bcf	3,6	;RP1=0, select bank1
  3376     09D9  1511               	bsf	17,2	;volatile
  3377     09DA                     l162:	
  3378                           ;I2C.c: 29:     while(PIR1bits.SSPIF == 0);
  3379                           
  3380     09DA  1283               	bcf	3,5	;RP0=0, select bank0
  3381     09DB  1D8C               	btfss	12,3	;volatile
  3382     09DC  29DE               	goto	u1711
  3383     09DD  29DF               	goto	u1710
  3384     09DE                     u1711:
  3385     09DE  29DA               	goto	l162
  3386     09DF                     u1710:
  3387     09DF                     l164:
  3388                           
  3389                           ;I2C.c: 30:     PIR1bits.SSPIF = 0;
  3390     09DF  118C               	bcf	12,3	;volatile
  3391     09E0                     l165:
  3392     09E0  0008               	return
  3393     09E1                     __end_of_I2C_Stop:
  3394                           
  3395                           	psect	text18
  3396     09CD                     __ptext18:	
  3397 ;; *************** function _I2C_Start *****************
  3398 ;; Defined at:
  3399 ;;		line 19 in file "I2C.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;		None
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;		None
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  1    wreg      void 
  3406 ;; Registers used:
  3407 ;;		None
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3413 ;;      Params:         0       0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0
  3416 ;;      Totals:         0       0       0       0       0
  3417 ;;Total ram usage:        0 bytes
  3418 ;; Hardware stack levels used: 1
  3419 ;; This function calls:
  3420 ;;		Nothing
  3421 ;; This function is called by:
  3422 ;;		_enviar_hora
  3423 ;;		_leer_hora
  3424 ;;		_enviar_fecha
  3425 ;;		_leer_fecha
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429     09CD                     _I2C_Start:	
  3430                           ;psect for function _I2C_Start
  3431                           
  3432     09CD                     l1773:	
  3433                           ;incstack = 0
  3434                           ; Regs used in _I2C_Start: []
  3435                           
  3436                           
  3437                           ;I2C.c: 21:     SSPCON2bits.SEN = 1;
  3438     09CD  1683               	bsf	3,5	;RP0=1, select bank1
  3439     09CE  1303               	bcf	3,6	;RP1=0, select bank1
  3440     09CF  1411               	bsf	17,0	;volatile
  3441     09D0                     l156:	
  3442                           ;I2C.c: 22:     while(PIR1bits.SSPIF == 0);
  3443                           
  3444     09D0  1283               	bcf	3,5	;RP0=0, select bank0
  3445     09D1  1D8C               	btfss	12,3	;volatile
  3446     09D2  29D4               	goto	u1691
  3447     09D3  29D5               	goto	u1690
  3448     09D4                     u1691:
  3449     09D4  29D0               	goto	l156
  3450     09D5                     u1690:
  3451     09D5                     l158:
  3452                           
  3453                           ;I2C.c: 23:     PIR1bits.SSPIF = 0;
  3454     09D5  118C               	bcf	12,3	;volatile
  3455     09D6                     l159:
  3456     09D6  0008               	return
  3457     09D7                     __end_of_I2C_Start:
  3458                           
  3459                           	psect	text19
  3460     0C17                     __ptext19:	
  3461 ;; *************** function _convertirHora *****************
  3462 ;; Defined at:
  3463 ;;		line 136 in file "master.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;		None
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;  i               1    1[COMMON] unsigned char 
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      void 
  3470 ;; Registers used:
  3471 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3477 ;;      Params:         0       0       0       0       0
  3478 ;;      Locals:         1       0       0       0       0
  3479 ;;      Temps:          1       0       0       0       0
  3480 ;;      Totals:         2       0       0       0       0
  3481 ;;Total ram usage:        2 bytes
  3482 ;; Hardware stack levels used: 1
  3483 ;; This function calls:
  3484 ;;		Nothing
  3485 ;; This function is called by:
  3486 ;;		_main
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490     0C17                     _convertirHora:	
  3491                           ;psect for function _convertirHora
  3492                           
  3493     0C17                     l1919:	
  3494                           ;incstack = 0
  3495                           ; Regs used in _convertirHora: [wreg-fsr0h+status,2+status,0]
  3496                           
  3497                           
  3498                           ;master.c: 138:     for(uint8_t i=0; i<7; i++){
  3499     0C17  01F1               	clrf	convertirHora@i
  3500     0C18                     l1925:
  3501                           
  3502                           ;master.c: 139:         Hora[i] &= 0x0F;
  3503     0C18  300F               	movlw	15
  3504     0C19  00F0               	movwf	??_convertirHora
  3505     0C1A  0871               	movf	convertirHora@i,w
  3506     0C1B  3ED5               	addlw	(low (_Hora| 0))& (0+255)
  3507     0C1C  0084               	movwf	4
  3508     0C1D  0870               	movf	??_convertirHora,w
  3509     0C1E  1383               	bcf	3,7	;select IRP bank1
  3510     0C1F  0580               	andwf	0,f
  3511     0C20                     l1927:
  3512                           
  3513                           ;master.c: 140:     }
  3514     0C20  3001               	movlw	1
  3515     0C21  00F0               	movwf	??_convertirHora
  3516     0C22  0870               	movf	??_convertirHora,w
  3517     0C23  07F1               	addwf	convertirHora@i,f
  3518     0C24                     l1929:
  3519     0C24  3007               	movlw	7
  3520     0C25  0271               	subwf	convertirHora@i,w
  3521     0C26  1C03               	skipc
  3522     0C27  2C29               	goto	u1931
  3523     0C28  2C2A               	goto	u1930
  3524     0C29                     u1931:
  3525     0C29  2C18               	goto	l1925
  3526     0C2A                     u1930:
  3527     0C2A                     l1931:
  3528                           
  3529                           ;master.c: 142:     hora = ((Hora[0]<<4)+ Hora[1]);
  3530     0C2A  1683               	bsf	3,5	;RP0=1, select bank1
  3531     0C2B  1303               	bcf	3,6	;RP1=0, select bank1
  3532     0C2C  0855               	movf	_Hora^(0+128),w
  3533     0C2D  00F0               	movwf	??_convertirHora
  3534     0C2E  3004               	movlw	4
  3535     0C2F                     u1945:
  3536     0C2F  1003               	clrc
  3537     0C30  0DF0               	rlf	??_convertirHora,f
  3538     0C31  3EFF               	addlw	-1
  3539     0C32  1D03               	skipz
  3540     0C33  2C2F               	goto	u1945
  3541     0C34  0856               	movf	(_Hora^(0+128)+1),w
  3542     0C35  0770               	addwf	??_convertirHora,w
  3543     0C36  1283               	bcf	3,5	;RP0=0, select bank0
  3544     0C37  1303               	bcf	3,6	;RP1=0, select bank0
  3545     0C38  00E9               	movwf	_hora
  3546                           
  3547                           ;master.c: 143:     min = ((Hora[2]<<4)+ Hora[3]);
  3548     0C39  1683               	bsf	3,5	;RP0=1, select bank1
  3549     0C3A  1303               	bcf	3,6	;RP1=0, select bank1
  3550     0C3B  0857               	movf	(_Hora^(0+128)+2),w
  3551     0C3C  00F0               	movwf	??_convertirHora
  3552     0C3D  3004               	movlw	4
  3553     0C3E                     u1955:
  3554     0C3E  1003               	clrc
  3555     0C3F  0DF0               	rlf	??_convertirHora,f
  3556     0C40  3EFF               	addlw	-1
  3557     0C41  1D03               	skipz
  3558     0C42  2C3E               	goto	u1955
  3559     0C43  0858               	movf	(_Hora^(0+128)+3),w
  3560     0C44  0770               	addwf	??_convertirHora,w
  3561     0C45  1283               	bcf	3,5	;RP0=0, select bank0
  3562     0C46  1303               	bcf	3,6	;RP1=0, select bank0
  3563     0C47  00EA               	movwf	_min
  3564                           
  3565                           ;master.c: 144:     sec = ((Hora[4]<<4)+ Hora[5]);
  3566     0C48  1683               	bsf	3,5	;RP0=1, select bank1
  3567     0C49  1303               	bcf	3,6	;RP1=0, select bank1
  3568     0C4A  0859               	movf	(_Hora^(0+128)+4),w
  3569     0C4B  00F0               	movwf	??_convertirHora
  3570     0C4C  3004               	movlw	4
  3571     0C4D                     u1965:
  3572     0C4D  1003               	clrc
  3573     0C4E  0DF0               	rlf	??_convertirHora,f
  3574     0C4F  3EFF               	addlw	-1
  3575     0C50  1D03               	skipz
  3576     0C51  2C4D               	goto	u1965
  3577     0C52  085A               	movf	(_Hora^(0+128)+5),w
  3578     0C53  0770               	addwf	??_convertirHora,w
  3579     0C54  1283               	bcf	3,5	;RP0=0, select bank0
  3580     0C55  1303               	bcf	3,6	;RP1=0, select bank0
  3581     0C56  00EB               	movwf	_sec
  3582     0C57                     l108:
  3583     0C57  0008               	return
  3584     0C58                     __end_of_convertirHora:
  3585                           
  3586                           	psect	text20
  3587     0BD6                     __ptext20:	
  3588 ;; *************** function _convertirFecha *****************
  3589 ;; Defined at:
  3590 ;;		line 147 in file "master.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;		None
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;  i               1    1[COMMON] unsigned char 
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  1    wreg      void 
  3597 ;; Registers used:
  3598 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3604 ;;      Params:         0       0       0       0       0
  3605 ;;      Locals:         1       0       0       0       0
  3606 ;;      Temps:          1       0       0       0       0
  3607 ;;      Totals:         2       0       0       0       0
  3608 ;;Total ram usage:        2 bytes
  3609 ;; Hardware stack levels used: 1
  3610 ;; This function calls:
  3611 ;;		Nothing
  3612 ;; This function is called by:
  3613 ;;		_main
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617     0BD6                     _convertirFecha:	
  3618                           ;psect for function _convertirFecha
  3619                           
  3620     0BD6                     l1947:	
  3621                           ;incstack = 0
  3622                           ; Regs used in _convertirFecha: [wreg-fsr0h+status,2+status,0]
  3623                           
  3624                           
  3625                           ;master.c: 149:     for(uint8_t i=0; i<7; i++){
  3626     0BD6  01F1               	clrf	convertirFecha@i
  3627     0BD7                     l1953:
  3628                           
  3629                           ;master.c: 150:         Fecha[i] &= 0x0F;
  3630     0BD7  300F               	movlw	15
  3631     0BD8  00F0               	movwf	??_convertirFecha
  3632     0BD9  0871               	movf	convertirFecha@i,w
  3633     0BDA  3ECE               	addlw	(low (_Fecha| 0))& (0+255)
  3634     0BDB  0084               	movwf	4
  3635     0BDC  0870               	movf	??_convertirFecha,w
  3636     0BDD  1383               	bcf	3,7	;select IRP bank1
  3637     0BDE  0580               	andwf	0,f
  3638     0BDF                     l1955:
  3639                           
  3640                           ;master.c: 151:     }
  3641     0BDF  3001               	movlw	1
  3642     0BE0  00F0               	movwf	??_convertirFecha
  3643     0BE1  0870               	movf	??_convertirFecha,w
  3644     0BE2  07F1               	addwf	convertirFecha@i,f
  3645     0BE3                     l1957:
  3646     0BE3  3007               	movlw	7
  3647     0BE4  0271               	subwf	convertirFecha@i,w
  3648     0BE5  1C03               	skipc
  3649     0BE6  2BE8               	goto	u1971
  3650     0BE7  2BE9               	goto	u1970
  3651     0BE8                     u1971:
  3652     0BE8  2BD7               	goto	l1953
  3653     0BE9                     u1970:
  3654     0BE9                     l1959:
  3655                           
  3656                           ;master.c: 153:     dia = ((Fecha[0]<<4)+ Fecha[1]);
  3657     0BE9  1683               	bsf	3,5	;RP0=1, select bank1
  3658     0BEA  1303               	bcf	3,6	;RP1=0, select bank1
  3659     0BEB  084E               	movf	_Fecha^(0+128),w
  3660     0BEC  00F0               	movwf	??_convertirFecha
  3661     0BED  3004               	movlw	4
  3662     0BEE                     u1985:
  3663     0BEE  1003               	clrc
  3664     0BEF  0DF0               	rlf	??_convertirFecha,f
  3665     0BF0  3EFF               	addlw	-1
  3666     0BF1  1D03               	skipz
  3667     0BF2  2BEE               	goto	u1985
  3668     0BF3  084F               	movf	(_Fecha^(0+128)+1),w
  3669     0BF4  0770               	addwf	??_convertirFecha,w
  3670     0BF5  1283               	bcf	3,5	;RP0=0, select bank0
  3671     0BF6  1303               	bcf	3,6	;RP1=0, select bank0
  3672     0BF7  00E8               	movwf	_dia
  3673                           
  3674                           ;master.c: 154:     mes = ((Fecha[2]<<4)+ Fecha[3]);
  3675     0BF8  1683               	bsf	3,5	;RP0=1, select bank1
  3676     0BF9  1303               	bcf	3,6	;RP1=0, select bank1
  3677     0BFA  0850               	movf	(_Fecha^(0+128)+2),w
  3678     0BFB  00F0               	movwf	??_convertirFecha
  3679     0BFC  3004               	movlw	4
  3680     0BFD                     u1995:
  3681     0BFD  1003               	clrc
  3682     0BFE  0DF0               	rlf	??_convertirFecha,f
  3683     0BFF  3EFF               	addlw	-1
  3684     0C00  1D03               	skipz
  3685     0C01  2BFD               	goto	u1995
  3686     0C02  0851               	movf	(_Fecha^(0+128)+3),w
  3687     0C03  0770               	addwf	??_convertirFecha,w
  3688     0C04  1283               	bcf	3,5	;RP0=0, select bank0
  3689     0C05  1303               	bcf	3,6	;RP1=0, select bank0
  3690     0C06  00E7               	movwf	_mes
  3691                           
  3692                           ;master.c: 155:     anio = ((Fecha[4]<<4)+ Fecha[5]);
  3693     0C07  1683               	bsf	3,5	;RP0=1, select bank1
  3694     0C08  1303               	bcf	3,6	;RP1=0, select bank1
  3695     0C09  0852               	movf	(_Fecha^(0+128)+4),w
  3696     0C0A  00F0               	movwf	??_convertirFecha
  3697     0C0B  3004               	movlw	4
  3698     0C0C                     u2005:
  3699     0C0C  1003               	clrc
  3700     0C0D  0DF0               	rlf	??_convertirFecha,f
  3701     0C0E  3EFF               	addlw	-1
  3702     0C0F  1D03               	skipz
  3703     0C10  2C0C               	goto	u2005
  3704     0C11  0853               	movf	(_Fecha^(0+128)+5),w
  3705     0C12  0770               	addwf	??_convertirFecha,w
  3706     0C13  1283               	bcf	3,5	;RP0=0, select bank0
  3707     0C14  1303               	bcf	3,6	;RP1=0, select bank0
  3708     0C15  00E6               	movwf	_anio
  3709     0C16                     l113:
  3710     0C16  0008               	return
  3711     0C17                     __end_of_convertirFecha:
  3712                           
  3713                           	psect	text21
  3714     0F48                     __ptext21:	
  3715 ;; *************** function ___xxtofl *****************
  3716 ;; Defined at:
  3717 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;  sign            1    wreg     unsigned char 
  3720 ;;  val             4    0[COMMON] long 
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;  sign            1    8[COMMON] unsigned char 
  3723 ;;  arg             4   10[COMMON] unsigned long 
  3724 ;;  exp             1    9[COMMON] unsigned char 
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  4    0[COMMON] unsigned char 
  3727 ;; Registers used:
  3728 ;;		wreg, status,2, status,0
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3734 ;;      Params:         4       0       0       0       0
  3735 ;;      Locals:         6       0       0       0       0
  3736 ;;      Temps:          4       0       0       0       0
  3737 ;;      Totals:        14       0       0       0       0
  3738 ;;Total ram usage:       14 bytes
  3739 ;; Hardware stack levels used: 1
  3740 ;; This function calls:
  3741 ;;		Nothing
  3742 ;; This function is called by:
  3743 ;;		_main
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747     0F48                     ___xxtofl:	
  3748                           ;psect for function ___xxtofl
  3749                           
  3750                           
  3751                           ;incstack = 0
  3752                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3753                           ;___xxtofl@sign stored from wreg
  3754     0F48  00F8               	movwf	___xxtofl@sign
  3755     0F49                     l2499:
  3756     0F49  0878               	movf	___xxtofl@sign,w
  3757     0F4A  1903               	btfsc	3,2
  3758     0F4B  2F4D               	goto	u3101
  3759     0F4C  2F4E               	goto	u3100
  3760     0F4D                     u3101:
  3761     0F4D  2F62               	goto	l2505
  3762     0F4E                     u3100:
  3763     0F4E                     l2501:
  3764     0F4E  1FF3               	btfss	___xxtofl@val+3,7
  3765     0F4F  2F51               	goto	u3111
  3766     0F50  2F52               	goto	u3110
  3767     0F51                     u3111:
  3768     0F51  2F62               	goto	l2505
  3769     0F52                     u3110:
  3770     0F52                     l2503:
  3771     0F52  0970               	comf	___xxtofl@val,w
  3772     0F53  00FA               	movwf	___xxtofl@arg
  3773     0F54  0971               	comf	___xxtofl@val+1,w
  3774     0F55  00FB               	movwf	___xxtofl@arg+1
  3775     0F56  0972               	comf	___xxtofl@val+2,w
  3776     0F57  00FC               	movwf	___xxtofl@arg+2
  3777     0F58  0973               	comf	___xxtofl@val+3,w
  3778     0F59  00FD               	movwf	___xxtofl@arg+3
  3779     0F5A  0AFA               	incf	___xxtofl@arg,f
  3780     0F5B  1903               	skipnz
  3781     0F5C  0AFB               	incf	___xxtofl@arg+1,f
  3782     0F5D  1903               	skipnz
  3783     0F5E  0AFC               	incf	___xxtofl@arg+2,f
  3784     0F5F  1903               	skipnz
  3785     0F60  0AFD               	incf	___xxtofl@arg+3,f
  3786     0F61  2F6A               	goto	l806
  3787     0F62                     l2505:
  3788     0F62  0873               	movf	___xxtofl@val+3,w
  3789     0F63  00FD               	movwf	___xxtofl@arg+3
  3790     0F64  0872               	movf	___xxtofl@val+2,w
  3791     0F65  00FC               	movwf	___xxtofl@arg+2
  3792     0F66  0871               	movf	___xxtofl@val+1,w
  3793     0F67  00FB               	movwf	___xxtofl@arg+1
  3794     0F68  0870               	movf	___xxtofl@val,w
  3795     0F69  00FA               	movwf	___xxtofl@arg
  3796     0F6A                     l806:
  3797     0F6A  0873               	movf	___xxtofl@val+3,w
  3798     0F6B  0472               	iorwf	___xxtofl@val+2,w
  3799     0F6C  0471               	iorwf	___xxtofl@val+1,w
  3800     0F6D  0470               	iorwf	___xxtofl@val,w
  3801     0F6E  1D03               	skipz
  3802     0F6F  2F71               	goto	u3121
  3803     0F70  2F72               	goto	u3120
  3804     0F71                     u3121:
  3805     0F71  2F7B               	goto	l2511
  3806     0F72                     u3120:
  3807     0F72                     l2507:
  3808     0F72  3000               	movlw	0
  3809     0F73  00F3               	movwf	?___xxtofl+3
  3810     0F74  3000               	movlw	0
  3811     0F75  00F2               	movwf	?___xxtofl+2
  3812     0F76  3000               	movlw	0
  3813     0F77  00F1               	movwf	?___xxtofl+1
  3814     0F78  3000               	movlw	0
  3815     0F79  00F0               	movwf	?___xxtofl
  3816     0F7A  2FFF               	goto	l808
  3817     0F7B                     l2511:
  3818     0F7B  3096               	movlw	150
  3819     0F7C  00F9               	movwf	___xxtofl@exp
  3820     0F7D  2F8B               	goto	l2515
  3821     0F7E                     l2513:
  3822     0F7E  3001               	movlw	1
  3823     0F7F  00F4               	movwf	??___xxtofl
  3824     0F80  0874               	movf	??___xxtofl,w
  3825     0F81  07F9               	addwf	___xxtofl@exp,f
  3826     0F82  3001               	movlw	1
  3827     0F83                     u3135:
  3828     0F83  1003               	clrc
  3829     0F84  0CFD               	rrf	___xxtofl@arg+3,f
  3830     0F85  0CFC               	rrf	___xxtofl@arg+2,f
  3831     0F86  0CFB               	rrf	___xxtofl@arg+1,f
  3832     0F87  0CFA               	rrf	___xxtofl@arg,f
  3833     0F88  3EFF               	addlw	-1
  3834     0F89  1D03               	skipz
  3835     0F8A  2F83               	goto	u3135
  3836     0F8B                     l2515:
  3837     0F8B  30FE               	movlw	254
  3838     0F8C  057D               	andwf	___xxtofl@arg+3,w
  3839     0F8D  1D03               	btfss	3,2
  3840     0F8E  2F90               	goto	u3141
  3841     0F8F  2F91               	goto	u3140
  3842     0F90                     u3141:
  3843     0F90  2F7E               	goto	l2513
  3844     0F91                     u3140:
  3845     0F91  2FAD               	goto	l812
  3846     0F92                     l2517:
  3847     0F92  3001               	movlw	1
  3848     0F93  00F4               	movwf	??___xxtofl
  3849     0F94  0874               	movf	??___xxtofl,w
  3850     0F95  07F9               	addwf	___xxtofl@exp,f
  3851     0F96                     l2519:
  3852     0F96  3001               	movlw	1
  3853     0F97  07FA               	addwf	___xxtofl@arg,f
  3854     0F98  3000               	movlw	0
  3855     0F99  1803               	skipnc
  3856     0F9A  3001               	movlw	1
  3857     0F9B  07FB               	addwf	___xxtofl@arg+1,f
  3858     0F9C  3000               	movlw	0
  3859     0F9D  1803               	skipnc
  3860     0F9E  3001               	movlw	1
  3861     0F9F  07FC               	addwf	___xxtofl@arg+2,f
  3862     0FA0  3000               	movlw	0
  3863     0FA1  1803               	skipnc
  3864     0FA2  3001               	movlw	1
  3865     0FA3  07FD               	addwf	___xxtofl@arg+3,f
  3866     0FA4                     l2521:
  3867     0FA4  3001               	movlw	1
  3868     0FA5                     u3155:
  3869     0FA5  1003               	clrc
  3870     0FA6  0CFD               	rrf	___xxtofl@arg+3,f
  3871     0FA7  0CFC               	rrf	___xxtofl@arg+2,f
  3872     0FA8  0CFB               	rrf	___xxtofl@arg+1,f
  3873     0FA9  0CFA               	rrf	___xxtofl@arg,f
  3874     0FAA  3EFF               	addlw	-1
  3875     0FAB  1D03               	skipz
  3876     0FAC  2FA5               	goto	u3155
  3877     0FAD                     l812:
  3878     0FAD  30FF               	movlw	255
  3879     0FAE  057D               	andwf	___xxtofl@arg+3,w
  3880     0FAF  1D03               	btfss	3,2
  3881     0FB0  2FB2               	goto	u3161
  3882     0FB1  2FB3               	goto	u3160
  3883     0FB2                     u3161:
  3884     0FB2  2F92               	goto	l2517
  3885     0FB3                     u3160:
  3886     0FB3  2FBF               	goto	l2525
  3887     0FB4                     l2523:
  3888     0FB4  3001               	movlw	1
  3889     0FB5  02F9               	subwf	___xxtofl@exp,f
  3890     0FB6  3001               	movlw	1
  3891     0FB7  00F4               	movwf	??___xxtofl
  3892     0FB8                     u3175:
  3893     0FB8  1003               	clrc
  3894     0FB9  0DFA               	rlf	___xxtofl@arg,f
  3895     0FBA  0DFB               	rlf	___xxtofl@arg+1,f
  3896     0FBB  0DFC               	rlf	___xxtofl@arg+2,f
  3897     0FBC  0DFD               	rlf	___xxtofl@arg+3,f
  3898     0FBD  0BF4               	decfsz	??___xxtofl,f
  3899     0FBE  2FB8               	goto	u3175
  3900     0FBF                     l2525:
  3901     0FBF  1BFC               	btfsc	___xxtofl@arg+2,7
  3902     0FC0  2FC2               	goto	u3181
  3903     0FC1  2FC3               	goto	u3180
  3904     0FC2                     u3181:
  3905     0FC2  2FC9               	goto	l819
  3906     0FC3                     u3180:
  3907     0FC3                     l2527:
  3908     0FC3  3002               	movlw	2
  3909     0FC4  0279               	subwf	___xxtofl@exp,w
  3910     0FC5  1803               	skipnc
  3911     0FC6  2FC8               	goto	u3191
  3912     0FC7  2FC9               	goto	u3190
  3913     0FC8                     u3191:
  3914     0FC8  2FB4               	goto	l2523
  3915     0FC9                     u3190:
  3916     0FC9                     l819:
  3917     0FC9  1879               	btfsc	___xxtofl@exp,0
  3918     0FCA  2FCC               	goto	u3201
  3919     0FCB  2FCD               	goto	u3200
  3920     0FCC                     u3201:
  3921     0FCC  2FD5               	goto	l820
  3922     0FCD                     u3200:
  3923     0FCD                     l2529:
  3924     0FCD  30FF               	movlw	255
  3925     0FCE  05FA               	andwf	___xxtofl@arg,f
  3926     0FCF  30FF               	movlw	255
  3927     0FD0  05FB               	andwf	___xxtofl@arg+1,f
  3928     0FD1  307F               	movlw	127
  3929     0FD2  05FC               	andwf	___xxtofl@arg+2,f
  3930     0FD3  30FF               	movlw	255
  3931     0FD4  05FD               	andwf	___xxtofl@arg+3,f
  3932     0FD5                     l820:
  3933     0FD5  1003               	clrc
  3934     0FD6  0CF9               	rrf	___xxtofl@exp,f
  3935     0FD7                     l2531:
  3936     0FD7  0879               	movf	___xxtofl@exp,w
  3937     0FD8  00F4               	movwf	??___xxtofl
  3938     0FD9  01F5               	clrf	??___xxtofl+1
  3939     0FDA  01F6               	clrf	??___xxtofl+2
  3940     0FDB  01F7               	clrf	??___xxtofl+3
  3941     0FDC  3018               	movlw	24
  3942     0FDD                     u3215:
  3943     0FDD  1003               	clrc
  3944     0FDE  0DF4               	rlf	??___xxtofl,f
  3945     0FDF  0DF5               	rlf	??___xxtofl+1,f
  3946     0FE0  0DF6               	rlf	??___xxtofl+2,f
  3947     0FE1  0DF7               	rlf	??___xxtofl+3,f
  3948     0FE2                     u3210:
  3949     0FE2  3EFF               	addlw	-1
  3950     0FE3  1D03               	skipz
  3951     0FE4  2FDD               	goto	u3215
  3952     0FE5  0874               	movf	??___xxtofl,w
  3953     0FE6  04FA               	iorwf	___xxtofl@arg,f
  3954     0FE7  0875               	movf	??___xxtofl+1,w
  3955     0FE8  04FB               	iorwf	___xxtofl@arg+1,f
  3956     0FE9  0876               	movf	??___xxtofl+2,w
  3957     0FEA  04FC               	iorwf	___xxtofl@arg+2,f
  3958     0FEB  0877               	movf	??___xxtofl+3,w
  3959     0FEC  04FD               	iorwf	___xxtofl@arg+3,f
  3960     0FED                     l2533:
  3961     0FED  0878               	movf	___xxtofl@sign,w
  3962     0FEE  1903               	btfsc	3,2
  3963     0FEF  2FF1               	goto	u3221
  3964     0FF0  2FF2               	goto	u3220
  3965     0FF1                     u3221:
  3966     0FF1  2FF7               	goto	l2539
  3967     0FF2                     u3220:
  3968     0FF2                     l2535:
  3969     0FF2  1FF3               	btfss	___xxtofl@val+3,7
  3970     0FF3  2FF5               	goto	u3231
  3971     0FF4  2FF6               	goto	u3230
  3972     0FF5                     u3231:
  3973     0FF5  2FF7               	goto	l2539
  3974     0FF6                     u3230:
  3975     0FF6                     l2537:
  3976     0FF6  17FD               	bsf	___xxtofl@arg+3,7
  3977     0FF7                     l2539:
  3978     0FF7  087D               	movf	___xxtofl@arg+3,w
  3979     0FF8  00F3               	movwf	?___xxtofl+3
  3980     0FF9  087C               	movf	___xxtofl@arg+2,w
  3981     0FFA  00F2               	movwf	?___xxtofl+2
  3982     0FFB  087B               	movf	___xxtofl@arg+1,w
  3983     0FFC  00F1               	movwf	?___xxtofl+1
  3984     0FFD  087A               	movf	___xxtofl@arg,w
  3985     0FFE  00F0               	movwf	?___xxtofl
  3986     0FFF                     l808:
  3987     0FFF  0008               	return
  3988     1000                     __end_of___xxtofl:
  3989                           
  3990                           	psect	text22
  3991     0ED0                     __ptext22:	
  3992 ;; *************** function ___fltol *****************
  3993 ;; Defined at:
  3994 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  f1              4   52[BANK0 ] unsigned char 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  exp1            1   61[BANK0 ] unsigned char 
  3999 ;;  sign1           1   60[BANK0 ] unsigned char 
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  4   52[BANK0 ] long 
  4002 ;; Registers used:
  4003 ;;		wreg, status,2, status,0
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4009 ;;      Params:         0       4       0       0       0
  4010 ;;      Locals:         0       2       0       0       0
  4011 ;;      Temps:          0       4       0       0       0
  4012 ;;      Totals:         0      10       0       0       0
  4013 ;;Total ram usage:       10 bytes
  4014 ;; Hardware stack levels used: 1
  4015 ;; This function calls:
  4016 ;;		Nothing
  4017 ;; This function is called by:
  4018 ;;		_main
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022     0ED0                     ___fltol:	
  4023                           ;psect for function ___fltol
  4024                           
  4025     0ED0                     l2181:	
  4026                           ;incstack = 0
  4027                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4028                           
  4029     0ED0  1003               	clrc
  4030     0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  4031     0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  4032     0ED3  0D56               	rlf	___fltol@f1+2,w
  4033     0ED4  0D57               	rlf	___fltol@f1+3,w
  4034     0ED5  00DD               	movwf	___fltol@exp1
  4035     0ED6  085D               	movf	___fltol@exp1,w
  4036     0ED7  1D03               	btfss	3,2
  4037     0ED8  2EDA               	goto	u2341
  4038     0ED9  2EDB               	goto	u2340
  4039     0EDA                     u2341:
  4040     0EDA  2EE4               	goto	l2187
  4041     0EDB                     u2340:
  4042     0EDB                     l2183:
  4043     0EDB  3000               	movlw	0
  4044     0EDC  00D7               	movwf	?___fltol+3
  4045     0EDD  3000               	movlw	0
  4046     0EDE  00D6               	movwf	?___fltol+2
  4047     0EDF  3000               	movlw	0
  4048     0EE0  00D5               	movwf	?___fltol+1
  4049     0EE1  3000               	movlw	0
  4050     0EE2  00D4               	movwf	?___fltol
  4051     0EE3  2F47               	goto	l559
  4052     0EE4                     l2187:
  4053     0EE4  0854               	movf	___fltol@f1,w
  4054     0EE5  00D8               	movwf	??___fltol
  4055     0EE6  0855               	movf	___fltol@f1+1,w
  4056     0EE7  00D9               	movwf	??___fltol+1
  4057     0EE8  0856               	movf	___fltol@f1+2,w
  4058     0EE9  00DA               	movwf	??___fltol+2
  4059     0EEA  0857               	movf	___fltol@f1+3,w
  4060     0EEB  00DB               	movwf	??___fltol+3
  4061     0EEC  301F               	movlw	31
  4062     0EED                     u2355:
  4063     0EED  1003               	clrc
  4064     0EEE  0CDB               	rrf	??___fltol+3,f
  4065     0EEF  0CDA               	rrf	??___fltol+2,f
  4066     0EF0  0CD9               	rrf	??___fltol+1,f
  4067     0EF1  0CD8               	rrf	??___fltol,f
  4068     0EF2                     u2350:
  4069     0EF2  3EFF               	addlw	-1
  4070     0EF3  1D03               	skipz
  4071     0EF4  2EED               	goto	u2355
  4072     0EF5  0858               	movf	??___fltol,w
  4073     0EF6  00DC               	movwf	___fltol@sign1
  4074     0EF7                     l2189:
  4075     0EF7  17D6               	bsf	___fltol@f1+2,7
  4076     0EF8                     l2191:
  4077     0EF8  30FF               	movlw	255
  4078     0EF9  05D4               	andwf	___fltol@f1,f
  4079     0EFA  30FF               	movlw	255
  4080     0EFB  05D5               	andwf	___fltol@f1+1,f
  4081     0EFC  30FF               	movlw	255
  4082     0EFD  05D6               	andwf	___fltol@f1+2,f
  4083     0EFE  3000               	movlw	0
  4084     0EFF  05D7               	andwf	___fltol@f1+3,f
  4085     0F00                     l2193:
  4086     0F00  3096               	movlw	150
  4087     0F01  02DD               	subwf	___fltol@exp1,f
  4088     0F02                     l2195:
  4089     0F02  1FDD               	btfss	___fltol@exp1,7
  4090     0F03  2F05               	goto	u2361
  4091     0F04  2F06               	goto	u2360
  4092     0F05                     u2361:
  4093     0F05  2F20               	goto	l2205
  4094     0F06                     u2360:
  4095     0F06                     l2197:
  4096     0F06  085D               	movf	___fltol@exp1,w
  4097     0F07  3A80               	xorlw	128
  4098     0F08  3E97               	addlw	151
  4099     0F09  1803               	skipnc
  4100     0F0A  2F0C               	goto	u2371
  4101     0F0B  2F0D               	goto	u2370
  4102     0F0C                     u2371:
  4103     0F0C  2F0E               	goto	l2203
  4104     0F0D                     u2370:
  4105     0F0D  2EDB               	goto	l2183
  4106     0F0E                     l2203:
  4107     0F0E  3001               	movlw	1
  4108     0F0F                     u2385:
  4109     0F0F  1003               	clrc
  4110     0F10  0CD7               	rrf	___fltol@f1+3,f
  4111     0F11  0CD6               	rrf	___fltol@f1+2,f
  4112     0F12  0CD5               	rrf	___fltol@f1+1,f
  4113     0F13  0CD4               	rrf	___fltol@f1,f
  4114     0F14  3EFF               	addlw	-1
  4115     0F15  1D03               	skipz
  4116     0F16  2F0F               	goto	u2385
  4117     0F17  3001               	movlw	1
  4118     0F18  00D8               	movwf	??___fltol
  4119     0F19  0858               	movf	??___fltol,w
  4120     0F1A  07DD               	addwf	___fltol@exp1,f
  4121     0F1B  1D03               	btfss	3,2
  4122     0F1C  2F1E               	goto	u2391
  4123     0F1D  2F1F               	goto	u2390
  4124     0F1E                     u2391:
  4125     0F1E  2F0E               	goto	l2203
  4126     0F1F                     u2390:
  4127     0F1F  2F37               	goto	l2213
  4128     0F20                     l2205:
  4129     0F20  3020               	movlw	32
  4130     0F21  025D               	subwf	___fltol@exp1,w
  4131     0F22  1C03               	skipc
  4132     0F23  2F25               	goto	u2401
  4133     0F24  2F26               	goto	u2400
  4134     0F25                     u2401:
  4135     0F25  2F32               	goto	l566
  4136     0F26                     u2400:
  4137     0F26  2EDB               	goto	l2183
  4138     0F27                     l2211:
  4139     0F27  3001               	movlw	1
  4140     0F28  00D8               	movwf	??___fltol
  4141     0F29                     u2415:
  4142     0F29  1003               	clrc
  4143     0F2A  0DD4               	rlf	___fltol@f1,f
  4144     0F2B  0DD5               	rlf	___fltol@f1+1,f
  4145     0F2C  0DD6               	rlf	___fltol@f1+2,f
  4146     0F2D  0DD7               	rlf	___fltol@f1+3,f
  4147     0F2E  0BD8               	decfsz	??___fltol,f
  4148     0F2F  2F29               	goto	u2415
  4149     0F30  3001               	movlw	1
  4150     0F31  02DD               	subwf	___fltol@exp1,f
  4151     0F32                     l566:
  4152     0F32  085D               	movf	___fltol@exp1,w
  4153     0F33  1D03               	btfss	3,2
  4154     0F34  2F36               	goto	u2421
  4155     0F35  2F37               	goto	u2420
  4156     0F36                     u2421:
  4157     0F36  2F27               	goto	l2211
  4158     0F37                     u2420:
  4159     0F37                     l2213:
  4160     0F37  085C               	movf	___fltol@sign1,w
  4161     0F38  1903               	btfsc	3,2
  4162     0F39  2F3B               	goto	u2431
  4163     0F3A  2F3C               	goto	u2430
  4164     0F3B                     u2431:
  4165     0F3B  2F47               	goto	l569
  4166     0F3C                     u2430:
  4167     0F3C                     l2215:
  4168     0F3C  09D4               	comf	___fltol@f1,f
  4169     0F3D  09D5               	comf	___fltol@f1+1,f
  4170     0F3E  09D6               	comf	___fltol@f1+2,f
  4171     0F3F  09D7               	comf	___fltol@f1+3,f
  4172     0F40  0AD4               	incf	___fltol@f1,f
  4173     0F41  1903               	skipnz
  4174     0F42  0AD5               	incf	___fltol@f1+1,f
  4175     0F43  1903               	skipnz
  4176     0F44  0AD6               	incf	___fltol@f1+2,f
  4177     0F45  1903               	skipnz
  4178     0F46  0AD7               	incf	___fltol@f1+3,f
  4179     0F47                     l569:
  4180     0F47                     l559:
  4181     0F47  0008               	return
  4182     0F48                     __end_of___fltol:
  4183                           
  4184                           	psect	text23
  4185     0499                     __ptext23:	
  4186 ;; *************** function ___flmul *****************
  4187 ;; Defined at:
  4188 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;  b               4    0[BANK0 ] long 
  4191 ;;  a               4    4[BANK0 ] long 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  prod            4   20[BANK0 ] struct .
  4194 ;;  grs             4   14[BANK0 ] unsigned long 
  4195 ;;  temp            2   24[BANK0 ] struct .
  4196 ;;  bexp            1   19[BANK0 ] unsigned char 
  4197 ;;  aexp            1   18[BANK0 ] unsigned char 
  4198 ;;  sign            1   13[BANK0 ] unsigned char 
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  4    0[BANK0 ] unsigned char 
  4201 ;; Registers used:
  4202 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4208 ;;      Params:         0       8       0       0       0
  4209 ;;      Locals:         0      13       0       0       0
  4210 ;;      Temps:          0       5       0       0       0
  4211 ;;      Totals:         0      26       0       0       0
  4212 ;;Total ram usage:       26 bytes
  4213 ;; Hardware stack levels used: 1
  4214 ;; Hardware stack levels required when called: 1
  4215 ;; This function calls:
  4216 ;;		__Umul8_16
  4217 ;; This function is called by:
  4218 ;;		_main
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222     0499                     ___flmul:	
  4223                           ;psect for function ___flmul
  4224                           
  4225     0499                     l2359:	
  4226                           ;incstack = 0
  4227                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4228                           
  4229     0499  1283               	bcf	3,5	;RP0=0, select bank0
  4230     049A  1303               	bcf	3,6	;RP1=0, select bank0
  4231     049B  0823               	movf	___flmul@b+3,w
  4232     049C  3980               	andlw	128
  4233     049D  00AD               	movwf	___flmul@sign
  4234     049E                     l2361:
  4235     049E  0823               	movf	___flmul@b+3,w
  4236     049F  00A8               	movwf	??___flmul
  4237     04A0  0728               	addwf	??___flmul,w
  4238     04A1  00B3               	movwf	___flmul@bexp
  4239     04A2                     l2363:
  4240     04A2  1FA2               	btfss	___flmul@b+2,7
  4241     04A3  2CA5               	goto	u2731
  4242     04A4  2CA6               	goto	u2730
  4243     04A5                     u2731:
  4244     04A5  2CA7               	goto	l2367
  4245     04A6                     u2730:
  4246     04A6                     l2365:
  4247     04A6  1433               	bsf	___flmul@bexp,0
  4248     04A7                     l2367:
  4249     04A7  0833               	movf	___flmul@bexp,w
  4250     04A8  1903               	btfsc	3,2
  4251     04A9  2CAB               	goto	u2741
  4252     04AA  2CAC               	goto	u2740
  4253     04AB                     u2741:
  4254     04AB  2CBB               	goto	l2375
  4255     04AC                     u2740:
  4256     04AC                     l2369:
  4257     04AC  0A33               	incf	___flmul@bexp,w
  4258     04AD  1D03               	btfss	3,2
  4259     04AE  2CB0               	goto	u2751
  4260     04AF  2CB1               	goto	u2750
  4261     04B0                     u2751:
  4262     04B0  2CB9               	goto	l2373
  4263     04B1                     u2750:
  4264     04B1                     l2371:
  4265     04B1  3000               	movlw	0
  4266     04B2  00A3               	movwf	___flmul@b+3
  4267     04B3  3000               	movlw	0
  4268     04B4  00A2               	movwf	___flmul@b+2
  4269     04B5  3000               	movlw	0
  4270     04B6  00A1               	movwf	___flmul@b+1
  4271     04B7  3000               	movlw	0
  4272     04B8  00A0               	movwf	___flmul@b
  4273     04B9                     l2373:
  4274     04B9  17A2               	bsf	___flmul@b+2,7
  4275     04BA  2CC3               	goto	l2377
  4276     04BB                     l2375:
  4277     04BB  3000               	movlw	0
  4278     04BC  00A3               	movwf	___flmul@b+3
  4279     04BD  3000               	movlw	0
  4280     04BE  00A2               	movwf	___flmul@b+2
  4281     04BF  3000               	movlw	0
  4282     04C0  00A1               	movwf	___flmul@b+1
  4283     04C1  3000               	movlw	0
  4284     04C2  00A0               	movwf	___flmul@b
  4285     04C3                     l2377:
  4286     04C3  0827               	movf	___flmul@a+3,w
  4287     04C4  3980               	andlw	128
  4288     04C5  00A8               	movwf	??___flmul
  4289     04C6  0828               	movf	??___flmul,w
  4290     04C7  06AD               	xorwf	___flmul@sign,f
  4291     04C8                     l2379:
  4292     04C8  0827               	movf	___flmul@a+3,w
  4293     04C9  00A8               	movwf	??___flmul
  4294     04CA  0728               	addwf	??___flmul,w
  4295     04CB  00B2               	movwf	___flmul@aexp
  4296     04CC                     l2381:
  4297     04CC  1FA6               	btfss	___flmul@a+2,7
  4298     04CD  2CCF               	goto	u2761
  4299     04CE  2CD0               	goto	u2760
  4300     04CF                     u2761:
  4301     04CF  2CD1               	goto	l2385
  4302     04D0                     u2760:
  4303     04D0                     l2383:
  4304     04D0  1432               	bsf	___flmul@aexp,0
  4305     04D1                     l2385:
  4306     04D1  0832               	movf	___flmul@aexp,w
  4307     04D2  1903               	btfsc	3,2
  4308     04D3  2CD5               	goto	u2771
  4309     04D4  2CD6               	goto	u2770
  4310     04D5                     u2771:
  4311     04D5  2CE5               	goto	l2393
  4312     04D6                     u2770:
  4313     04D6                     l2387:
  4314     04D6  0A32               	incf	___flmul@aexp,w
  4315     04D7  1D03               	btfss	3,2
  4316     04D8  2CDA               	goto	u2781
  4317     04D9  2CDB               	goto	u2780
  4318     04DA                     u2781:
  4319     04DA  2CE3               	goto	l2391
  4320     04DB                     u2780:
  4321     04DB                     l2389:
  4322     04DB  3000               	movlw	0
  4323     04DC  00A7               	movwf	___flmul@a+3
  4324     04DD  3000               	movlw	0
  4325     04DE  00A6               	movwf	___flmul@a+2
  4326     04DF  3000               	movlw	0
  4327     04E0  00A5               	movwf	___flmul@a+1
  4328     04E1  3000               	movlw	0
  4329     04E2  00A4               	movwf	___flmul@a
  4330     04E3                     l2391:
  4331     04E3  17A6               	bsf	___flmul@a+2,7
  4332     04E4  2CED               	goto	l2395
  4333     04E5                     l2393:
  4334     04E5  3000               	movlw	0
  4335     04E6  00A7               	movwf	___flmul@a+3
  4336     04E7  3000               	movlw	0
  4337     04E8  00A6               	movwf	___flmul@a+2
  4338     04E9  3000               	movlw	0
  4339     04EA  00A5               	movwf	___flmul@a+1
  4340     04EB  3000               	movlw	0
  4341     04EC  00A4               	movwf	___flmul@a
  4342     04ED                     l2395:
  4343     04ED  0832               	movf	___flmul@aexp,w
  4344     04EE  1903               	btfsc	3,2
  4345     04EF  2CF1               	goto	u2791
  4346     04F0  2CF2               	goto	u2790
  4347     04F1                     u2791:
  4348     04F1  2CF7               	goto	l2399
  4349     04F2                     u2790:
  4350     04F2                     l2397:
  4351     04F2  0833               	movf	___flmul@bexp,w
  4352     04F3  1D03               	btfss	3,2
  4353     04F4  2CF6               	goto	u2801
  4354     04F5  2CF7               	goto	u2800
  4355     04F6                     u2801:
  4356     04F6  2D00               	goto	l2403
  4357     04F7                     u2800:
  4358     04F7                     l2399:
  4359     04F7  3000               	movlw	0
  4360     04F8  00A3               	movwf	?___flmul+3
  4361     04F9  3000               	movlw	0
  4362     04FA  00A2               	movwf	?___flmul+2
  4363     04FB  3000               	movlw	0
  4364     04FC  00A1               	movwf	?___flmul+1
  4365     04FD  3000               	movlw	0
  4366     04FE  00A0               	movwf	?___flmul
  4367     04FF  2FDD               	goto	l762
  4368     0500                     l2403:
  4369     0500  0820               	movf	___flmul@b,w
  4370     0501  00F0               	movwf	__Umul8_16@multiplicand
  4371     0502  0826               	movf	___flmul@a+2,w
  4372     0503  120A  158A  22E2  120A  118A  	fcall	__Umul8_16
  4373     0508  0871               	movf	?__Umul8_16+1,w
  4374     0509  1283               	bcf	3,5	;RP0=0, select bank0
  4375     050A  1303               	bcf	3,6	;RP1=0, select bank0
  4376     050B  00B9               	movwf	___flmul@temp+1
  4377     050C  0870               	movf	?__Umul8_16,w
  4378     050D  00B8               	movwf	___flmul@temp
  4379     050E                     l2405:
  4380     050E  0838               	movf	___flmul@temp,w
  4381     050F  00A8               	movwf	??___flmul
  4382     0510  01A9               	clrf	??___flmul+1
  4383     0511  01AA               	clrf	??___flmul+2
  4384     0512  01AB               	clrf	??___flmul+3
  4385     0513  082B               	movf	??___flmul+3,w
  4386     0514  00B1               	movwf	___flmul@grs+3
  4387     0515  082A               	movf	??___flmul+2,w
  4388     0516  00B0               	movwf	___flmul@grs+2
  4389     0517  0829               	movf	??___flmul+1,w
  4390     0518  00AF               	movwf	___flmul@grs+1
  4391     0519  0828               	movf	??___flmul,w
  4392     051A  00AE               	movwf	___flmul@grs
  4393     051B                     l2407:
  4394     051B  0839               	movf	___flmul@temp+1,w
  4395     051C  00A8               	movwf	??___flmul
  4396     051D  01A9               	clrf	??___flmul+1
  4397     051E  01AA               	clrf	??___flmul+2
  4398     051F  01AB               	clrf	??___flmul+3
  4399     0520  082B               	movf	??___flmul+3,w
  4400     0521  00B7               	movwf	___flmul@prod+3
  4401     0522  082A               	movf	??___flmul+2,w
  4402     0523  00B6               	movwf	___flmul@prod+2
  4403     0524  0829               	movf	??___flmul+1,w
  4404     0525  00B5               	movwf	___flmul@prod+1
  4405     0526  0828               	movf	??___flmul,w
  4406     0527  00B4               	movwf	___flmul@prod
  4407     0528  0821               	movf	___flmul@b+1,w
  4408     0529  00F0               	movwf	__Umul8_16@multiplicand
  4409     052A  0825               	movf	___flmul@a+1,w
  4410     052B  120A  158A  22E2  120A  118A  	fcall	__Umul8_16
  4411     0530  0871               	movf	?__Umul8_16+1,w
  4412     0531  1283               	bcf	3,5	;RP0=0, select bank0
  4413     0532  1303               	bcf	3,6	;RP1=0, select bank0
  4414     0533  00B9               	movwf	___flmul@temp+1
  4415     0534  0870               	movf	?__Umul8_16,w
  4416     0535  00B8               	movwf	___flmul@temp
  4417     0536                     l2409:
  4418     0536  0838               	movf	___flmul@temp,w
  4419     0537  00A8               	movwf	??___flmul
  4420     0538  01A9               	clrf	??___flmul+1
  4421     0539  01AA               	clrf	??___flmul+2
  4422     053A  01AB               	clrf	??___flmul+3
  4423     053B  0828               	movf	??___flmul,w
  4424     053C  07AE               	addwf	___flmul@grs,f
  4425     053D  0829               	movf	??___flmul+1,w
  4426     053E  1103               	clrz
  4427     053F  1803               	skipnc
  4428     0540  3E01               	addlw	1
  4429     0541  1903               	skipnz
  4430     0542  2D44               	goto	u2811
  4431     0543  07AF               	addwf	___flmul@grs+1,f
  4432     0544                     u2811:
  4433     0544  082A               	movf	??___flmul+2,w
  4434     0545  1103               	clrz
  4435     0546  1803               	skipnc
  4436     0547  3E01               	addlw	1
  4437     0548  1903               	skipnz
  4438     0549  2D4B               	goto	u2812
  4439     054A  07B0               	addwf	___flmul@grs+2,f
  4440     054B                     u2812:
  4441     054B  082B               	movf	??___flmul+3,w
  4442     054C  1103               	clrz
  4443     054D  1803               	skipnc
  4444     054E  3E01               	addlw	1
  4445     054F  1903               	skipnz
  4446     0550  2D52               	goto	u2813
  4447     0551  07B1               	addwf	___flmul@grs+3,f
  4448     0552                     u2813:
  4449     0552                     l2411:
  4450     0552  0839               	movf	___flmul@temp+1,w
  4451     0553  00A8               	movwf	??___flmul
  4452     0554  01A9               	clrf	??___flmul+1
  4453     0555  01AA               	clrf	??___flmul+2
  4454     0556  01AB               	clrf	??___flmul+3
  4455     0557  0828               	movf	??___flmul,w
  4456     0558  07B4               	addwf	___flmul@prod,f
  4457     0559  0829               	movf	??___flmul+1,w
  4458     055A  1103               	clrz
  4459     055B  1803               	skipnc
  4460     055C  3E01               	addlw	1
  4461     055D  1903               	skipnz
  4462     055E  2D60               	goto	u2821
  4463     055F  07B5               	addwf	___flmul@prod+1,f
  4464     0560                     u2821:
  4465     0560  082A               	movf	??___flmul+2,w
  4466     0561  1103               	clrz
  4467     0562  1803               	skipnc
  4468     0563  3E01               	addlw	1
  4469     0564  1903               	skipnz
  4470     0565  2D67               	goto	u2822
  4471     0566  07B6               	addwf	___flmul@prod+2,f
  4472     0567                     u2822:
  4473     0567  082B               	movf	??___flmul+3,w
  4474     0568  1103               	clrz
  4475     0569  1803               	skipnc
  4476     056A  3E01               	addlw	1
  4477     056B  1903               	skipnz
  4478     056C  2D6E               	goto	u2823
  4479     056D  07B7               	addwf	___flmul@prod+3,f
  4480     056E                     u2823:
  4481     056E  0822               	movf	___flmul@b+2,w
  4482     056F  00F0               	movwf	__Umul8_16@multiplicand
  4483     0570  0824               	movf	___flmul@a,w
  4484     0571  120A  158A  22E2  120A  118A  	fcall	__Umul8_16
  4485     0576  0871               	movf	?__Umul8_16+1,w
  4486     0577  1283               	bcf	3,5	;RP0=0, select bank0
  4487     0578  1303               	bcf	3,6	;RP1=0, select bank0
  4488     0579  00B9               	movwf	___flmul@temp+1
  4489     057A  0870               	movf	?__Umul8_16,w
  4490     057B  00B8               	movwf	___flmul@temp
  4491     057C                     l2413:
  4492     057C  0838               	movf	___flmul@temp,w
  4493     057D  00A8               	movwf	??___flmul
  4494     057E  01A9               	clrf	??___flmul+1
  4495     057F  01AA               	clrf	??___flmul+2
  4496     0580  01AB               	clrf	??___flmul+3
  4497     0581  0828               	movf	??___flmul,w
  4498     0582  07AE               	addwf	___flmul@grs,f
  4499     0583  0829               	movf	??___flmul+1,w
  4500     0584  1103               	clrz
  4501     0585  1803               	skipnc
  4502     0586  3E01               	addlw	1
  4503     0587  1903               	skipnz
  4504     0588  2D8A               	goto	u2831
  4505     0589  07AF               	addwf	___flmul@grs+1,f
  4506     058A                     u2831:
  4507     058A  082A               	movf	??___flmul+2,w
  4508     058B  1103               	clrz
  4509     058C  1803               	skipnc
  4510     058D  3E01               	addlw	1
  4511     058E  1903               	skipnz
  4512     058F  2D91               	goto	u2832
  4513     0590  07B0               	addwf	___flmul@grs+2,f
  4514     0591                     u2832:
  4515     0591  082B               	movf	??___flmul+3,w
  4516     0592  1103               	clrz
  4517     0593  1803               	skipnc
  4518     0594  3E01               	addlw	1
  4519     0595  1903               	skipnz
  4520     0596  2D98               	goto	u2833
  4521     0597  07B1               	addwf	___flmul@grs+3,f
  4522     0598                     u2833:
  4523     0598                     l2415:
  4524     0598  0839               	movf	___flmul@temp+1,w
  4525     0599  00A8               	movwf	??___flmul
  4526     059A  01A9               	clrf	??___flmul+1
  4527     059B  01AA               	clrf	??___flmul+2
  4528     059C  01AB               	clrf	??___flmul+3
  4529     059D  0828               	movf	??___flmul,w
  4530     059E  07B4               	addwf	___flmul@prod,f
  4531     059F  0829               	movf	??___flmul+1,w
  4532     05A0  1103               	clrz
  4533     05A1  1803               	skipnc
  4534     05A2  3E01               	addlw	1
  4535     05A3  1903               	skipnz
  4536     05A4  2DA6               	goto	u2841
  4537     05A5  07B5               	addwf	___flmul@prod+1,f
  4538     05A6                     u2841:
  4539     05A6  082A               	movf	??___flmul+2,w
  4540     05A7  1103               	clrz
  4541     05A8  1803               	skipnc
  4542     05A9  3E01               	addlw	1
  4543     05AA  1903               	skipnz
  4544     05AB  2DAD               	goto	u2842
  4545     05AC  07B6               	addwf	___flmul@prod+2,f
  4546     05AD                     u2842:
  4547     05AD  082B               	movf	??___flmul+3,w
  4548     05AE  1103               	clrz
  4549     05AF  1803               	skipnc
  4550     05B0  3E01               	addlw	1
  4551     05B1  1903               	skipnz
  4552     05B2  2DB4               	goto	u2843
  4553     05B3  07B7               	addwf	___flmul@prod+3,f
  4554     05B4                     u2843:
  4555     05B4                     l2417:
  4556     05B4  3008               	movlw	8
  4557     05B5  00A8               	movwf	??___flmul
  4558     05B6                     u2855:
  4559     05B6  1003               	clrc
  4560     05B7  0DAE               	rlf	___flmul@grs,f
  4561     05B8  0DAF               	rlf	___flmul@grs+1,f
  4562     05B9  0DB0               	rlf	___flmul@grs+2,f
  4563     05BA  0DB1               	rlf	___flmul@grs+3,f
  4564     05BB  0BA8               	decfsz	??___flmul,f
  4565     05BC  2DB6               	goto	u2855
  4566     05BD                     l2419:
  4567     05BD  0821               	movf	___flmul@b+1,w
  4568     05BE  00F0               	movwf	__Umul8_16@multiplicand
  4569     05BF  0824               	movf	___flmul@a,w
  4570     05C0  120A  158A  22E2  120A  118A  	fcall	__Umul8_16
  4571     05C5  0871               	movf	?__Umul8_16+1,w
  4572     05C6  1283               	bcf	3,5	;RP0=0, select bank0
  4573     05C7  1303               	bcf	3,6	;RP1=0, select bank0
  4574     05C8  00B9               	movwf	___flmul@temp+1
  4575     05C9  0870               	movf	?__Umul8_16,w
  4576     05CA  00B8               	movwf	___flmul@temp
  4577     05CB                     l2421:
  4578     05CB  0838               	movf	___flmul@temp,w
  4579     05CC  00A8               	movwf	??___flmul
  4580     05CD  0839               	movf	___flmul@temp+1,w
  4581     05CE  00A9               	movwf	??___flmul+1
  4582     05CF  01AA               	clrf	??___flmul+2
  4583     05D0  01AB               	clrf	??___flmul+3
  4584     05D1  0828               	movf	??___flmul,w
  4585     05D2  07AE               	addwf	___flmul@grs,f
  4586     05D3  0829               	movf	??___flmul+1,w
  4587     05D4  1103               	clrz
  4588     05D5  1803               	skipnc
  4589     05D6  3E01               	addlw	1
  4590     05D7  1903               	skipnz
  4591     05D8  2DDA               	goto	u2861
  4592     05D9  07AF               	addwf	___flmul@grs+1,f
  4593     05DA                     u2861:
  4594     05DA  082A               	movf	??___flmul+2,w
  4595     05DB  1103               	clrz
  4596     05DC  1803               	skipnc
  4597     05DD  3E01               	addlw	1
  4598     05DE  1903               	skipnz
  4599     05DF  2DE1               	goto	u2862
  4600     05E0  07B0               	addwf	___flmul@grs+2,f
  4601     05E1                     u2862:
  4602     05E1  082B               	movf	??___flmul+3,w
  4603     05E2  1103               	clrz
  4604     05E3  1803               	skipnc
  4605     05E4  3E01               	addlw	1
  4606     05E5  1903               	skipnz
  4607     05E6  2DE8               	goto	u2863
  4608     05E7  07B1               	addwf	___flmul@grs+3,f
  4609     05E8                     u2863:
  4610     05E8                     l2423:
  4611     05E8  0820               	movf	___flmul@b,w
  4612     05E9  00F0               	movwf	__Umul8_16@multiplicand
  4613     05EA  0825               	movf	___flmul@a+1,w
  4614     05EB  120A  158A  22E2  120A  118A  	fcall	__Umul8_16
  4615     05F0  0871               	movf	?__Umul8_16+1,w
  4616     05F1  1283               	bcf	3,5	;RP0=0, select bank0
  4617     05F2  1303               	bcf	3,6	;RP1=0, select bank0
  4618     05F3  00B9               	movwf	___flmul@temp+1
  4619     05F4  0870               	movf	?__Umul8_16,w
  4620     05F5  00B8               	movwf	___flmul@temp
  4621     05F6                     l2425:
  4622     05F6  0838               	movf	___flmul@temp,w
  4623     05F7  00A8               	movwf	??___flmul
  4624     05F8  0839               	movf	___flmul@temp+1,w
  4625     05F9  00A9               	movwf	??___flmul+1
  4626     05FA  01AA               	clrf	??___flmul+2
  4627     05FB  01AB               	clrf	??___flmul+3
  4628     05FC  0828               	movf	??___flmul,w
  4629     05FD  07AE               	addwf	___flmul@grs,f
  4630     05FE  0829               	movf	??___flmul+1,w
  4631     05FF  1103               	clrz
  4632     0600  1803               	skipnc
  4633     0601  3E01               	addlw	1
  4634     0602  1903               	skipnz
  4635     0603  2E05               	goto	u2871
  4636     0604  07AF               	addwf	___flmul@grs+1,f
  4637     0605                     u2871:
  4638     0605  082A               	movf	??___flmul+2,w
  4639     0606  1103               	clrz
  4640     0607  1803               	skipnc
  4641     0608  3E01               	addlw	1
  4642     0609  1903               	skipnz
  4643     060A  2E0C               	goto	u2872
  4644     060B  07B0               	addwf	___flmul@grs+2,f
  4645     060C                     u2872:
  4646     060C  082B               	movf	??___flmul+3,w
  4647     060D  1103               	clrz
  4648     060E  1803               	skipnc
  4649     060F  3E01               	addlw	1
  4650     0610  1903               	skipnz
  4651     0611  2E13               	goto	u2873
  4652     0612  07B1               	addwf	___flmul@grs+3,f
  4653     0613                     u2873:
  4654     0613                     l2427:
  4655     0613  3008               	movlw	8
  4656     0614  00A8               	movwf	??___flmul
  4657     0615                     u2885:
  4658     0615  1003               	clrc
  4659     0616  0DAE               	rlf	___flmul@grs,f
  4660     0617  0DAF               	rlf	___flmul@grs+1,f
  4661     0618  0DB0               	rlf	___flmul@grs+2,f
  4662     0619  0DB1               	rlf	___flmul@grs+3,f
  4663     061A  0BA8               	decfsz	??___flmul,f
  4664     061B  2E15               	goto	u2885
  4665     061C  0820               	movf	___flmul@b,w
  4666     061D  00F0               	movwf	__Umul8_16@multiplicand
  4667     061E  0824               	movf	___flmul@a,w
  4668     061F  120A  158A  22E2  120A  118A  	fcall	__Umul8_16
  4669     0624  0871               	movf	?__Umul8_16+1,w
  4670     0625  1283               	bcf	3,5	;RP0=0, select bank0
  4671     0626  1303               	bcf	3,6	;RP1=0, select bank0
  4672     0627  00B9               	movwf	___flmul@temp+1
  4673     0628  0870               	movf	?__Umul8_16,w
  4674     0629  00B8               	movwf	___flmul@temp
  4675     062A                     l2429:
  4676     062A  0838               	movf	___flmul@temp,w
  4677     062B  00A8               	movwf	??___flmul
  4678     062C  0839               	movf	___flmul@temp+1,w
  4679     062D  00A9               	movwf	??___flmul+1
  4680     062E  01AA               	clrf	??___flmul+2
  4681     062F  01AB               	clrf	??___flmul+3
  4682     0630  0828               	movf	??___flmul,w
  4683     0631  07AE               	addwf	___flmul@grs,f
  4684     0632  0829               	movf	??___flmul+1,w
  4685     0633  1103               	clrz
  4686     0634  1803               	skipnc
  4687     0635  3E01               	addlw	1
  4688     0636  1903               	skipnz
  4689     0637  2E39               	goto	u2891
  4690     0638  07AF               	addwf	___flmul@grs+1,f
  4691     0639                     u2891:
  4692     0639  082A               	movf	??___flmul+2,w
  4693     063A  1103               	clrz
  4694     063B  1803               	skipnc
  4695     063C  3E01               	addlw	1
  4696     063D  1903               	skipnz
  4697     063E  2E40               	goto	u2892
  4698     063F  07B0               	addwf	___flmul@grs+2,f
  4699     0640                     u2892:
  4700     0640  082B               	movf	??___flmul+3,w
  4701     0641  1103               	clrz
  4702     0642  1803               	skipnc
  4703     0643  3E01               	addlw	1
  4704     0644  1903               	skipnz
  4705     0645  2E47               	goto	u2893
  4706     0646  07B1               	addwf	___flmul@grs+3,f
  4707     0647                     u2893:
  4708     0647                     l2431:
  4709     0647  0821               	movf	___flmul@b+1,w
  4710     0648  00F0               	movwf	__Umul8_16@multiplicand
  4711     0649  0826               	movf	___flmul@a+2,w
  4712     064A  120A  158A  22E2  120A  118A  	fcall	__Umul8_16
  4713     064F  0871               	movf	?__Umul8_16+1,w
  4714     0650  1283               	bcf	3,5	;RP0=0, select bank0
  4715     0651  1303               	bcf	3,6	;RP1=0, select bank0
  4716     0652  00B9               	movwf	___flmul@temp+1
  4717     0653  0870               	movf	?__Umul8_16,w
  4718     0654  00B8               	movwf	___flmul@temp
  4719     0655  0838               	movf	___flmul@temp,w
  4720     0656  00A8               	movwf	??___flmul
  4721     0657  0839               	movf	___flmul@temp+1,w
  4722     0658  00A9               	movwf	??___flmul+1
  4723     0659  01AA               	clrf	??___flmul+2
  4724     065A  01AB               	clrf	??___flmul+3
  4725     065B  0828               	movf	??___flmul,w
  4726     065C  07B4               	addwf	___flmul@prod,f
  4727     065D  0829               	movf	??___flmul+1,w
  4728     065E  1103               	clrz
  4729     065F  1803               	skipnc
  4730     0660  3E01               	addlw	1
  4731     0661  1903               	skipnz
  4732     0662  2E64               	goto	u2901
  4733     0663  07B5               	addwf	___flmul@prod+1,f
  4734     0664                     u2901:
  4735     0664  082A               	movf	??___flmul+2,w
  4736     0665  1103               	clrz
  4737     0666  1803               	skipnc
  4738     0667  3E01               	addlw	1
  4739     0668  1903               	skipnz
  4740     0669  2E6B               	goto	u2902
  4741     066A  07B6               	addwf	___flmul@prod+2,f
  4742     066B                     u2902:
  4743     066B  082B               	movf	??___flmul+3,w
  4744     066C  1103               	clrz
  4745     066D  1803               	skipnc
  4746     066E  3E01               	addlw	1
  4747     066F  1903               	skipnz
  4748     0670  2E72               	goto	u2903
  4749     0671  07B7               	addwf	___flmul@prod+3,f
  4750     0672                     u2903:
  4751     0672                     l2433:
  4752     0672  0822               	movf	___flmul@b+2,w
  4753     0673  00F0               	movwf	__Umul8_16@multiplicand
  4754     0674  0825               	movf	___flmul@a+1,w
  4755     0675  120A  158A  22E2  120A  118A  	fcall	__Umul8_16
  4756     067A  0871               	movf	?__Umul8_16+1,w
  4757     067B  1283               	bcf	3,5	;RP0=0, select bank0
  4758     067C  1303               	bcf	3,6	;RP1=0, select bank0
  4759     067D  00B9               	movwf	___flmul@temp+1
  4760     067E  0870               	movf	?__Umul8_16,w
  4761     067F  00B8               	movwf	___flmul@temp
  4762     0680                     l2435:
  4763     0680  0838               	movf	___flmul@temp,w
  4764     0681  00A8               	movwf	??___flmul
  4765     0682  0839               	movf	___flmul@temp+1,w
  4766     0683  00A9               	movwf	??___flmul+1
  4767     0684  01AA               	clrf	??___flmul+2
  4768     0685  01AB               	clrf	??___flmul+3
  4769     0686  0828               	movf	??___flmul,w
  4770     0687  07B4               	addwf	___flmul@prod,f
  4771     0688  0829               	movf	??___flmul+1,w
  4772     0689  1103               	clrz
  4773     068A  1803               	skipnc
  4774     068B  3E01               	addlw	1
  4775     068C  1903               	skipnz
  4776     068D  2E8F               	goto	u2911
  4777     068E  07B5               	addwf	___flmul@prod+1,f
  4778     068F                     u2911:
  4779     068F  082A               	movf	??___flmul+2,w
  4780     0690  1103               	clrz
  4781     0691  1803               	skipnc
  4782     0692  3E01               	addlw	1
  4783     0693  1903               	skipnz
  4784     0694  2E96               	goto	u2912
  4785     0695  07B6               	addwf	___flmul@prod+2,f
  4786     0696                     u2912:
  4787     0696  082B               	movf	??___flmul+3,w
  4788     0697  1103               	clrz
  4789     0698  1803               	skipnc
  4790     0699  3E01               	addlw	1
  4791     069A  1903               	skipnz
  4792     069B  2E9D               	goto	u2913
  4793     069C  07B7               	addwf	___flmul@prod+3,f
  4794     069D                     u2913:
  4795     069D  0822               	movf	___flmul@b+2,w
  4796     069E  00F0               	movwf	__Umul8_16@multiplicand
  4797     069F  0826               	movf	___flmul@a+2,w
  4798     06A0  120A  158A  22E2  120A  118A  	fcall	__Umul8_16
  4799     06A5  0871               	movf	?__Umul8_16+1,w
  4800     06A6  1283               	bcf	3,5	;RP0=0, select bank0
  4801     06A7  1303               	bcf	3,6	;RP1=0, select bank0
  4802     06A8  00B9               	movwf	___flmul@temp+1
  4803     06A9  0870               	movf	?__Umul8_16,w
  4804     06AA  00B8               	movwf	___flmul@temp
  4805     06AB                     l2437:
  4806     06AB  0838               	movf	___flmul@temp,w
  4807     06AC  00A8               	movwf	??___flmul
  4808     06AD  0839               	movf	___flmul@temp+1,w
  4809     06AE  00A9               	movwf	??___flmul+1
  4810     06AF  01AA               	clrf	??___flmul+2
  4811     06B0  01AB               	clrf	??___flmul+3
  4812     06B1  3008               	movlw	8
  4813     06B2                     u2925:
  4814     06B2  1003               	clrc
  4815     06B3  0DA8               	rlf	??___flmul,f
  4816     06B4  0DA9               	rlf	??___flmul+1,f
  4817     06B5  0DAA               	rlf	??___flmul+2,f
  4818     06B6  0DAB               	rlf	??___flmul+3,f
  4819     06B7                     u2920:
  4820     06B7  3EFF               	addlw	-1
  4821     06B8  1D03               	skipz
  4822     06B9  2EB2               	goto	u2925
  4823     06BA  0828               	movf	??___flmul,w
  4824     06BB  07B4               	addwf	___flmul@prod,f
  4825     06BC  0829               	movf	??___flmul+1,w
  4826     06BD  1103               	clrz
  4827     06BE  1803               	skipnc
  4828     06BF  3E01               	addlw	1
  4829     06C0  1903               	skipnz
  4830     06C1  2EC3               	goto	u2931
  4831     06C2  07B5               	addwf	___flmul@prod+1,f
  4832     06C3                     u2931:
  4833     06C3  082A               	movf	??___flmul+2,w
  4834     06C4  1103               	clrz
  4835     06C5  1803               	skipnc
  4836     06C6  3E01               	addlw	1
  4837     06C7  1903               	skipnz
  4838     06C8  2ECA               	goto	u2932
  4839     06C9  07B6               	addwf	___flmul@prod+2,f
  4840     06CA                     u2932:
  4841     06CA  082B               	movf	??___flmul+3,w
  4842     06CB  1103               	clrz
  4843     06CC  1803               	skipnc
  4844     06CD  3E01               	addlw	1
  4845     06CE  1903               	skipnz
  4846     06CF  2ED1               	goto	u2933
  4847     06D0  07B7               	addwf	___flmul@prod+3,f
  4848     06D1                     u2933:
  4849     06D1                     l2439:
  4850     06D1  082E               	movf	___flmul@grs,w
  4851     06D2  00A8               	movwf	??___flmul
  4852     06D3  082F               	movf	___flmul@grs+1,w
  4853     06D4  00A9               	movwf	??___flmul+1
  4854     06D5  0830               	movf	___flmul@grs+2,w
  4855     06D6  00AA               	movwf	??___flmul+2
  4856     06D7  0831               	movf	___flmul@grs+3,w
  4857     06D8  00AB               	movwf	??___flmul+3
  4858     06D9  3018               	movlw	24
  4859     06DA                     u2945:
  4860     06DA  1003               	clrc
  4861     06DB  0CAB               	rrf	??___flmul+3,f
  4862     06DC  0CAA               	rrf	??___flmul+2,f
  4863     06DD  0CA9               	rrf	??___flmul+1,f
  4864     06DE  0CA8               	rrf	??___flmul,f
  4865     06DF                     u2940:
  4866     06DF  3EFF               	addlw	-1
  4867     06E0  1D03               	skipz
  4868     06E1  2EDA               	goto	u2945
  4869     06E2  0828               	movf	??___flmul,w
  4870     06E3  07B4               	addwf	___flmul@prod,f
  4871     06E4  0829               	movf	??___flmul+1,w
  4872     06E5  1103               	clrz
  4873     06E6  1803               	skipnc
  4874     06E7  3E01               	addlw	1
  4875     06E8  1903               	skipnz
  4876     06E9  2EEB               	goto	u2951
  4877     06EA  07B5               	addwf	___flmul@prod+1,f
  4878     06EB                     u2951:
  4879     06EB  082A               	movf	??___flmul+2,w
  4880     06EC  1103               	clrz
  4881     06ED  1803               	skipnc
  4882     06EE  3E01               	addlw	1
  4883     06EF  1903               	skipnz
  4884     06F0  2EF2               	goto	u2952
  4885     06F1  07B6               	addwf	___flmul@prod+2,f
  4886     06F2                     u2952:
  4887     06F2  082B               	movf	??___flmul+3,w
  4888     06F3  1103               	clrz
  4889     06F4  1803               	skipnc
  4890     06F5  3E01               	addlw	1
  4891     06F6  1903               	skipnz
  4892     06F7  2EF9               	goto	u2953
  4893     06F8  07B7               	addwf	___flmul@prod+3,f
  4894     06F9                     u2953:
  4895     06F9                     l2441:
  4896     06F9  3008               	movlw	8
  4897     06FA  00A8               	movwf	??___flmul
  4898     06FB                     u2965:
  4899     06FB  1003               	clrc
  4900     06FC  0DAE               	rlf	___flmul@grs,f
  4901     06FD  0DAF               	rlf	___flmul@grs+1,f
  4902     06FE  0DB0               	rlf	___flmul@grs+2,f
  4903     06FF  0DB1               	rlf	___flmul@grs+3,f
  4904     0700  0BA8               	decfsz	??___flmul,f
  4905     0701  2EFB               	goto	u2965
  4906     0702                     l2443:
  4907     0702  0833               	movf	___flmul@bexp,w
  4908     0703  0732               	addwf	___flmul@aexp,w
  4909     0704  00A8               	movwf	??___flmul
  4910     0705  01A9               	clrf	??___flmul+1
  4911     0706  0DA9               	rlf	??___flmul+1,f
  4912     0707  0828               	movf	??___flmul,w
  4913     0708  3E82               	addlw	130
  4914     0709  00B8               	movwf	___flmul@temp
  4915     070A  0829               	movf	??___flmul+1,w
  4916     070B  1803               	skipnc
  4917     070C  3E01               	addlw	1
  4918     070D  3EFF               	addlw	255
  4919     070E  00B9               	movwf	___flmul@temp+1
  4920     070F  2F2D               	goto	l2455
  4921     0710                     l2445:
  4922     0710  3001               	movlw	1
  4923     0711  00A8               	movwf	??___flmul
  4924     0712                     u2975:
  4925     0712  1003               	clrc
  4926     0713  0DB4               	rlf	___flmul@prod,f
  4927     0714  0DB5               	rlf	___flmul@prod+1,f
  4928     0715  0DB6               	rlf	___flmul@prod+2,f
  4929     0716  0DB7               	rlf	___flmul@prod+3,f
  4930     0717  0BA8               	decfsz	??___flmul,f
  4931     0718  2F12               	goto	u2975
  4932     0719                     l2447:
  4933     0719  1FB1               	btfss	___flmul@grs+3,7
  4934     071A  2F1C               	goto	u2981
  4935     071B  2F1D               	goto	u2980
  4936     071C                     u2981:
  4937     071C  2F1E               	goto	l2451
  4938     071D                     u2980:
  4939     071D                     l2449:
  4940     071D  1434               	bsf	___flmul@prod,0
  4941     071E                     l2451:
  4942     071E  3001               	movlw	1
  4943     071F  00A8               	movwf	??___flmul
  4944     0720                     u2995:
  4945     0720  1003               	clrc
  4946     0721  0DAE               	rlf	___flmul@grs,f
  4947     0722  0DAF               	rlf	___flmul@grs+1,f
  4948     0723  0DB0               	rlf	___flmul@grs+2,f
  4949     0724  0DB1               	rlf	___flmul@grs+3,f
  4950     0725  0BA8               	decfsz	??___flmul,f
  4951     0726  2F20               	goto	u2995
  4952     0727                     l2453:
  4953     0727  30FF               	movlw	255
  4954     0728  07B8               	addwf	___flmul@temp,f
  4955     0729  1803               	skipnc
  4956     072A  0AB9               	incf	___flmul@temp+1,f
  4957     072B  30FF               	movlw	255
  4958     072C  07B9               	addwf	___flmul@temp+1,f
  4959     072D                     l2455:
  4960     072D  1FB6               	btfss	___flmul@prod+2,7
  4961     072E  2F30               	goto	u3001
  4962     072F  2F31               	goto	u3000
  4963     0730                     u3001:
  4964     0730  2F10               	goto	l2445
  4965     0731                     u3000:
  4966     0731                     l2457:
  4967     0731  01B2               	clrf	___flmul@aexp
  4968     0732                     l2459:
  4969     0732  1FB1               	btfss	___flmul@grs+3,7
  4970     0733  2F35               	goto	u3011
  4971     0734  2F36               	goto	u3010
  4972     0735                     u3011:
  4973     0735  2F52               	goto	l2467
  4974     0736                     u3010:
  4975     0736                     l2461:
  4976     0736  30FF               	movlw	255
  4977     0737  052E               	andwf	___flmul@grs,w
  4978     0738  00A8               	movwf	??___flmul
  4979     0739  30FF               	movlw	255
  4980     073A  052F               	andwf	___flmul@grs+1,w
  4981     073B  00A9               	movwf	??___flmul+1
  4982     073C  30FF               	movlw	255
  4983     073D  0530               	andwf	___flmul@grs+2,w
  4984     073E  00AA               	movwf	??___flmul+2
  4985     073F  307F               	movlw	127
  4986     0740  0531               	andwf	___flmul@grs+3,w
  4987     0741  00AB               	movwf	??___flmul+3
  4988     0742  082B               	movf	??___flmul+3,w
  4989     0743  042A               	iorwf	??___flmul+2,w
  4990     0744  0429               	iorwf	??___flmul+1,w
  4991     0745  0428               	iorwf	??___flmul,w
  4992     0746  1903               	skipnz
  4993     0747  2F49               	goto	u3021
  4994     0748  2F4A               	goto	u3020
  4995     0749                     u3021:
  4996     0749  2F4D               	goto	l768
  4997     074A                     u3020:
  4998     074A                     l2463:
  4999     074A  01B2               	clrf	___flmul@aexp
  5000     074B  0AB2               	incf	___flmul@aexp,f
  5001     074C  2F52               	goto	l2467
  5002     074D                     l768:
  5003     074D  1C34               	btfss	___flmul@prod,0
  5004     074E  2F50               	goto	u3031
  5005     074F  2F51               	goto	u3030
  5006     0750                     u3031:
  5007     0750  2F52               	goto	l2467
  5008     0751                     u3030:
  5009     0751  2F4A               	goto	l2463
  5010     0752                     l2467:
  5011     0752  0832               	movf	___flmul@aexp,w
  5012     0753  1903               	btfsc	3,2
  5013     0754  2F56               	goto	u3041
  5014     0755  2F57               	goto	u3040
  5015     0756                     u3041:
  5016     0756  2F88               	goto	l2477
  5017     0757                     u3040:
  5018     0757                     l2469:
  5019     0757  3001               	movlw	1
  5020     0758  07B4               	addwf	___flmul@prod,f
  5021     0759  3000               	movlw	0
  5022     075A  1803               	skipnc
  5023     075B  3001               	movlw	1
  5024     075C  07B5               	addwf	___flmul@prod+1,f
  5025     075D  3000               	movlw	0
  5026     075E  1803               	skipnc
  5027     075F  3001               	movlw	1
  5028     0760  07B6               	addwf	___flmul@prod+2,f
  5029     0761  3000               	movlw	0
  5030     0762  1803               	skipnc
  5031     0763  3001               	movlw	1
  5032     0764  07B7               	addwf	___flmul@prod+3,f
  5033     0765                     l2471:
  5034     0765  1C37               	btfss	___flmul@prod+3,0
  5035     0766  2F68               	goto	u3051
  5036     0767  2F69               	goto	u3050
  5037     0768                     u3051:
  5038     0768  2F88               	goto	l2477
  5039     0769                     u3050:
  5040     0769                     l2473:
  5041     0769  0834               	movf	___flmul@prod,w
  5042     076A  00A8               	movwf	??___flmul
  5043     076B  0835               	movf	___flmul@prod+1,w
  5044     076C  00A9               	movwf	??___flmul+1
  5045     076D  0836               	movf	___flmul@prod+2,w
  5046     076E  00AA               	movwf	??___flmul+2
  5047     076F  0837               	movf	___flmul@prod+3,w
  5048     0770  00AB               	movwf	??___flmul+3
  5049     0771  3001               	movlw	1
  5050     0772  00AC               	movwf	??___flmul+4
  5051     0773                     u3065:
  5052     0773  0D2B               	rlf	??___flmul+3,w
  5053     0774  0CAB               	rrf	??___flmul+3,f
  5054     0775  0CAA               	rrf	??___flmul+2,f
  5055     0776  0CA9               	rrf	??___flmul+1,f
  5056     0777  0CA8               	rrf	??___flmul,f
  5057     0778                     u3060:
  5058     0778  0BAC               	decfsz	??___flmul+4,f
  5059     0779  2F73               	goto	u3065
  5060     077A  082B               	movf	??___flmul+3,w
  5061     077B  00B7               	movwf	___flmul@prod+3
  5062     077C  082A               	movf	??___flmul+2,w
  5063     077D  00B6               	movwf	___flmul@prod+2
  5064     077E  0829               	movf	??___flmul+1,w
  5065     077F  00B5               	movwf	___flmul@prod+1
  5066     0780  0828               	movf	??___flmul,w
  5067     0781  00B4               	movwf	___flmul@prod
  5068     0782                     l2475:
  5069     0782  3001               	movlw	1
  5070     0783  07B8               	addwf	___flmul@temp,f
  5071     0784  1803               	skipnc
  5072     0785  0AB9               	incf	___flmul@temp+1,f
  5073     0786  3000               	movlw	0
  5074     0787  07B9               	addwf	___flmul@temp+1,f
  5075     0788                     l2477:
  5076     0788  0839               	movf	___flmul@temp+1,w
  5077     0789  3A80               	xorlw	128
  5078     078A  00FF               	movwf	btemp+1
  5079     078B  3080               	movlw	128
  5080     078C  027F               	subwf	btemp+1,w
  5081     078D  1D03               	skipz
  5082     078E  2F91               	goto	u3075
  5083     078F  30FF               	movlw	255
  5084     0790  0238               	subwf	___flmul@temp,w
  5085     0791                     u3075:
  5086     0791  1C03               	skipc
  5087     0792  2F94               	goto	u3071
  5088     0793  2F95               	goto	u3070
  5089     0794                     u3071:
  5090     0794  2FA0               	goto	l2481
  5091     0795                     u3070:
  5092     0795                     l2479:
  5093     0795  307F               	movlw	127
  5094     0796  1283               	bcf	3,5	;RP0=0, select bank0
  5095     0797  1303               	bcf	3,6	;RP1=0, select bank0
  5096     0798  00B7               	movwf	___flmul@prod+3
  5097     0799  3080               	movlw	128
  5098     079A  00B6               	movwf	___flmul@prod+2
  5099     079B  3000               	movlw	0
  5100     079C  00B5               	movwf	___flmul@prod+1
  5101     079D  3000               	movlw	0
  5102     079E  00B4               	movwf	___flmul@prod
  5103     079F  2FD1               	goto	l774
  5104     07A0                     l2481:
  5105     07A0  1283               	bcf	3,5	;RP0=0, select bank0
  5106     07A1  1303               	bcf	3,6	;RP1=0, select bank0
  5107     07A2  0839               	movf	___flmul@temp+1,w
  5108     07A3  3A80               	xorlw	128
  5109     07A4  00FF               	movwf	btemp+1
  5110     07A5  3080               	movlw	128
  5111     07A6  027F               	subwf	btemp+1,w
  5112     07A7  1D03               	skipz
  5113     07A8  2FAB               	goto	u3085
  5114     07A9  3001               	movlw	1
  5115     07AA  0238               	subwf	___flmul@temp,w
  5116     07AB                     u3085:
  5117     07AB  1803               	skipnc
  5118     07AC  2FAE               	goto	u3081
  5119     07AD  2FAF               	goto	u3080
  5120     07AE                     u3081:
  5121     07AE  2FBB               	goto	l2487
  5122     07AF                     u3080:
  5123     07AF                     l2483:
  5124     07AF  3000               	movlw	0
  5125     07B0  1283               	bcf	3,5	;RP0=0, select bank0
  5126     07B1  1303               	bcf	3,6	;RP1=0, select bank0
  5127     07B2  00B7               	movwf	___flmul@prod+3
  5128     07B3  3000               	movlw	0
  5129     07B4  00B6               	movwf	___flmul@prod+2
  5130     07B5  3000               	movlw	0
  5131     07B6  00B5               	movwf	___flmul@prod+1
  5132     07B7  3000               	movlw	0
  5133     07B8  00B4               	movwf	___flmul@prod
  5134     07B9                     l2485:
  5135     07B9  01AD               	clrf	___flmul@sign
  5136     07BA  2FD1               	goto	l774
  5137     07BB                     l2487:
  5138     07BB  1283               	bcf	3,5	;RP0=0, select bank0
  5139     07BC  1303               	bcf	3,6	;RP1=0, select bank0
  5140     07BD  0838               	movf	___flmul@temp,w
  5141     07BE  00B3               	movwf	___flmul@bexp
  5142     07BF  30FF               	movlw	255
  5143     07C0  05B4               	andwf	___flmul@prod,f
  5144     07C1  30FF               	movlw	255
  5145     07C2  05B5               	andwf	___flmul@prod+1,f
  5146     07C3  307F               	movlw	127
  5147     07C4  05B6               	andwf	___flmul@prod+2,f
  5148     07C5  3000               	movlw	0
  5149     07C6  05B7               	andwf	___flmul@prod+3,f
  5150     07C7                     l2489:
  5151     07C7  1C33               	btfss	___flmul@bexp,0
  5152     07C8  2FCA               	goto	u3091
  5153     07C9  2FCB               	goto	u3090
  5154     07CA                     u3091:
  5155     07CA  2FCC               	goto	l2493
  5156     07CB                     u3090:
  5157     07CB                     l2491:
  5158     07CB  17B6               	bsf	___flmul@prod+2,7
  5159     07CC                     l2493:
  5160     07CC  0833               	movf	___flmul@bexp,w
  5161     07CD  00A8               	movwf	??___flmul
  5162     07CE  1003               	clrc
  5163     07CF  0C28               	rrf	??___flmul,w
  5164     07D0  00B7               	movwf	___flmul@prod+3
  5165     07D1                     l774:
  5166     07D1  082D               	movf	___flmul@sign,w
  5167     07D2  00A8               	movwf	??___flmul
  5168     07D3  0828               	movf	??___flmul,w
  5169     07D4  04B7               	iorwf	___flmul@prod+3,f
  5170     07D5                     l2495:
  5171     07D5  0837               	movf	___flmul@prod+3,w
  5172     07D6  00A3               	movwf	?___flmul+3
  5173     07D7  0836               	movf	___flmul@prod+2,w
  5174     07D8  00A2               	movwf	?___flmul+2
  5175     07D9  0835               	movf	___flmul@prod+1,w
  5176     07DA  00A1               	movwf	?___flmul+1
  5177     07DB  0834               	movf	___flmul@prod,w
  5178     07DC  00A0               	movwf	?___flmul
  5179     07DD                     l762:
  5180     07DD  0008               	return
  5181     07DE                     __end_of___flmul:
  5182                           
  5183                           	psect	text24
  5184     0AE2                     __ptext24:	
  5185 ;; *************** function __Umul8_16 *****************
  5186 ;; Defined at:
  5187 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;  multiplier      1    wreg     unsigned char 
  5190 ;;  multiplicand    1    0[COMMON] unsigned char 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  multiplier      1    8[COMMON] unsigned char 
  5193 ;;  word_mpld       2    6[COMMON] unsigned int 
  5194 ;;  product         2    4[COMMON] unsigned int 
  5195 ;; Return value:  Size  Location     Type
  5196 ;;                  2    0[COMMON] unsigned int 
  5197 ;; Registers used:
  5198 ;;		wreg, status,2, status,0
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5204 ;;      Params:         2       0       0       0       0
  5205 ;;      Locals:         5       0       0       0       0
  5206 ;;      Temps:          2       0       0       0       0
  5207 ;;      Totals:         9       0       0       0       0
  5208 ;;Total ram usage:        9 bytes
  5209 ;; Hardware stack levels used: 1
  5210 ;; This function calls:
  5211 ;;		Nothing
  5212 ;; This function is called by:
  5213 ;;		___flmul
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217     0AE2                     __Umul8_16:	
  5218                           ;psect for function __Umul8_16
  5219                           
  5220                           
  5221                           ;incstack = 0
  5222                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5223                           ;__Umul8_16@multiplier stored from wreg
  5224     0AE2  00F8               	movwf	__Umul8_16@multiplier
  5225     0AE3                     l1873:
  5226     0AE3  01F4               	clrf	__Umul8_16@product
  5227     0AE4  01F5               	clrf	__Umul8_16@product+1
  5228     0AE5                     l1875:
  5229     0AE5  0870               	movf	__Umul8_16@multiplicand,w
  5230     0AE6  00F2               	movwf	??__Umul8_16
  5231     0AE7  01F3               	clrf	??__Umul8_16+1
  5232     0AE8  0872               	movf	??__Umul8_16,w
  5233     0AE9  00F6               	movwf	__Umul8_16@word_mpld
  5234     0AEA  0873               	movf	??__Umul8_16+1,w
  5235     0AEB  00F7               	movwf	__Umul8_16@word_mpld+1
  5236     0AEC                     l1877:
  5237     0AEC  1C78               	btfss	__Umul8_16@multiplier,0
  5238     0AED  2AEF               	goto	u1901
  5239     0AEE  2AF0               	goto	u1900
  5240     0AEF                     u1901:
  5241     0AEF  2AF6               	goto	l781
  5242     0AF0                     u1900:
  5243     0AF0                     l1879:
  5244     0AF0  0876               	movf	__Umul8_16@word_mpld,w
  5245     0AF1  07F4               	addwf	__Umul8_16@product,f
  5246     0AF2  1803               	skipnc
  5247     0AF3  0AF5               	incf	__Umul8_16@product+1,f
  5248     0AF4  0877               	movf	__Umul8_16@word_mpld+1,w
  5249     0AF5  07F5               	addwf	__Umul8_16@product+1,f
  5250     0AF6                     l781:
  5251     0AF6  3001               	movlw	1
  5252     0AF7                     u1915:
  5253     0AF7  1003               	clrc
  5254     0AF8  0DF6               	rlf	__Umul8_16@word_mpld,f
  5255     0AF9  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5256     0AFA  3EFF               	addlw	-1
  5257     0AFB  1D03               	skipz
  5258     0AFC  2AF7               	goto	u1915
  5259     0AFD  1003               	clrc
  5260     0AFE  0CF8               	rrf	__Umul8_16@multiplier,f
  5261     0AFF                     l1881:
  5262     0AFF  0878               	movf	__Umul8_16@multiplier,w
  5263     0B00  1D03               	btfss	3,2
  5264     0B01  2B03               	goto	u1921
  5265     0B02  2B04               	goto	u1920
  5266     0B03                     u1921:
  5267     0B03  2AEC               	goto	l1877
  5268     0B04                     u1920:
  5269     0B04                     l1883:
  5270     0B04  0875               	movf	__Umul8_16@product+1,w
  5271     0B05  00F1               	movwf	?__Umul8_16+1
  5272     0B06  0874               	movf	__Umul8_16@product,w
  5273     0B07  00F0               	movwf	?__Umul8_16
  5274     0B08                     l783:
  5275     0B08  0008               	return
  5276     0B09                     __end_of__Umul8_16:
  5277                           
  5278                           	psect	text25
  5279     02C6                     __ptext25:	
  5280 ;; *************** function ___fldiv *****************
  5281 ;; Defined at:
  5282 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcdiv.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;  a               4   26[BANK0 ] unsigned int 
  5285 ;;  b               4   30[BANK0 ] unsigned int 
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;  grs             4   46[BANK0 ] unsigned long 
  5288 ;;  rem             4   39[BANK0 ] unsigned long 
  5289 ;;  new_exp         2   44[BANK0 ] int 
  5290 ;;  aexp            1   51[BANK0 ] unsigned char 
  5291 ;;  bexp            1   50[BANK0 ] unsigned char 
  5292 ;;  sign            1   43[BANK0 ] unsigned char 
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  4   26[BANK0 ] unsigned char 
  5295 ;; Registers used:
  5296 ;;		wreg, status,2, status,0, btemp+1
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5302 ;;      Params:         0       8       0       0       0
  5303 ;;      Locals:         0      13       0       0       0
  5304 ;;      Temps:          0       5       0       0       0
  5305 ;;      Totals:         0      26       0       0       0
  5306 ;;Total ram usage:       26 bytes
  5307 ;; Hardware stack levels used: 1
  5308 ;; This function calls:
  5309 ;;		Nothing
  5310 ;; This function is called by:
  5311 ;;		_main
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315     02C6                     ___fldiv:	
  5316                           ;psect for function ___fldiv
  5317                           
  5318     02C6                     l2217:	
  5319                           ;incstack = 0
  5320                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  5321                           
  5322     02C6  1283               	bcf	3,5	;RP0=0, select bank0
  5323     02C7  1303               	bcf	3,6	;RP1=0, select bank0
  5324     02C8  0841               	movf	___fldiv@b+3,w
  5325     02C9  3980               	andlw	128
  5326     02CA  00CB               	movwf	___fldiv@sign
  5327     02CB                     l2219:
  5328     02CB  0841               	movf	___fldiv@b+3,w
  5329     02CC  00C2               	movwf	??___fldiv
  5330     02CD  0742               	addwf	??___fldiv,w
  5331     02CE  00D2               	movwf	___fldiv@bexp
  5332     02CF                     l2221:
  5333     02CF  1FC0               	btfss	___fldiv@b+2,7
  5334     02D0  2AD2               	goto	u2441
  5335     02D1  2AD3               	goto	u2440
  5336     02D2                     u2441:
  5337     02D2  2AD4               	goto	l2225
  5338     02D3                     u2440:
  5339     02D3                     l2223:
  5340     02D3  1452               	bsf	___fldiv@bexp,0
  5341     02D4                     l2225:
  5342     02D4  0852               	movf	___fldiv@bexp,w
  5343     02D5  1903               	btfsc	3,2
  5344     02D6  2AD8               	goto	u2451
  5345     02D7  2AD9               	goto	u2450
  5346     02D8                     u2451:
  5347     02D8  2AE9               	goto	l2235
  5348     02D9                     u2450:
  5349     02D9                     l2227:
  5350     02D9  0A52               	incf	___fldiv@bexp,w
  5351     02DA  1D03               	btfss	3,2
  5352     02DB  2ADD               	goto	u2461
  5353     02DC  2ADE               	goto	u2460
  5354     02DD                     u2461:
  5355     02DD  2AE6               	goto	l2231
  5356     02DE                     u2460:
  5357     02DE                     l2229:
  5358     02DE  3000               	movlw	0
  5359     02DF  00C1               	movwf	___fldiv@b+3
  5360     02E0  3000               	movlw	0
  5361     02E1  00C0               	movwf	___fldiv@b+2
  5362     02E2  3000               	movlw	0
  5363     02E3  00BF               	movwf	___fldiv@b+1
  5364     02E4  3000               	movlw	0
  5365     02E5  00BE               	movwf	___fldiv@b
  5366     02E6                     l2231:
  5367     02E6  17C0               	bsf	___fldiv@b+2,7
  5368     02E7                     l2233:
  5369     02E7  01C1               	clrf	___fldiv@b+3
  5370     02E8  2AF1               	goto	l2237
  5371     02E9                     l2235:
  5372     02E9  3000               	movlw	0
  5373     02EA  00C1               	movwf	___fldiv@b+3
  5374     02EB  3000               	movlw	0
  5375     02EC  00C0               	movwf	___fldiv@b+2
  5376     02ED  3000               	movlw	0
  5377     02EE  00BF               	movwf	___fldiv@b+1
  5378     02EF  3000               	movlw	0
  5379     02F0  00BE               	movwf	___fldiv@b
  5380     02F1                     l2237:
  5381     02F1  083D               	movf	___fldiv@a+3,w
  5382     02F2  3980               	andlw	128
  5383     02F3  00C2               	movwf	??___fldiv
  5384     02F4  0842               	movf	??___fldiv,w
  5385     02F5  06CB               	xorwf	___fldiv@sign,f
  5386     02F6                     l2239:
  5387     02F6  083D               	movf	___fldiv@a+3,w
  5388     02F7  00C2               	movwf	??___fldiv
  5389     02F8  0742               	addwf	??___fldiv,w
  5390     02F9  00D3               	movwf	___fldiv@aexp
  5391     02FA                     l2241:
  5392     02FA  1FBC               	btfss	___fldiv@a+2,7
  5393     02FB  2AFD               	goto	u2471
  5394     02FC  2AFE               	goto	u2470
  5395     02FD                     u2471:
  5396     02FD  2AFF               	goto	l2245
  5397     02FE                     u2470:
  5398     02FE                     l2243:
  5399     02FE  1453               	bsf	___fldiv@aexp,0
  5400     02FF                     l2245:
  5401     02FF  0853               	movf	___fldiv@aexp,w
  5402     0300  1903               	btfsc	3,2
  5403     0301  2B03               	goto	u2481
  5404     0302  2B04               	goto	u2480
  5405     0303                     u2481:
  5406     0303  2B14               	goto	l2255
  5407     0304                     u2480:
  5408     0304                     l2247:
  5409     0304  0A53               	incf	___fldiv@aexp,w
  5410     0305  1D03               	btfss	3,2
  5411     0306  2B08               	goto	u2491
  5412     0307  2B09               	goto	u2490
  5413     0308                     u2491:
  5414     0308  2B11               	goto	l2251
  5415     0309                     u2490:
  5416     0309                     l2249:
  5417     0309  3000               	movlw	0
  5418     030A  00BD               	movwf	___fldiv@a+3
  5419     030B  3000               	movlw	0
  5420     030C  00BC               	movwf	___fldiv@a+2
  5421     030D  3000               	movlw	0
  5422     030E  00BB               	movwf	___fldiv@a+1
  5423     030F  3000               	movlw	0
  5424     0310  00BA               	movwf	___fldiv@a
  5425     0311                     l2251:
  5426     0311  17BC               	bsf	___fldiv@a+2,7
  5427     0312                     l2253:
  5428     0312  01BD               	clrf	___fldiv@a+3
  5429     0313  2B1C               	goto	l722
  5430     0314                     l2255:
  5431     0314  3000               	movlw	0
  5432     0315  00BD               	movwf	___fldiv@a+3
  5433     0316  3000               	movlw	0
  5434     0317  00BC               	movwf	___fldiv@a+2
  5435     0318  3000               	movlw	0
  5436     0319  00BB               	movwf	___fldiv@a+1
  5437     031A  3000               	movlw	0
  5438     031B  00BA               	movwf	___fldiv@a
  5439     031C                     l722:
  5440     031C  083D               	movf	___fldiv@a+3,w
  5441     031D  043C               	iorwf	___fldiv@a+2,w
  5442     031E  043B               	iorwf	___fldiv@a+1,w
  5443     031F  043A               	iorwf	___fldiv@a,w
  5444     0320  1D03               	skipz
  5445     0321  2B23               	goto	u2501
  5446     0322  2B24               	goto	u2500
  5447     0323                     u2501:
  5448     0323  2B3D               	goto	l2265
  5449     0324                     u2500:
  5450     0324                     l2257:
  5451     0324  3000               	movlw	0
  5452     0325  00C1               	movwf	___fldiv@b+3
  5453     0326  3000               	movlw	0
  5454     0327  00C0               	movwf	___fldiv@b+2
  5455     0328  3000               	movlw	0
  5456     0329  00BF               	movwf	___fldiv@b+1
  5457     032A  3000               	movlw	0
  5458     032B  00BE               	movwf	___fldiv@b
  5459     032C  3080               	movlw	128
  5460     032D  04C0               	iorwf	___fldiv@b+2,f
  5461     032E  307F               	movlw	127
  5462     032F  04C1               	iorwf	___fldiv@b+3,f
  5463     0330                     l2259:
  5464     0330  084B               	movf	___fldiv@sign,w
  5465     0331  00C2               	movwf	??___fldiv
  5466     0332  0842               	movf	??___fldiv,w
  5467     0333  04C1               	iorwf	___fldiv@b+3,f
  5468     0334                     l2261:
  5469     0334  0841               	movf	___fldiv@b+3,w
  5470     0335  00BD               	movwf	?___fldiv+3
  5471     0336  0840               	movf	___fldiv@b+2,w
  5472     0337  00BC               	movwf	?___fldiv+2
  5473     0338  083F               	movf	___fldiv@b+1,w
  5474     0339  00BB               	movwf	?___fldiv+1
  5475     033A  083E               	movf	___fldiv@b,w
  5476     033B  00BA               	movwf	?___fldiv
  5477     033C  2C98               	goto	l724
  5478     033D                     l2265:
  5479     033D  0852               	movf	___fldiv@bexp,w
  5480     033E  1D03               	btfss	3,2
  5481     033F  2B41               	goto	u2511
  5482     0340  2B42               	goto	u2510
  5483     0341                     u2511:
  5484     0341  2B4B               	goto	l2271
  5485     0342                     u2510:
  5486     0342                     l2267:
  5487     0342  3000               	movlw	0
  5488     0343  00BD               	movwf	?___fldiv+3
  5489     0344  3000               	movlw	0
  5490     0345  00BC               	movwf	?___fldiv+2
  5491     0346  3000               	movlw	0
  5492     0347  00BB               	movwf	?___fldiv+1
  5493     0348  3000               	movlw	0
  5494     0349  00BA               	movwf	?___fldiv
  5495     034A  2C98               	goto	l724
  5496     034B                     l2271:
  5497     034B  0852               	movf	___fldiv@bexp,w
  5498     034C  00C2               	movwf	??___fldiv
  5499     034D  01C3               	clrf	??___fldiv+1
  5500     034E  0843               	movf	??___fldiv+1,w
  5501     034F  00C5               	movwf	??___fldiv+3
  5502     0350  0853               	movf	___fldiv@aexp,w
  5503     0351  0242               	subwf	??___fldiv,w
  5504     0352  00C4               	movwf	??___fldiv+2
  5505     0353  1C03               	skipc
  5506     0354  03C5               	decf	??___fldiv+3,f
  5507     0355  0844               	movf	??___fldiv+2,w
  5508     0356  3E7F               	addlw	127
  5509     0357  00CC               	movwf	___fldiv@new_exp
  5510     0358  0845               	movf	??___fldiv+3,w
  5511     0359  1803               	skipnc
  5512     035A  3E01               	addlw	1
  5513     035B  3E00               	addlw	0
  5514     035C  00CD               	movwf	___fldiv@new_exp+1
  5515     035D                     l2273:
  5516     035D  0841               	movf	___fldiv@b+3,w
  5517     035E  00CA               	movwf	___fldiv@rem+3
  5518     035F  0840               	movf	___fldiv@b+2,w
  5519     0360  00C9               	movwf	___fldiv@rem+2
  5520     0361  083F               	movf	___fldiv@b+1,w
  5521     0362  00C8               	movwf	___fldiv@rem+1
  5522     0363  083E               	movf	___fldiv@b,w
  5523     0364  00C7               	movwf	___fldiv@rem
  5524     0365                     l2275:
  5525     0365  3000               	movlw	0
  5526     0366  00C1               	movwf	___fldiv@b+3
  5527     0367  3000               	movlw	0
  5528     0368  00C0               	movwf	___fldiv@b+2
  5529     0369  3000               	movlw	0
  5530     036A  00BF               	movwf	___fldiv@b+1
  5531     036B  3000               	movlw	0
  5532     036C  00BE               	movwf	___fldiv@b
  5533     036D                     l2277:
  5534     036D  3000               	movlw	0
  5535     036E  00D1               	movwf	___fldiv@grs+3
  5536     036F  3000               	movlw	0
  5537     0370  00D0               	movwf	___fldiv@grs+2
  5538     0371  3000               	movlw	0
  5539     0372  00CF               	movwf	___fldiv@grs+1
  5540     0373  3000               	movlw	0
  5541     0374  00CE               	movwf	___fldiv@grs
  5542     0375                     l2279:
  5543     0375  01D3               	clrf	___fldiv@aexp
  5544     0376  2BC1               	goto	l2299
  5545     0377                     l2281:
  5546     0377  0853               	movf	___fldiv@aexp,w
  5547     0378  1903               	btfsc	3,2
  5548     0379  2B7B               	goto	u2521
  5549     037A  2B7C               	goto	u2520
  5550     037B                     u2521:
  5551     037B  2B9C               	goto	l2291
  5552     037C                     u2520:
  5553     037C                     l2283:
  5554     037C  3001               	movlw	1
  5555     037D  00C2               	movwf	??___fldiv
  5556     037E                     u2535:
  5557     037E  1003               	clrc
  5558     037F  0DC7               	rlf	___fldiv@rem,f
  5559     0380  0DC8               	rlf	___fldiv@rem+1,f
  5560     0381  0DC9               	rlf	___fldiv@rem+2,f
  5561     0382  0DCA               	rlf	___fldiv@rem+3,f
  5562     0383  0BC2               	decfsz	??___fldiv,f
  5563     0384  2B7E               	goto	u2535
  5564     0385  3001               	movlw	1
  5565     0386  00C2               	movwf	??___fldiv
  5566     0387                     u2545:
  5567     0387  1003               	clrc
  5568     0388  0DBE               	rlf	___fldiv@b,f
  5569     0389  0DBF               	rlf	___fldiv@b+1,f
  5570     038A  0DC0               	rlf	___fldiv@b+2,f
  5571     038B  0DC1               	rlf	___fldiv@b+3,f
  5572     038C  0BC2               	decfsz	??___fldiv,f
  5573     038D  2B87               	goto	u2545
  5574     038E                     l2285:
  5575     038E  1FD1               	btfss	___fldiv@grs+3,7
  5576     038F  2B91               	goto	u2551
  5577     0390  2B92               	goto	u2550
  5578     0391                     u2551:
  5579     0391  2B93               	goto	l2289
  5580     0392                     u2550:
  5581     0392                     l2287:
  5582     0392  143E               	bsf	___fldiv@b,0
  5583     0393                     l2289:
  5584     0393  3001               	movlw	1
  5585     0394  00C2               	movwf	??___fldiv
  5586     0395                     u2565:
  5587     0395  1003               	clrc
  5588     0396  0DCE               	rlf	___fldiv@grs,f
  5589     0397  0DCF               	rlf	___fldiv@grs+1,f
  5590     0398  0DD0               	rlf	___fldiv@grs+2,f
  5591     0399  0DD1               	rlf	___fldiv@grs+3,f
  5592     039A  0BC2               	decfsz	??___fldiv,f
  5593     039B  2B95               	goto	u2565
  5594     039C                     l2291:
  5595     039C  083D               	movf	___fldiv@a+3,w
  5596     039D  024A               	subwf	___fldiv@rem+3,w
  5597     039E  1D03               	skipz
  5598     039F  2BAA               	goto	u2575
  5599     03A0  083C               	movf	___fldiv@a+2,w
  5600     03A1  0249               	subwf	___fldiv@rem+2,w
  5601     03A2  1D03               	skipz
  5602     03A3  2BAA               	goto	u2575
  5603     03A4  083B               	movf	___fldiv@a+1,w
  5604     03A5  0248               	subwf	___fldiv@rem+1,w
  5605     03A6  1D03               	skipz
  5606     03A7  2BAA               	goto	u2575
  5607     03A8  083A               	movf	___fldiv@a,w
  5608     03A9  0247               	subwf	___fldiv@rem,w
  5609     03AA                     u2575:
  5610     03AA  1C03               	skipc
  5611     03AB  2BAD               	goto	u2571
  5612     03AC  2BAE               	goto	u2570
  5613     03AD                     u2571:
  5614     03AD  2BBD               	goto	l2297
  5615     03AE                     u2570:
  5616     03AE                     l2293:
  5617     03AE  1751               	bsf	___fldiv@grs+3,6
  5618     03AF                     l2295:
  5619     03AF  083A               	movf	___fldiv@a,w
  5620     03B0  02C7               	subwf	___fldiv@rem,f
  5621     03B1  083B               	movf	___fldiv@a+1,w
  5622     03B2  1C03               	skipc
  5623     03B3  0F3B               	incfsz	___fldiv@a+1,w
  5624     03B4  02C8               	subwf	___fldiv@rem+1,f
  5625     03B5  083C               	movf	___fldiv@a+2,w
  5626     03B6  1C03               	skipc
  5627     03B7  0F3C               	incfsz	___fldiv@a+2,w
  5628     03B8  02C9               	subwf	___fldiv@rem+2,f
  5629     03B9  083D               	movf	___fldiv@a+3,w
  5630     03BA  1C03               	skipc
  5631     03BB  0F3D               	incfsz	___fldiv@a+3,w
  5632     03BC  02CA               	subwf	___fldiv@rem+3,f
  5633     03BD                     l2297:
  5634     03BD  3001               	movlw	1
  5635     03BE  00C2               	movwf	??___fldiv
  5636     03BF  0842               	movf	??___fldiv,w
  5637     03C0  07D3               	addwf	___fldiv@aexp,f
  5638     03C1                     l2299:
  5639     03C1  301A               	movlw	26
  5640     03C2  0253               	subwf	___fldiv@aexp,w
  5641     03C3  1C03               	skipc
  5642     03C4  2BC6               	goto	u2581
  5643     03C5  2BC7               	goto	u2580
  5644     03C6                     u2581:
  5645     03C6  2B77               	goto	l2281
  5646     03C7                     u2580:
  5647     03C7                     l2301:
  5648     03C7  084A               	movf	___fldiv@rem+3,w
  5649     03C8  0449               	iorwf	___fldiv@rem+2,w
  5650     03C9  0448               	iorwf	___fldiv@rem+1,w
  5651     03CA  0447               	iorwf	___fldiv@rem,w
  5652     03CB  1903               	skipnz
  5653     03CC  2BCE               	goto	u2591
  5654     03CD  2BCF               	goto	u2590
  5655     03CE                     u2591:
  5656     03CE  2BEE               	goto	l2315
  5657     03CF                     u2590:
  5658     03CF                     l2303:
  5659     03CF  144E               	bsf	___fldiv@grs,0
  5660     03D0  2BEE               	goto	l2315
  5661     03D1                     l2305:
  5662     03D1  3001               	movlw	1
  5663     03D2  00C2               	movwf	??___fldiv
  5664     03D3                     u2605:
  5665     03D3  1003               	clrc
  5666     03D4  0DBE               	rlf	___fldiv@b,f
  5667     03D5  0DBF               	rlf	___fldiv@b+1,f
  5668     03D6  0DC0               	rlf	___fldiv@b+2,f
  5669     03D7  0DC1               	rlf	___fldiv@b+3,f
  5670     03D8  0BC2               	decfsz	??___fldiv,f
  5671     03D9  2BD3               	goto	u2605
  5672     03DA                     l2307:
  5673     03DA  1FD1               	btfss	___fldiv@grs+3,7
  5674     03DB  2BDD               	goto	u2611
  5675     03DC  2BDE               	goto	u2610
  5676     03DD                     u2611:
  5677     03DD  2BDF               	goto	l2311
  5678     03DE                     u2610:
  5679     03DE                     l2309:
  5680     03DE  143E               	bsf	___fldiv@b,0
  5681     03DF                     l2311:
  5682     03DF  3001               	movlw	1
  5683     03E0  00C2               	movwf	??___fldiv
  5684     03E1                     u2625:
  5685     03E1  1003               	clrc
  5686     03E2  0DCE               	rlf	___fldiv@grs,f
  5687     03E3  0DCF               	rlf	___fldiv@grs+1,f
  5688     03E4  0DD0               	rlf	___fldiv@grs+2,f
  5689     03E5  0DD1               	rlf	___fldiv@grs+3,f
  5690     03E6  0BC2               	decfsz	??___fldiv,f
  5691     03E7  2BE1               	goto	u2625
  5692     03E8                     l2313:
  5693     03E8  30FF               	movlw	255
  5694     03E9  07CC               	addwf	___fldiv@new_exp,f
  5695     03EA  1803               	skipnc
  5696     03EB  0ACD               	incf	___fldiv@new_exp+1,f
  5697     03EC  30FF               	movlw	255
  5698     03ED  07CD               	addwf	___fldiv@new_exp+1,f
  5699     03EE                     l2315:
  5700     03EE  1FC0               	btfss	___fldiv@b+2,7
  5701     03EF  2BF1               	goto	u2631
  5702     03F0  2BF2               	goto	u2630
  5703     03F1                     u2631:
  5704     03F1  2BD1               	goto	l2305
  5705     03F2                     u2630:
  5706     03F2                     l2317:
  5707     03F2  01D3               	clrf	___fldiv@aexp
  5708     03F3                     l2319:
  5709     03F3  1FD1               	btfss	___fldiv@grs+3,7
  5710     03F4  2BF6               	goto	u2641
  5711     03F5  2BF7               	goto	u2640
  5712     03F6                     u2641:
  5713     03F6  2C13               	goto	l2327
  5714     03F7                     u2640:
  5715     03F7                     l2321:
  5716     03F7  30FF               	movlw	255
  5717     03F8  054E               	andwf	___fldiv@grs,w
  5718     03F9  00C2               	movwf	??___fldiv
  5719     03FA  30FF               	movlw	255
  5720     03FB  054F               	andwf	___fldiv@grs+1,w
  5721     03FC  00C3               	movwf	??___fldiv+1
  5722     03FD  30FF               	movlw	255
  5723     03FE  0550               	andwf	___fldiv@grs+2,w
  5724     03FF  00C4               	movwf	??___fldiv+2
  5725     0400  307F               	movlw	127
  5726     0401  0551               	andwf	___fldiv@grs+3,w
  5727     0402  00C5               	movwf	??___fldiv+3
  5728     0403  0845               	movf	??___fldiv+3,w
  5729     0404  0444               	iorwf	??___fldiv+2,w
  5730     0405  0443               	iorwf	??___fldiv+1,w
  5731     0406  0442               	iorwf	??___fldiv,w
  5732     0407  1903               	skipnz
  5733     0408  2C0A               	goto	u2651
  5734     0409  2C0B               	goto	u2650
  5735     040A                     u2651:
  5736     040A  2C0E               	goto	l738
  5737     040B                     u2650:
  5738     040B                     l2323:
  5739     040B  01D3               	clrf	___fldiv@aexp
  5740     040C  0AD3               	incf	___fldiv@aexp,f
  5741     040D  2C13               	goto	l2327
  5742     040E                     l738:
  5743     040E  1C3E               	btfss	___fldiv@b,0
  5744     040F  2C11               	goto	u2661
  5745     0410  2C12               	goto	u2660
  5746     0411                     u2661:
  5747     0411  2C13               	goto	l2327
  5748     0412                     u2660:
  5749     0412  2C0B               	goto	l2323
  5750     0413                     l2327:
  5751     0413  0853               	movf	___fldiv@aexp,w
  5752     0414  1903               	btfsc	3,2
  5753     0415  2C17               	goto	u2671
  5754     0416  2C18               	goto	u2670
  5755     0417                     u2671:
  5756     0417  2C49               	goto	l2337
  5757     0418                     u2670:
  5758     0418                     l2329:
  5759     0418  3001               	movlw	1
  5760     0419  07BE               	addwf	___fldiv@b,f
  5761     041A  3000               	movlw	0
  5762     041B  1803               	skipnc
  5763     041C  3001               	movlw	1
  5764     041D  07BF               	addwf	___fldiv@b+1,f
  5765     041E  3000               	movlw	0
  5766     041F  1803               	skipnc
  5767     0420  3001               	movlw	1
  5768     0421  07C0               	addwf	___fldiv@b+2,f
  5769     0422  3000               	movlw	0
  5770     0423  1803               	skipnc
  5771     0424  3001               	movlw	1
  5772     0425  07C1               	addwf	___fldiv@b+3,f
  5773     0426                     l2331:
  5774     0426  1C41               	btfss	___fldiv@b+3,0
  5775     0427  2C29               	goto	u2681
  5776     0428  2C2A               	goto	u2680
  5777     0429                     u2681:
  5778     0429  2C49               	goto	l2337
  5779     042A                     u2680:
  5780     042A                     l2333:
  5781     042A  083E               	movf	___fldiv@b,w
  5782     042B  00C2               	movwf	??___fldiv
  5783     042C  083F               	movf	___fldiv@b+1,w
  5784     042D  00C3               	movwf	??___fldiv+1
  5785     042E  0840               	movf	___fldiv@b+2,w
  5786     042F  00C4               	movwf	??___fldiv+2
  5787     0430  0841               	movf	___fldiv@b+3,w
  5788     0431  00C5               	movwf	??___fldiv+3
  5789     0432  3001               	movlw	1
  5790     0433  00C6               	movwf	??___fldiv+4
  5791     0434                     u2695:
  5792     0434  0D45               	rlf	??___fldiv+3,w
  5793     0435  0CC5               	rrf	??___fldiv+3,f
  5794     0436  0CC4               	rrf	??___fldiv+2,f
  5795     0437  0CC3               	rrf	??___fldiv+1,f
  5796     0438  0CC2               	rrf	??___fldiv,f
  5797     0439                     u2690:
  5798     0439  0BC6               	decfsz	??___fldiv+4,f
  5799     043A  2C34               	goto	u2695
  5800     043B  0845               	movf	??___fldiv+3,w
  5801     043C  00C1               	movwf	___fldiv@b+3
  5802     043D  0844               	movf	??___fldiv+2,w
  5803     043E  00C0               	movwf	___fldiv@b+2
  5804     043F  0843               	movf	??___fldiv+1,w
  5805     0440  00BF               	movwf	___fldiv@b+1
  5806     0441  0842               	movf	??___fldiv,w
  5807     0442  00BE               	movwf	___fldiv@b
  5808     0443                     l2335:
  5809     0443  3001               	movlw	1
  5810     0444  07CC               	addwf	___fldiv@new_exp,f
  5811     0445  1803               	skipnc
  5812     0446  0ACD               	incf	___fldiv@new_exp+1,f
  5813     0447  3000               	movlw	0
  5814     0448  07CD               	addwf	___fldiv@new_exp+1,f
  5815     0449                     l2337:
  5816     0449  084D               	movf	___fldiv@new_exp+1,w
  5817     044A  3A80               	xorlw	128
  5818     044B  00FF               	movwf	btemp+1
  5819     044C  3080               	movlw	128
  5820     044D  027F               	subwf	btemp+1,w
  5821     044E  1D03               	skipz
  5822     044F  2C52               	goto	u2705
  5823     0450  30FF               	movlw	255
  5824     0451  024C               	subwf	___fldiv@new_exp,w
  5825     0452                     u2705:
  5826     0452  1C03               	skipc
  5827     0453  2C55               	goto	u2701
  5828     0454  2C56               	goto	u2700
  5829     0455                     u2701:
  5830     0455  2C64               	goto	l2341
  5831     0456                     u2700:
  5832     0456                     l2339:
  5833     0456  30FF               	movlw	255
  5834     0457  1283               	bcf	3,5	;RP0=0, select bank0
  5835     0458  1303               	bcf	3,6	;RP1=0, select bank0
  5836     0459  00CC               	movwf	___fldiv@new_exp
  5837     045A  3000               	movlw	0
  5838     045B  00CD               	movwf	___fldiv@new_exp+1
  5839     045C  3000               	movlw	0
  5840     045D  00C1               	movwf	___fldiv@b+3
  5841     045E  3000               	movlw	0
  5842     045F  00C0               	movwf	___fldiv@b+2
  5843     0460  3000               	movlw	0
  5844     0461  00BF               	movwf	___fldiv@b+1
  5845     0462  3000               	movlw	0
  5846     0463  00BE               	movwf	___fldiv@b
  5847     0464                     l2341:
  5848     0464  1283               	bcf	3,5	;RP0=0, select bank0
  5849     0465  1303               	bcf	3,6	;RP1=0, select bank0
  5850     0466  084D               	movf	___fldiv@new_exp+1,w
  5851     0467  3A80               	xorlw	128
  5852     0468  00FF               	movwf	btemp+1
  5853     0469  3080               	movlw	128
  5854     046A  027F               	subwf	btemp+1,w
  5855     046B  1D03               	skipz
  5856     046C  2C6F               	goto	u2715
  5857     046D  3001               	movlw	1
  5858     046E  024C               	subwf	___fldiv@new_exp,w
  5859     046F                     u2715:
  5860     046F  1803               	skipnc
  5861     0470  2C72               	goto	u2711
  5862     0471  2C73               	goto	u2710
  5863     0472                     u2711:
  5864     0472  2C80               	goto	l744
  5865     0473                     u2710:
  5866     0473                     l2343:
  5867     0473  1283               	bcf	3,5	;RP0=0, select bank0
  5868     0474  1303               	bcf	3,6	;RP1=0, select bank0
  5869     0475  01CC               	clrf	___fldiv@new_exp
  5870     0476  01CD               	clrf	___fldiv@new_exp+1
  5871     0477                     l2345:
  5872     0477  3000               	movlw	0
  5873     0478  00C1               	movwf	___fldiv@b+3
  5874     0479  3000               	movlw	0
  5875     047A  00C0               	movwf	___fldiv@b+2
  5876     047B  3000               	movlw	0
  5877     047C  00BF               	movwf	___fldiv@b+1
  5878     047D  3000               	movlw	0
  5879     047E  00BE               	movwf	___fldiv@b
  5880     047F                     l2347:
  5881     047F  01CB               	clrf	___fldiv@sign
  5882     0480                     l744:
  5883     0480  1283               	bcf	3,5	;RP0=0, select bank0
  5884     0481  1303               	bcf	3,6	;RP1=0, select bank0
  5885     0482  084C               	movf	___fldiv@new_exp,w
  5886     0483  00D2               	movwf	___fldiv@bexp
  5887     0484                     l2349:
  5888     0484  1C52               	btfss	___fldiv@bexp,0
  5889     0485  2C87               	goto	u2721
  5890     0486  2C88               	goto	u2720
  5891     0487                     u2721:
  5892     0487  2C8A               	goto	l2353
  5893     0488                     u2720:
  5894     0488                     l2351:
  5895     0488  17C0               	bsf	___fldiv@b+2,7
  5896     0489  2C8E               	goto	l746
  5897     048A                     l2353:
  5898     048A  307F               	movlw	127
  5899     048B  00C2               	movwf	??___fldiv
  5900     048C  0842               	movf	??___fldiv,w
  5901     048D  05C0               	andwf	___fldiv@b+2,f
  5902     048E                     l746:
  5903     048E  0852               	movf	___fldiv@bexp,w
  5904     048F  00C2               	movwf	??___fldiv
  5905     0490  1003               	clrc
  5906     0491  0C42               	rrf	??___fldiv,w
  5907     0492  00C1               	movwf	___fldiv@b+3
  5908     0493  084B               	movf	___fldiv@sign,w
  5909     0494  00C2               	movwf	??___fldiv
  5910     0495  0842               	movf	??___fldiv,w
  5911     0496  04C1               	iorwf	___fldiv@b+3,f
  5912     0497  2B34               	goto	l2261
  5913     0498                     l724:
  5914     0498  0008               	return
  5915     0499                     __end_of___fldiv:
  5916                           
  5917                           	psect	text26
  5918     0004                     __ptext26:	
  5919 ;; *************** function ___awdiv *****************
  5920 ;; Defined at:
  5921 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;  divisor         2    0[COMMON] int 
  5924 ;;  dividend        2    2[COMMON] int 
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;  quotient        2    7[COMMON] int 
  5927 ;;  sign            1    6[COMMON] unsigned char 
  5928 ;;  counter         1    5[COMMON] unsigned char 
  5929 ;; Return value:  Size  Location     Type
  5930 ;;                  2    0[COMMON] int 
  5931 ;; Registers used:
  5932 ;;		wreg, status,2, status,0
  5933 ;; Tracked objects:
  5934 ;;		On entry : 0/0
  5935 ;;		On exit  : 0/0
  5936 ;;		Unchanged: 0/0
  5937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5938 ;;      Params:         4       0       0       0       0
  5939 ;;      Locals:         4       0       0       0       0
  5940 ;;      Temps:          1       0       0       0       0
  5941 ;;      Totals:         9       0       0       0       0
  5942 ;;Total ram usage:        9 bytes
  5943 ;; Hardware stack levels used: 1
  5944 ;; This function calls:
  5945 ;;		Nothing
  5946 ;; This function is called by:
  5947 ;;		_main
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951     0004                     ___awdiv:	
  5952                           ;psect for function ___awdiv
  5953                           
  5954     0004                     l2137:	
  5955                           ;incstack = 0
  5956                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5957                           
  5958     0004  01F6               	clrf	___awdiv@sign
  5959     0005                     l2139:
  5960     0005  1FF1               	btfss	___awdiv@divisor+1,7
  5961     0006  2808               	goto	u2241
  5962     0007  2809               	goto	u2240
  5963     0008                     u2241:
  5964     0008  2810               	goto	l2145
  5965     0009                     u2240:
  5966     0009                     l2141:
  5967     0009  09F0               	comf	___awdiv@divisor,f
  5968     000A  09F1               	comf	___awdiv@divisor+1,f
  5969     000B  0AF0               	incf	___awdiv@divisor,f
  5970     000C  1903               	skipnz
  5971     000D  0AF1               	incf	___awdiv@divisor+1,f
  5972     000E                     l2143:
  5973     000E  01F6               	clrf	___awdiv@sign
  5974     000F  0AF6               	incf	___awdiv@sign,f
  5975     0010                     l2145:
  5976     0010  1FF3               	btfss	___awdiv@dividend+1,7
  5977     0011  2813               	goto	u2251
  5978     0012  2814               	goto	u2250
  5979     0013                     u2251:
  5980     0013  281D               	goto	l2151
  5981     0014                     u2250:
  5982     0014                     l2147:
  5983     0014  09F2               	comf	___awdiv@dividend,f
  5984     0015  09F3               	comf	___awdiv@dividend+1,f
  5985     0016  0AF2               	incf	___awdiv@dividend,f
  5986     0017  1903               	skipnz
  5987     0018  0AF3               	incf	___awdiv@dividend+1,f
  5988     0019                     l2149:
  5989     0019  3001               	movlw	1
  5990     001A  00F4               	movwf	??___awdiv
  5991     001B  0874               	movf	??___awdiv,w
  5992     001C  06F6               	xorwf	___awdiv@sign,f
  5993     001D                     l2151:
  5994     001D  01F7               	clrf	___awdiv@quotient
  5995     001E  01F8               	clrf	___awdiv@quotient+1
  5996     001F                     l2153:
  5997     001F  0870               	movf	___awdiv@divisor,w
  5998     0020  0471               	iorwf	___awdiv@divisor+1,w
  5999     0021  1903               	btfsc	3,2
  6000     0022  2824               	goto	u2261
  6001     0023  2825               	goto	u2260
  6002     0024                     u2261:
  6003     0024  285C               	goto	l2173
  6004     0025                     u2260:
  6005     0025                     l2155:
  6006     0025  01F5               	clrf	___awdiv@counter
  6007     0026  0AF5               	incf	___awdiv@counter,f
  6008     0027  2833               	goto	l2161
  6009     0028                     l2157:
  6010     0028  3001               	movlw	1
  6011     0029                     u2275:
  6012     0029  1003               	clrc
  6013     002A  0DF0               	rlf	___awdiv@divisor,f
  6014     002B  0DF1               	rlf	___awdiv@divisor+1,f
  6015     002C  3EFF               	addlw	-1
  6016     002D  1D03               	skipz
  6017     002E  2829               	goto	u2275
  6018     002F                     l2159:
  6019     002F  3001               	movlw	1
  6020     0030  00F4               	movwf	??___awdiv
  6021     0031  0874               	movf	??___awdiv,w
  6022     0032  07F5               	addwf	___awdiv@counter,f
  6023     0033                     l2161:
  6024     0033  1FF1               	btfss	___awdiv@divisor+1,7
  6025     0034  2836               	goto	u2281
  6026     0035  2837               	goto	u2280
  6027     0036                     u2281:
  6028     0036  2828               	goto	l2157
  6029     0037                     u2280:
  6030     0037                     l2163:
  6031     0037  3001               	movlw	1
  6032     0038                     u2295:
  6033     0038  1003               	clrc
  6034     0039  0DF7               	rlf	___awdiv@quotient,f
  6035     003A  0DF8               	rlf	___awdiv@quotient+1,f
  6036     003B  3EFF               	addlw	-1
  6037     003C  1D03               	skipz
  6038     003D  2838               	goto	u2295
  6039     003E  0871               	movf	___awdiv@divisor+1,w
  6040     003F  0273               	subwf	___awdiv@dividend+1,w
  6041     0040  1D03               	skipz
  6042     0041  2844               	goto	u2305
  6043     0042  0870               	movf	___awdiv@divisor,w
  6044     0043  0272               	subwf	___awdiv@dividend,w
  6045     0044                     u2305:
  6046     0044  1C03               	skipc
  6047     0045  2847               	goto	u2301
  6048     0046  2848               	goto	u2300
  6049     0047                     u2301:
  6050     0047  284F               	goto	l2169
  6051     0048                     u2300:
  6052     0048                     l2165:
  6053     0048  0870               	movf	___awdiv@divisor,w
  6054     0049  02F2               	subwf	___awdiv@dividend,f
  6055     004A  0871               	movf	___awdiv@divisor+1,w
  6056     004B  1C03               	skipc
  6057     004C  03F3               	decf	___awdiv@dividend+1,f
  6058     004D  02F3               	subwf	___awdiv@dividend+1,f
  6059     004E                     l2167:
  6060     004E  1477               	bsf	___awdiv@quotient,0
  6061     004F                     l2169:
  6062     004F  3001               	movlw	1
  6063     0050                     u2315:
  6064     0050  1003               	clrc
  6065     0051  0CF1               	rrf	___awdiv@divisor+1,f
  6066     0052  0CF0               	rrf	___awdiv@divisor,f
  6067     0053  3EFF               	addlw	-1
  6068     0054  1D03               	skipz
  6069     0055  2850               	goto	u2315
  6070     0056                     l2171:
  6071     0056  3001               	movlw	1
  6072     0057  02F5               	subwf	___awdiv@counter,f
  6073     0058  1D03               	btfss	3,2
  6074     0059  285B               	goto	u2321
  6075     005A  285C               	goto	u2320
  6076     005B                     u2321:
  6077     005B  2837               	goto	l2163
  6078     005C                     u2320:
  6079     005C                     l2173:
  6080     005C  0876               	movf	___awdiv@sign,w
  6081     005D  1903               	btfsc	3,2
  6082     005E  2860               	goto	u2331
  6083     005F  2861               	goto	u2330
  6084     0060                     u2331:
  6085     0060  2866               	goto	l2177
  6086     0061                     u2330:
  6087     0061                     l2175:
  6088     0061  09F7               	comf	___awdiv@quotient,f
  6089     0062  09F8               	comf	___awdiv@quotient+1,f
  6090     0063  0AF7               	incf	___awdiv@quotient,f
  6091     0064  1903               	skipnz
  6092     0065  0AF8               	incf	___awdiv@quotient+1,f
  6093     0066                     l2177:
  6094     0066  0878               	movf	___awdiv@quotient+1,w
  6095     0067  00F1               	movwf	?___awdiv+1
  6096     0068  0877               	movf	___awdiv@quotient,w
  6097     0069  00F0               	movwf	?___awdiv
  6098     006A                     l526:
  6099     006A  0008               	return
  6100     006B                     __end_of___awdiv:
  6101                           
  6102                           	psect	text27
  6103     0C58                     __ptext27:	
  6104 ;; *************** function _Lcd_Write_String *****************
  6105 ;; Defined at:
  6106 ;;		line 98 in file "LCD.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;  a               2    5[COMMON] PTR unsigned char 
  6109 ;;		 -> main@co_string(16), STR_1(4), 
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;  i               2   10[COMMON] int 
  6112 ;; Return value:  Size  Location     Type
  6113 ;;                  1    wreg      void 
  6114 ;; Registers used:
  6115 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6121 ;;      Params:         2       0       0       0       0
  6122 ;;      Locals:         2       0       0       0       0
  6123 ;;      Temps:          3       0       0       0       0
  6124 ;;      Totals:         7       0       0       0       0
  6125 ;;Total ram usage:        7 bytes
  6126 ;; Hardware stack levels used: 1
  6127 ;; Hardware stack levels required when called: 2
  6128 ;; This function calls:
  6129 ;;		_Lcd_Write_Char
  6130 ;; This function is called by:
  6131 ;;		_main
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135     0C58                     _Lcd_Write_String:	
  6136                           ;psect for function _Lcd_Write_String
  6137                           
  6138     0C58                     l2067:	
  6139                           ;incstack = 0
  6140                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6141                           
  6142                           
  6143                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  6144     0C58  01FA               	clrf	Lcd_Write_String@i
  6145     0C59  01FB               	clrf	Lcd_Write_String@i+1
  6146     0C5A  2C7D               	goto	l2073
  6147     0C5B                     l2069:
  6148                           
  6149                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  6150     0C5B  087A               	movf	Lcd_Write_String@i,w
  6151     0C5C  0775               	addwf	Lcd_Write_String@a,w
  6152     0C5D  00F8               	movwf	??_Lcd_Write_String+1
  6153     0C5E  0876               	movf	Lcd_Write_String@a+1,w
  6154     0C5F  00F7               	movwf	??_Lcd_Write_String
  6155     0C60  1803               	skipnc
  6156     0C61  0AF7               	incf	??_Lcd_Write_String,f
  6157     0C62  1FFA               	btfss	Lcd_Write_String@i,7
  6158     0C63  2C65               	goto	u2140
  6159     0C64  03F7               	decf	??_Lcd_Write_String,f
  6160     0C65                     u2140:
  6161     0C65  0877               	movf	??_Lcd_Write_String,w
  6162     0C66  00F9               	movwf	??_Lcd_Write_String+2
  6163     0C67  0879               	movf	??_Lcd_Write_String+2,w
  6164     0C68  1283               	bcf	3,5	;RP0=0, select bank0
  6165     0C69  1303               	bcf	3,6	;RP1=0, select bank0
  6166     0C6A  00FF               	movwf	btemp+1
  6167     0C6B  0878               	movf	??_Lcd_Write_String+1,w
  6168     0C6C  0084               	movwf	4
  6169     0C6D  120A  158A  2000  120A  158A  	fcall	stringtab
  6170     0C72  120A  158A  2367  120A  158A  	fcall	_Lcd_Write_Char
  6171     0C77                     l2071:
  6172     0C77  3001               	movlw	1
  6173     0C78  07FA               	addwf	Lcd_Write_String@i,f
  6174     0C79  1803               	skipnc
  6175     0C7A  0AFB               	incf	Lcd_Write_String@i+1,f
  6176     0C7B  3000               	movlw	0
  6177     0C7C  07FB               	addwf	Lcd_Write_String@i+1,f
  6178     0C7D                     l2073:
  6179     0C7D  087A               	movf	Lcd_Write_String@i,w
  6180     0C7E  0775               	addwf	Lcd_Write_String@a,w
  6181     0C7F  00F8               	movwf	??_Lcd_Write_String+1
  6182     0C80  0876               	movf	Lcd_Write_String@a+1,w
  6183     0C81  00F7               	movwf	??_Lcd_Write_String
  6184     0C82  1803               	skipnc
  6185     0C83  0AF7               	incf	??_Lcd_Write_String,f
  6186     0C84  1FFA               	btfss	Lcd_Write_String@i,7
  6187     0C85  2C87               	goto	u2150
  6188     0C86  03F7               	decf	??_Lcd_Write_String,f
  6189     0C87                     u2150:
  6190     0C87  0877               	movf	??_Lcd_Write_String,w
  6191     0C88  00F9               	movwf	??_Lcd_Write_String+2
  6192     0C89  0879               	movf	??_Lcd_Write_String+2,w
  6193     0C8A  1283               	bcf	3,5	;RP0=0, select bank0
  6194     0C8B  1303               	bcf	3,6	;RP1=0, select bank0
  6195     0C8C  00FF               	movwf	btemp+1
  6196     0C8D  0878               	movf	??_Lcd_Write_String+1,w
  6197     0C8E  0084               	movwf	4
  6198     0C8F  120A  158A  2000  120A  158A  	fcall	stringtab
  6199     0C94  3A00               	xorlw	0
  6200     0C95  1D03               	skipz
  6201     0C96  2C98               	goto	u2161
  6202     0C97  2C99               	goto	u2160
  6203     0C98                     u2161:
  6204     0C98  2C5B               	goto	l2069
  6205     0C99                     u2160:
  6206     0C99                     l234:
  6207     0C99  0008               	return
  6208     0C9A                     __end_of_Lcd_Write_String:
  6209                           
  6210                           	psect	text28
  6211     0B67                     __ptext28:	
  6212 ;; *************** function _Lcd_Write_Char *****************
  6213 ;; Defined at:
  6214 ;;		line 83 in file "LCD.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;  a               1    wreg     unsigned char 
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;  a               1    4[COMMON] unsigned char 
  6219 ;;  y               1    3[COMMON] unsigned char 
  6220 ;;  temp            1    2[COMMON] unsigned char 
  6221 ;; Return value:  Size  Location     Type
  6222 ;;                  1    wreg      void 
  6223 ;; Registers used:
  6224 ;;		wreg, status,2, status,0, pclath, cstack
  6225 ;; Tracked objects:
  6226 ;;		On entry : 0/0
  6227 ;;		On exit  : 0/0
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6230 ;;      Params:         0       0       0       0       0
  6231 ;;      Locals:         3       0       0       0       0
  6232 ;;      Temps:          1       0       0       0       0
  6233 ;;      Totals:         4       0       0       0       0
  6234 ;;Total ram usage:        4 bytes
  6235 ;; Hardware stack levels used: 1
  6236 ;; Hardware stack levels required when called: 1
  6237 ;; This function calls:
  6238 ;;		_Lcd_Port
  6239 ;; This function is called by:
  6240 ;;		_mostrar_hora
  6241 ;;		_mostrar_fecha
  6242 ;;		_Lcd_Write_String
  6243 ;; This function uses a non-reentrant model
  6244 ;;
  6245                           
  6246     0B67                     _Lcd_Write_Char:	
  6247                           ;psect for function _Lcd_Write_Char
  6248                           
  6249                           
  6250                           ;incstack = 0
  6251                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  6252                           ;Lcd_Write_Char@a stored from wreg
  6253     0B67  00F4               	movwf	Lcd_Write_Char@a
  6254     0B68                     l1795:
  6255                           
  6256                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  6257     0B68  0874               	movf	Lcd_Write_Char@a,w
  6258     0B69  390F               	andlw	15
  6259     0B6A  00F2               	movwf	Lcd_Write_Char@temp
  6260                           
  6261                           ;LCD.c: 86:     y = a & 0xF0;
  6262     0B6B  0874               	movf	Lcd_Write_Char@a,w
  6263     0B6C  39F0               	andlw	240
  6264     0B6D  00F3               	movwf	Lcd_Write_Char@y
  6265     0B6E                     l1797:
  6266                           
  6267                           ;LCD.c: 87:     PORTAbits.RA0 = 1;
  6268     0B6E  1283               	bcf	3,5	;RP0=0, select bank0
  6269     0B6F  1303               	bcf	3,6	;RP1=0, select bank0
  6270     0B70  1405               	bsf	5,0	;volatile
  6271     0B71                     l1799:
  6272                           
  6273                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  6274     0B71  0873               	movf	Lcd_Write_Char@y,w
  6275     0B72  00F1               	movwf	??_Lcd_Write_Char
  6276     0B73  3004               	movlw	4
  6277     0B74                     u1765:
  6278     0B74  1003               	clrc
  6279     0B75  0CF1               	rrf	??_Lcd_Write_Char,f
  6280     0B76  3EFF               	addlw	-1
  6281     0B77  1D03               	skipz
  6282     0B78  2B74               	goto	u1765
  6283     0B79  0871               	movf	??_Lcd_Write_Char,w
  6284     0B7A  120A  158A  2299  120A  158A  	fcall	_Lcd_Port
  6285     0B7F                     l1801:
  6286                           
  6287                           ;LCD.c: 89:     PORTAbits.RA1 = 1;
  6288     0B7F  1283               	bcf	3,5	;RP0=0, select bank0
  6289     0B80  1303               	bcf	3,6	;RP1=0, select bank0
  6290     0B81  1485               	bsf	5,1	;volatile
  6291     0B82                     l1803:
  6292                           
  6293                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  6294     0B82  301A               	movlw	26
  6295     0B83  00F1               	movwf	??_Lcd_Write_Char
  6296     0B84                     u3267:
  6297     0B84  0BF1               	decfsz	??_Lcd_Write_Char,f
  6298     0B85  2B84               	goto	u3267
  6299     0B86  0000               	nop
  6300     0B87                     l1805:
  6301                           
  6302                           ;LCD.c: 91:     PORTAbits.RA1 = 0;
  6303     0B87  1283               	bcf	3,5	;RP0=0, select bank0
  6304     0B88  1303               	bcf	3,6	;RP1=0, select bank0
  6305     0B89  1085               	bcf	5,1	;volatile
  6306     0B8A                     l1807:
  6307                           
  6308                           ;LCD.c: 92:     Lcd_Port(temp);
  6309     0B8A  0872               	movf	Lcd_Write_Char@temp,w
  6310     0B8B  120A  158A  2299  120A  158A  	fcall	_Lcd_Port
  6311     0B90                     l1809:
  6312                           
  6313                           ;LCD.c: 93:     PORTAbits.RA1 = 1;
  6314     0B90  1283               	bcf	3,5	;RP0=0, select bank0
  6315     0B91  1303               	bcf	3,6	;RP1=0, select bank0
  6316     0B92  1485               	bsf	5,1	;volatile
  6317     0B93                     l1811:
  6318                           
  6319                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  6320     0B93  301A               	movlw	26
  6321     0B94  00F1               	movwf	??_Lcd_Write_Char
  6322     0B95                     u3277:
  6323     0B95  0BF1               	decfsz	??_Lcd_Write_Char,f
  6324     0B96  2B95               	goto	u3277
  6325     0B97  0000               	nop
  6326     0B98                     l1813:
  6327                           
  6328                           ;LCD.c: 95:     PORTAbits.RA1 = 0;
  6329     0B98  1283               	bcf	3,5	;RP0=0, select bank0
  6330     0B99  1303               	bcf	3,6	;RP1=0, select bank0
  6331     0B9A  1085               	bcf	5,1	;volatile
  6332     0B9B                     l228:
  6333     0B9B  0008               	return
  6334     0B9C                     __end_of_Lcd_Write_Char:
  6335                           
  6336                           	psect	text29
  6337     0CDE                     __ptext29:	
  6338 ;; *************** function _Lcd_Set_Cursor *****************
  6339 ;; Defined at:
  6340 ;;		line 48 in file "LCD.c"
  6341 ;; Parameters:    Size  Location     Type
  6342 ;;  a               1    wreg     unsigned char 
  6343 ;;  b               1    4[COMMON] unsigned char 
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;  a               1    6[COMMON] unsigned char 
  6346 ;;  temp            1    9[COMMON] unsigned char 
  6347 ;;  y               1    8[COMMON] unsigned char 
  6348 ;;  z               1    7[COMMON] unsigned char 
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  1    wreg      void 
  6351 ;; Registers used:
  6352 ;;		wreg, status,2, status,0, pclath, cstack
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6358 ;;      Params:         1       0       0       0       0
  6359 ;;      Locals:         4       0       0       0       0
  6360 ;;      Temps:          1       0       0       0       0
  6361 ;;      Totals:         6       0       0       0       0
  6362 ;;Total ram usage:        6 bytes
  6363 ;; Hardware stack levels used: 1
  6364 ;; Hardware stack levels required when called: 2
  6365 ;; This function calls:
  6366 ;;		_Lcd_Cmd
  6367 ;; This function is called by:
  6368 ;;		_main
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372     0CDE                     _Lcd_Set_Cursor:	
  6373                           ;psect for function _Lcd_Set_Cursor
  6374                           
  6375                           
  6376                           ;incstack = 0
  6377                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  6378                           ;Lcd_Set_Cursor@a stored from wreg
  6379     0CDE  00F6               	movwf	Lcd_Set_Cursor@a
  6380     0CDF                     l1975:
  6381                           
  6382                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  6383     0CDF  0376               	decf	Lcd_Set_Cursor@a,w
  6384     0CE0  1D03               	btfss	3,2
  6385     0CE1  2CE3               	goto	u2011
  6386     0CE2  2CE4               	goto	u2010
  6387     0CE3                     u2011:
  6388     0CE3  2D01               	goto	l1985
  6389     0CE4                     u2010:
  6390     0CE4                     l1977:
  6391                           
  6392                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  6393     0CE4  0874               	movf	Lcd_Set_Cursor@b,w
  6394     0CE5  3E7F               	addlw	127
  6395     0CE6  00F9               	movwf	Lcd_Set_Cursor@temp
  6396                           
  6397                           ;LCD.c: 52:         z = temp >> 4;
  6398     0CE7  0879               	movf	Lcd_Set_Cursor@temp,w
  6399     0CE8  00F5               	movwf	??_Lcd_Set_Cursor
  6400     0CE9  3004               	movlw	4
  6401     0CEA                     u2025:
  6402     0CEA  1003               	clrc
  6403     0CEB  0CF5               	rrf	??_Lcd_Set_Cursor,f
  6404     0CEC  3EFF               	addlw	-1
  6405     0CED  1D03               	skipz
  6406     0CEE  2CEA               	goto	u2025
  6407     0CEF  0875               	movf	??_Lcd_Set_Cursor,w
  6408     0CF0  00F7               	movwf	Lcd_Set_Cursor@z
  6409     0CF1                     l1979:
  6410                           
  6411                           ;LCD.c: 53:         y = temp & 0x0F;
  6412     0CF1  0879               	movf	Lcd_Set_Cursor@temp,w
  6413     0CF2  390F               	andlw	15
  6414     0CF3  00F8               	movwf	Lcd_Set_Cursor@y
  6415     0CF4                     l1981:
  6416                           
  6417                           ;LCD.c: 54:         Lcd_Cmd(z);
  6418     0CF4  0877               	movf	Lcd_Set_Cursor@z,w
  6419     0CF5  120A  158A  2260  120A  158A  	fcall	_Lcd_Cmd
  6420     0CFA                     l1983:
  6421                           
  6422                           ;LCD.c: 55:         Lcd_Cmd(y);
  6423     0CFA  0878               	movf	Lcd_Set_Cursor@y,w
  6424     0CFB  120A  158A  2260  120A  158A  	fcall	_Lcd_Cmd
  6425                           
  6426                           ;LCD.c: 56:     } else if (a == 2) {
  6427     0D00  2D23               	goto	l222
  6428     0D01                     l1985:
  6429     0D01  3002               	movlw	2
  6430     0D02  0676               	xorwf	Lcd_Set_Cursor@a,w
  6431     0D03  1D03               	btfss	3,2
  6432     0D04  2D06               	goto	u2031
  6433     0D05  2D07               	goto	u2030
  6434     0D06                     u2031:
  6435     0D06  2D23               	goto	l222
  6436     0D07                     u2030:
  6437     0D07                     l1987:
  6438                           
  6439                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  6440     0D07  0874               	movf	Lcd_Set_Cursor@b,w
  6441     0D08  3EBF               	addlw	191
  6442     0D09  00F9               	movwf	Lcd_Set_Cursor@temp
  6443                           
  6444                           ;LCD.c: 58:         z = temp >> 4;
  6445     0D0A  0879               	movf	Lcd_Set_Cursor@temp,w
  6446     0D0B  00F5               	movwf	??_Lcd_Set_Cursor
  6447     0D0C  3004               	movlw	4
  6448     0D0D                     u2045:
  6449     0D0D  1003               	clrc
  6450     0D0E  0CF5               	rrf	??_Lcd_Set_Cursor,f
  6451     0D0F  3EFF               	addlw	-1
  6452     0D10  1D03               	skipz
  6453     0D11  2D0D               	goto	u2045
  6454     0D12  0875               	movf	??_Lcd_Set_Cursor,w
  6455     0D13  00F7               	movwf	Lcd_Set_Cursor@z
  6456     0D14                     l1989:
  6457                           
  6458                           ;LCD.c: 59:         y = temp & 0x0F;
  6459     0D14  0879               	movf	Lcd_Set_Cursor@temp,w
  6460     0D15  390F               	andlw	15
  6461     0D16  00F8               	movwf	Lcd_Set_Cursor@y
  6462     0D17                     l1991:
  6463                           
  6464                           ;LCD.c: 60:         Lcd_Cmd(z);
  6465     0D17  0877               	movf	Lcd_Set_Cursor@z,w
  6466     0D18  120A  158A  2260  120A  158A  	fcall	_Lcd_Cmd
  6467     0D1D                     l1993:
  6468                           
  6469                           ;LCD.c: 61:         Lcd_Cmd(y);
  6470     0D1D  0878               	movf	Lcd_Set_Cursor@y,w
  6471     0D1E  120A  158A  2260  120A  158A  	fcall	_Lcd_Cmd
  6472     0D23                     l222:
  6473     0D23  0008               	return
  6474     0D24                     __end_of_Lcd_Set_Cursor:
  6475                           
  6476                           	psect	text30
  6477     0DB6                     __ptext30:	
  6478 ;; *************** function _Lcd_Init *****************
  6479 ;; Defined at:
  6480 ;;		line 65 in file "LCD.c"
  6481 ;; Parameters:    Size  Location     Type
  6482 ;;		None
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;		None
  6485 ;; Return value:  Size  Location     Type
  6486 ;;                  1    wreg      void 
  6487 ;; Registers used:
  6488 ;;		wreg, status,2, status,0, pclath, cstack
  6489 ;; Tracked objects:
  6490 ;;		On entry : 0/0
  6491 ;;		On exit  : 0/0
  6492 ;;		Unchanged: 0/0
  6493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6494 ;;      Params:         0       0       0       0       0
  6495 ;;      Locals:         0       0       0       0       0
  6496 ;;      Temps:          2       0       0       0       0
  6497 ;;      Totals:         2       0       0       0       0
  6498 ;;Total ram usage:        2 bytes
  6499 ;; Hardware stack levels used: 1
  6500 ;; Hardware stack levels required when called: 2
  6501 ;; This function calls:
  6502 ;;		_Lcd_Cmd
  6503 ;;		_Lcd_Port
  6504 ;; This function is called by:
  6505 ;;		_main
  6506 ;; This function uses a non-reentrant model
  6507 ;;
  6508                           
  6509     0DB6                     _Lcd_Init:	
  6510                           ;psect for function _Lcd_Init
  6511                           
  6512     0DB6                     l1905:	
  6513                           ;incstack = 0
  6514                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  6515                           
  6516                           
  6517                           ;LCD.c: 66:     Lcd_Port(0x00);
  6518     0DB6  3000               	movlw	0
  6519     0DB7  120A  158A  2299  120A  158A  	fcall	_Lcd_Port
  6520     0DBC                     l1907:
  6521                           
  6522                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  6523     0DBC  3034               	movlw	52
  6524     0DBD  00F5               	movwf	??_Lcd_Init+1
  6525     0DBE  30F1               	movlw	241
  6526     0DBF  00F4               	movwf	??_Lcd_Init
  6527     0DC0                     u3287:
  6528     0DC0  0BF4               	decfsz	??_Lcd_Init,f
  6529     0DC1  2DC0               	goto	u3287
  6530     0DC2  0BF5               	decfsz	??_Lcd_Init+1,f
  6531     0DC3  2DC0               	goto	u3287
  6532     0DC4  2DC5               	nop2
  6533     0DC5                     l1909:
  6534                           
  6535                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  6536     0DC5  3003               	movlw	3
  6537     0DC6  120A  158A  2260  120A  158A  	fcall	_Lcd_Cmd
  6538                           
  6539                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  6540     0DCB  300D               	movlw	13
  6541     0DCC  00F5               	movwf	??_Lcd_Init+1
  6542     0DCD  30FB               	movlw	251
  6543     0DCE  00F4               	movwf	??_Lcd_Init
  6544     0DCF                     u3297:
  6545     0DCF  0BF4               	decfsz	??_Lcd_Init,f
  6546     0DD0  2DCF               	goto	u3297
  6547     0DD1  0BF5               	decfsz	??_Lcd_Init+1,f
  6548     0DD2  2DCF               	goto	u3297
  6549     0DD3  2DD4               	nop2
  6550     0DD4                     l1911:
  6551                           
  6552                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  6553     0DD4  3003               	movlw	3
  6554     0DD5  120A  158A  2260  120A  158A  	fcall	_Lcd_Cmd
  6555     0DDA                     l1913:
  6556                           
  6557                           ;LCD.c: 71:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  6558     0DDA  3085               	movlw	133
  6559     0DDB  00F4               	movwf	??_Lcd_Init
  6560     0DDC                     u3307:
  6561     0DDC  0BF4               	decfsz	??_Lcd_Init,f
  6562     0DDD  2DDC               	goto	u3307
  6563                           
  6564                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  6565     0DDE  3003               	movlw	3
  6566     0DDF  120A  158A  2260  120A  158A  	fcall	_Lcd_Cmd
  6567                           
  6568                           ;LCD.c: 73:     Lcd_Cmd(0x02);
  6569     0DE4  3002               	movlw	2
  6570     0DE5  120A  158A  2260  120A  158A  	fcall	_Lcd_Cmd
  6571                           
  6572                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  6573     0DEA  3002               	movlw	2
  6574     0DEB  120A  158A  2260  120A  158A  	fcall	_Lcd_Cmd
  6575                           
  6576                           ;LCD.c: 75:     Lcd_Cmd(0x08);
  6577     0DF0  3008               	movlw	8
  6578     0DF1  120A  158A  2260  120A  158A  	fcall	_Lcd_Cmd
  6579                           
  6580                           ;LCD.c: 76:     Lcd_Cmd(0x00);
  6581     0DF6  3000               	movlw	0
  6582     0DF7  120A  158A  2260  120A  158A  	fcall	_Lcd_Cmd
  6583                           
  6584                           ;LCD.c: 77:     Lcd_Cmd(0x0C);
  6585     0DFC  300C               	movlw	12
  6586     0DFD  120A  158A  2260  120A  158A  	fcall	_Lcd_Cmd
  6587                           
  6588                           ;LCD.c: 78:     Lcd_Cmd(0x00);
  6589     0E02  3000               	movlw	0
  6590     0E03  120A  158A  2260  120A  158A  	fcall	_Lcd_Cmd
  6591                           
  6592                           ;LCD.c: 79:     Lcd_Cmd(0x06);
  6593     0E08  3006               	movlw	6
  6594     0E09  120A  158A  2260  120A  158A  	fcall	_Lcd_Cmd
  6595     0E0E                     l1915:
  6596                           
  6597                           ;LCD.c: 80:  _delay((unsigned long)((100)*(8000000/4000000.0)));
  6598     0E0E  3042               	movlw	66
  6599     0E0F  00F4               	movwf	??_Lcd_Init
  6600     0E10                     u3317:
  6601     0E10  0BF4               	decfsz	??_Lcd_Init,f
  6602     0E11  2E10               	goto	u3317
  6603     0E12  0000               	nop
  6604     0E13                     l225:
  6605     0E13  0008               	return
  6606     0E14                     __end_of_Lcd_Init:
  6607                           
  6608                           	psect	text31
  6609     0A0C                     __ptext31:	
  6610 ;; *************** function _Lcd_Clear *****************
  6611 ;; Defined at:
  6612 ;;		line 43 in file "LCD.c"
  6613 ;; Parameters:    Size  Location     Type
  6614 ;;		None
  6615 ;; Auto vars:     Size  Location     Type
  6616 ;;		None
  6617 ;; Return value:  Size  Location     Type
  6618 ;;                  1    wreg      void 
  6619 ;; Registers used:
  6620 ;;		wreg, status,2, status,0, pclath, cstack
  6621 ;; Tracked objects:
  6622 ;;		On entry : 0/0
  6623 ;;		On exit  : 0/0
  6624 ;;		Unchanged: 0/0
  6625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6626 ;;      Params:         0       0       0       0       0
  6627 ;;      Locals:         0       0       0       0       0
  6628 ;;      Temps:          0       0       0       0       0
  6629 ;;      Totals:         0       0       0       0       0
  6630 ;;Total ram usage:        0 bytes
  6631 ;; Hardware stack levels used: 1
  6632 ;; Hardware stack levels required when called: 2
  6633 ;; This function calls:
  6634 ;;		_Lcd_Cmd
  6635 ;; This function is called by:
  6636 ;;		_main
  6637 ;; This function uses a non-reentrant model
  6638 ;;
  6639                           
  6640     0A0C                     _Lcd_Clear:	
  6641                           ;psect for function _Lcd_Clear
  6642                           
  6643     0A0C                     l1917:	
  6644                           ;incstack = 0
  6645                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  6646                           
  6647                           
  6648                           ;LCD.c: 44:     Lcd_Cmd(0);
  6649     0A0C  3000               	movlw	0
  6650     0A0D  120A  158A  2260  120A  158A  	fcall	_Lcd_Cmd
  6651                           
  6652                           ;LCD.c: 45:     Lcd_Cmd(1);
  6653     0A12  3001               	movlw	1
  6654     0A13  120A  158A  2260  120A  158A  	fcall	_Lcd_Cmd
  6655     0A18                     l216:
  6656     0A18  0008               	return
  6657     0A19                     __end_of_Lcd_Clear:
  6658                           
  6659                           	psect	text32
  6660     0A60                     __ptext32:	
  6661 ;; *************** function _Lcd_Cmd *****************
  6662 ;; Defined at:
  6663 ;;		line 35 in file "LCD.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;  a               1    wreg     unsigned char 
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;  a               1    3[COMMON] unsigned char 
  6668 ;; Return value:  Size  Location     Type
  6669 ;;                  1    wreg      void 
  6670 ;; Registers used:
  6671 ;;		wreg, status,2, status,0, pclath, cstack
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6677 ;;      Params:         0       0       0       0       0
  6678 ;;      Locals:         1       0       0       0       0
  6679 ;;      Temps:          2       0       0       0       0
  6680 ;;      Totals:         3       0       0       0       0
  6681 ;;Total ram usage:        3 bytes
  6682 ;; Hardware stack levels used: 1
  6683 ;; Hardware stack levels required when called: 1
  6684 ;; This function calls:
  6685 ;;		_Lcd_Port
  6686 ;; This function is called by:
  6687 ;;		_Lcd_Clear
  6688 ;;		_Lcd_Set_Cursor
  6689 ;;		_Lcd_Init
  6690 ;;		_Lcd_Shift_Right
  6691 ;;		_Lcd_Shift_Left
  6692 ;; This function uses a non-reentrant model
  6693 ;;
  6694                           
  6695     0A60                     _Lcd_Cmd:	
  6696                           ;psect for function _Lcd_Cmd
  6697                           
  6698                           
  6699                           ;incstack = 0
  6700                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  6701                           ;Lcd_Cmd@a stored from wreg
  6702     0A60  00F3               	movwf	Lcd_Cmd@a
  6703     0A61                     l1815:
  6704                           
  6705                           ;LCD.c: 36:     PORTAbits.RA0 = 0;
  6706     0A61  1283               	bcf	3,5	;RP0=0, select bank0
  6707     0A62  1303               	bcf	3,6	;RP1=0, select bank0
  6708     0A63  1005               	bcf	5,0	;volatile
  6709     0A64                     l1817:
  6710                           
  6711                           ;LCD.c: 37:     Lcd_Port(a);
  6712     0A64  0873               	movf	Lcd_Cmd@a,w
  6713     0A65  120A  158A  2299  120A  158A  	fcall	_Lcd_Port
  6714     0A6A                     l1819:
  6715                           
  6716                           ;LCD.c: 38:     PORTAbits.RA1 = 1;
  6717     0A6A  1283               	bcf	3,5	;RP0=0, select bank0
  6718     0A6B  1303               	bcf	3,6	;RP1=0, select bank0
  6719     0A6C  1485               	bsf	5,1	;volatile
  6720     0A6D                     l1821:
  6721                           
  6722                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  6723     0A6D  300B               	movlw	11
  6724     0A6E  00F2               	movwf	??_Lcd_Cmd+1
  6725     0A6F  3062               	movlw	98
  6726     0A70  00F1               	movwf	??_Lcd_Cmd
  6727     0A71                     u3327:
  6728     0A71  0BF1               	decfsz	??_Lcd_Cmd,f
  6729     0A72  2A71               	goto	u3327
  6730     0A73  0BF2               	decfsz	??_Lcd_Cmd+1,f
  6731     0A74  2A71               	goto	u3327
  6732     0A75  0000               	nop
  6733     0A76                     l1823:
  6734                           
  6735                           ;LCD.c: 40:     PORTAbits.RA1 = 0;
  6736     0A76  1283               	bcf	3,5	;RP0=0, select bank0
  6737     0A77  1303               	bcf	3,6	;RP1=0, select bank0
  6738     0A78  1085               	bcf	5,1	;volatile
  6739     0A79                     l213:
  6740     0A79  0008               	return
  6741     0A7A                     __end_of_Lcd_Cmd:
  6742                           
  6743                           	psect	text33
  6744     0A99                     __ptext33:	
  6745 ;; *************** function _Lcd_Port *****************
  6746 ;; Defined at:
  6747 ;;		line 13 in file "LCD.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;  a               1    wreg     unsigned char 
  6750 ;; Auto vars:     Size  Location     Type
  6751 ;;  a               1    0[COMMON] unsigned char 
  6752 ;; Return value:  Size  Location     Type
  6753 ;;                  1    wreg      void 
  6754 ;; Registers used:
  6755 ;;		wreg
  6756 ;; Tracked objects:
  6757 ;;		On entry : 0/0
  6758 ;;		On exit  : 0/0
  6759 ;;		Unchanged: 0/0
  6760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6761 ;;      Params:         0       0       0       0       0
  6762 ;;      Locals:         1       0       0       0       0
  6763 ;;      Temps:          0       0       0       0       0
  6764 ;;      Totals:         1       0       0       0       0
  6765 ;;Total ram usage:        1 bytes
  6766 ;; Hardware stack levels used: 1
  6767 ;; This function calls:
  6768 ;;		Nothing
  6769 ;; This function is called by:
  6770 ;;		_Lcd_Cmd
  6771 ;;		_Lcd_Init
  6772 ;;		_Lcd_Write_Char
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776     0A99                     _Lcd_Port:	
  6777                           ;psect for function _Lcd_Port
  6778                           
  6779                           
  6780                           ;incstack = 0
  6781                           ; Regs used in _Lcd_Port: [wreg]
  6782                           ;Lcd_Port@a stored from wreg
  6783     0A99  00F0               	movwf	Lcd_Port@a
  6784     0A9A                     l1749:
  6785                           
  6786                           ;LCD.c: 14:     if (a & 1)
  6787     0A9A  1C70               	btfss	Lcd_Port@a,0
  6788     0A9B  2A9D               	goto	u1631
  6789     0A9C  2A9E               	goto	u1630
  6790     0A9D                     u1631:
  6791     0A9D  2AA2               	goto	l202
  6792     0A9E                     u1630:
  6793     0A9E                     l1751:
  6794                           
  6795                           ;LCD.c: 15:         PORTAbits.RA2 = 1;
  6796     0A9E  1283               	bcf	3,5	;RP0=0, select bank0
  6797     0A9F  1303               	bcf	3,6	;RP1=0, select bank0
  6798     0AA0  1505               	bsf	5,2	;volatile
  6799     0AA1  2AA5               	goto	l203
  6800     0AA2                     l202:	
  6801                           ;LCD.c: 16:     else
  6802                           
  6803                           
  6804                           ;LCD.c: 17:         PORTAbits.RA2 = 0;
  6805     0AA2  1283               	bcf	3,5	;RP0=0, select bank0
  6806     0AA3  1303               	bcf	3,6	;RP1=0, select bank0
  6807     0AA4  1105               	bcf	5,2	;volatile
  6808     0AA5                     l203:
  6809                           
  6810                           ;LCD.c: 19:     if (a & 2)
  6811     0AA5  1CF0               	btfss	Lcd_Port@a,1
  6812     0AA6  2AA8               	goto	u1641
  6813     0AA7  2AA9               	goto	u1640
  6814     0AA8                     u1641:
  6815     0AA8  2AAB               	goto	l204
  6816     0AA9                     u1640:
  6817     0AA9                     l1753:
  6818                           
  6819                           ;LCD.c: 20:         PORTAbits.RA3 = 1;
  6820     0AA9  1585               	bsf	5,3	;volatile
  6821     0AAA  2AAC               	goto	l205
  6822     0AAB                     l204:	
  6823                           ;LCD.c: 21:     else
  6824                           
  6825                           
  6826                           ;LCD.c: 22:         PORTAbits.RA3 = 0;
  6827     0AAB  1185               	bcf	5,3	;volatile
  6828     0AAC                     l205:
  6829                           
  6830                           ;LCD.c: 24:     if (a & 4)
  6831     0AAC  1D70               	btfss	Lcd_Port@a,2
  6832     0AAD  2AAF               	goto	u1651
  6833     0AAE  2AB0               	goto	u1650
  6834     0AAF                     u1651:
  6835     0AAF  2AB2               	goto	l206
  6836     0AB0                     u1650:
  6837     0AB0                     l1755:
  6838                           
  6839                           ;LCD.c: 25:         PORTAbits.RA4 = 1;
  6840     0AB0  1605               	bsf	5,4	;volatile
  6841     0AB1  2AB3               	goto	l207
  6842     0AB2                     l206:	
  6843                           ;LCD.c: 26:     else
  6844                           
  6845                           
  6846                           ;LCD.c: 27:         PORTAbits.RA4 = 0;
  6847     0AB2  1205               	bcf	5,4	;volatile
  6848     0AB3                     l207:
  6849                           
  6850                           ;LCD.c: 29:     if (a & 8)
  6851     0AB3  1DF0               	btfss	Lcd_Port@a,3
  6852     0AB4  2AB6               	goto	u1661
  6853     0AB5  2AB7               	goto	u1660
  6854     0AB6                     u1661:
  6855     0AB6  2AB9               	goto	l208
  6856     0AB7                     u1660:
  6857     0AB7                     l1757:
  6858                           
  6859                           ;LCD.c: 30:         PORTAbits.RA5 = 1;
  6860     0AB7  1685               	bsf	5,5	;volatile
  6861     0AB8  2ABA               	goto	l210
  6862     0AB9                     l208:	
  6863                           ;LCD.c: 31:     else
  6864                           
  6865                           
  6866                           ;LCD.c: 32:         PORTAbits.RA5 = 0;
  6867     0AB9  1285               	bcf	5,5	;volatile
  6868     0ABA                     l210:
  6869     0ABA  0008               	return
  6870     0ABB                     __end_of_Lcd_Port:
  6871                           
  6872                           	psect	text34
  6873     0ABB                     __ptext34:	
  6874 ;; *************** function _ADC_Read *****************
  6875 ;; Defined at:
  6876 ;;		line 9 in file "ADC.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;  ch              1    wreg     unsigned char 
  6879 ;; Auto vars:     Size  Location     Type
  6880 ;;  ch              1    4[COMMON] unsigned char 
  6881 ;; Return value:  Size  Location     Type
  6882 ;;                  2    0[COMMON] unsigned int 
  6883 ;; Registers used:
  6884 ;;		wreg, status,2, status,0
  6885 ;; Tracked objects:
  6886 ;;		On entry : 0/0
  6887 ;;		On exit  : 0/0
  6888 ;;		Unchanged: 0/0
  6889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6890 ;;      Params:         2       0       0       0       0
  6891 ;;      Locals:         1       0       0       0       0
  6892 ;;      Temps:          2       0       0       0       0
  6893 ;;      Totals:         5       0       0       0       0
  6894 ;;Total ram usage:        5 bytes
  6895 ;; Hardware stack levels used: 1
  6896 ;; This function calls:
  6897 ;;		Nothing
  6898 ;; This function is called by:
  6899 ;;		_main
  6900 ;; This function uses a non-reentrant model
  6901 ;;
  6902                           
  6903     0ABB                     _ADC_Read:	
  6904                           ;psect for function _ADC_Read
  6905                           
  6906                           
  6907                           ;incstack = 0
  6908                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  6909                           ;ADC_Read@ch stored from wreg
  6910     0ABB  00F4               	movwf	ADC_Read@ch
  6911     0ABC                     l2047:
  6912                           
  6913                           ;ADC.c: 9: unsigned int ADC_Read(unsigned char ch);ADC.c: 10: {;ADC.c: 11:     if(ch > 1
      +                          3){
  6914     0ABC  300E               	movlw	14
  6915     0ABD  0274               	subwf	ADC_Read@ch,w
  6916     0ABE  1C03               	skipc
  6917     0ABF  2AC1               	goto	u2111
  6918     0AC0  2AC2               	goto	u2110
  6919     0AC1                     u2111:
  6920     0AC1  2AC5               	goto	l2055
  6921     0AC2                     u2110:
  6922     0AC2                     l2049:
  6923                           
  6924                           ;ADC.c: 12:         return 0;
  6925     0AC2  01F0               	clrf	?_ADC_Read
  6926     0AC3  01F1               	clrf	?_ADC_Read+1
  6927     0AC4  2AE1               	goto	l255
  6928     0AC5                     l2055:
  6929                           
  6930                           ;ADC.c: 14:         ADCON0 = 0b01000000;
  6931     0AC5  3040               	movlw	64
  6932     0AC6  1283               	bcf	3,5	;RP0=0, select bank0
  6933     0AC7  1303               	bcf	3,6	;RP1=0, select bank0
  6934     0AC8  009F               	movwf	31	;volatile
  6935     0AC9                     l2057:
  6936                           
  6937                           ;ADC.c: 15:         ADCON0 = (ch << 2);
  6938     0AC9  0874               	movf	ADC_Read@ch,w
  6939     0ACA  00F2               	movwf	??_ADC_Read
  6940     0ACB  3001               	movlw	1
  6941     0ACC                     u2125:
  6942     0ACC  1003               	clrc
  6943     0ACD  0DF2               	rlf	??_ADC_Read,f
  6944     0ACE  3EFF               	addlw	-1
  6945     0ACF  1D03               	skipz
  6946     0AD0  2ACC               	goto	u2125
  6947     0AD1  1003               	clrc
  6948     0AD2  0D72               	rlf	??_ADC_Read,w
  6949     0AD3  009F               	movwf	31	;volatile
  6950     0AD4                     l2059:
  6951                           
  6952                           ;ADC.c: 16:         ADCON0bits.ADON = 1;
  6953     0AD4  141F               	bsf	31,0	;volatile
  6954     0AD5                     l2061:
  6955                           
  6956                           ;ADC.c: 17:         ADCON0bits.GO_DONE = 1;
  6957     0AD5  149F               	bsf	31,1	;volatile
  6958     0AD6                     l257:	
  6959                           ;ADC.c: 18:         while(ADCON0bits.GO_DONE == 1);
  6960                           
  6961     0AD6  189F               	btfsc	31,1	;volatile
  6962     0AD7  2AD9               	goto	u2131
  6963     0AD8  2ADA               	goto	u2130
  6964     0AD9                     u2131:
  6965     0AD9  2AD6               	goto	l257
  6966     0ADA                     u2130:
  6967     0ADA                     l2063:
  6968                           
  6969                           ;ADC.c: 19:         return ADRESH;
  6970     0ADA  081E               	movf	30,w	;volatile
  6971     0ADB  00F2               	movwf	??_ADC_Read
  6972     0ADC  01F3               	clrf	??_ADC_Read+1
  6973     0ADD  0872               	movf	??_ADC_Read,w
  6974     0ADE  00F0               	movwf	?_ADC_Read
  6975     0ADF  0873               	movf	??_ADC_Read+1,w
  6976     0AE0  00F1               	movwf	?_ADC_Read+1
  6977     0AE1                     l255:
  6978     0AE1  0008               	return
  6979     0AE2                     __end_of_ADC_Read:
  6980                           
  6981                           	psect	text35
  6982     09C4                     __ptext35:	
  6983 ;; *************** function _ADC_Init *****************
  6984 ;; Defined at:
  6985 ;;		line 3 in file "ADC.c"
  6986 ;; Parameters:    Size  Location     Type
  6987 ;;  p_ang           1    wreg     unsigned char 
  6988 ;; Auto vars:     Size  Location     Type
  6989 ;;  p_ang           1    0[COMMON] unsigned char 
  6990 ;; Return value:  Size  Location     Type
  6991 ;;                  1    wreg      void 
  6992 ;; Registers used:
  6993 ;;		wreg, status,2
  6994 ;; Tracked objects:
  6995 ;;		On entry : 0/0
  6996 ;;		On exit  : 0/0
  6997 ;;		Unchanged: 0/0
  6998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6999 ;;      Params:         0       0       0       0       0
  7000 ;;      Locals:         1       0       0       0       0
  7001 ;;      Temps:          0       0       0       0       0
  7002 ;;      Totals:         1       0       0       0       0
  7003 ;;Total ram usage:        1 bytes
  7004 ;; Hardware stack levels used: 1
  7005 ;; This function calls:
  7006 ;;		Nothing
  7007 ;; This function is called by:
  7008 ;;		_main
  7009 ;; This function uses a non-reentrant model
  7010 ;;
  7011                           
  7012     09C4                     _ADC_Init:	
  7013                           ;psect for function _ADC_Init
  7014                           
  7015                           
  7016                           ;incstack = 0
  7017                           ; Regs used in _ADC_Init: [wreg+status,2]
  7018                           ;ADC_Init@p_ang stored from wreg
  7019     09C4  00F0               	movwf	ADC_Init@p_ang
  7020     09C5                     l2043:
  7021                           
  7022                           ;ADC.c: 3: void ADC_Init(unsigned char p_ang);ADC.c: 4: {;ADC.c: 5:     ADCON1 = 0x00;
  7023     09C5  1683               	bsf	3,5	;RP0=1, select bank1
  7024     09C6  1303               	bcf	3,6	;RP1=0, select bank1
  7025     09C7  019F               	clrf	31	;volatile
  7026     09C8                     l2045:
  7027                           
  7028                           ;ADC.c: 6:     ADCON0 = p_ang;
  7029     09C8  0870               	movf	ADC_Init@p_ang,w
  7030     09C9  1283               	bcf	3,5	;RP0=0, select bank0
  7031     09CA  1303               	bcf	3,6	;RP1=0, select bank0
  7032     09CB  009F               	movwf	31	;volatile
  7033     09CC                     l251:
  7034     09CC  0008               	return
  7035     09CD                     __end_of_ADC_Init:
  7036     007E                     btemp	set	126	;btemp
  7037     007E                     wtemp0	set	126
  7038                           
  7039                           	psect	idloc
  7040                           
  7041                           ;Config register IDLOC0 @ 0x2000
  7042                           ;	unspecified, using default values
  7043     2000                     	org	8192
  7044     2000  3FFF               	dw	16383
  7045                           
  7046                           ;Config register IDLOC1 @ 0x2001
  7047                           ;	unspecified, using default values
  7048     2001                     	org	8193
  7049     2001  3FFF               	dw	16383
  7050                           
  7051                           ;Config register IDLOC2 @ 0x2002
  7052                           ;	unspecified, using default values
  7053     2002                     	org	8194
  7054     2002  3FFF               	dw	16383
  7055                           
  7056                           ;Config register IDLOC3 @ 0x2003
  7057                           ;	unspecified, using default values
  7058     2003                     	org	8195
  7059     2003  3FFF               	dw	16383
  7060                           
  7061                           	psect	config
  7062                           
  7063                           ;Config register CONFIG1 @ 0x2007
  7064                           ;	Oscillator Selection bits
  7065                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  7066                           ;	Watchdog Timer Enable bit
  7067                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  7068                           ;	Power-up Timer Enable bit
  7069                           ;	PWRTE = OFF, PWRT disabled
  7070                           ;	RE3/MCLR pin function select bit
  7071                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  7072                           ;	Code Protection bit
  7073                           ;	CP = OFF, Program memory code protection is disabled
  7074                           ;	Data Code Protection bit
  7075                           ;	CPD = OFF, Data memory code protection is disabled
  7076                           ;	Brown Out Reset Selection bits
  7077                           ;	BOREN = OFF, BOR disabled
  7078                           ;	Internal External Switchover bit
  7079                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  7080                           ;	Fail-Safe Clock Monitor Enabled bit
  7081                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  7082                           ;	Low Voltage Programming Enable bit
  7083                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  7084                           ;	In-Circuit Debugger Mode bit
  7085                           ;	DEBUG = 0x1, unprogramme  7086     2007                     	org	8199
  7087     2007  20D4               	dw	8404
  7088                           
  7089                           ;Config register CONFIG2 @ 0x2008
  7090                           ;	Brown-out Reset Selection bit
  7091                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  7092                           ;	Flash Program Memory Self Write Enable bits
  7093                           ;	WRT = OFF, Write protection off
  7094     2008                     	org	8200
  7095     2008  3FFF               	dw	16383

Data Sizes:
    Strings     11
    Constant    10
    Data        14
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     64      77
    BANK1            80     26      60
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@co_string(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> main@co_string(BANK1[16]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Init_Master
    _mostrar_hora->_Lcd_Write_Char
    _mostrar_fecha->_Lcd_Write_Char
    _leer_hora->_I2C_Write
    _leer_fecha->_I2C_Write
    _enviar_hora->_I2C_Write
    _enviar_fecha->_I2C_Write
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->___fltol
    ___fltol->___fldiv
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0    8705
                                             62 BANK0      2     2      0
                                              0 BANK1     26    26      0
                           _ADC_Init
                           _ADC_Read
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                     _convertirFecha
                      _convertirHora
                       _enviar_fecha
                        _enviar_hora
                         _leer_fecha
                          _leer_hora
                      _mostrar_fecha
                       _mostrar_hora
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      66
                    _I2C_Init_Master
 ---------------------------------------------------------------------------------
 (2) _I2C_Init_Master                                      1     1      0      66
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _mostrar_hora                                         1     1      0     178
                                              5 COMMON     1     1      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _mostrar_fecha                                        1     1      0     178
                                              5 COMMON     1     1      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _leer_hora                                            0     0      0      29
                            _I2C_Ack
                           _I2C_Nack
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _leer_fecha                                           0     0      0      29
                            _I2C_Ack
                           _I2C_Nack
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enviar_hora                                          0     0      0      29
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _enviar_fecha                                         0     0      0      29
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            3     3      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _convertirHora                                        2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _convertirFecha                                       2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             52 BANK0     10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2569
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                             26 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     420
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     684
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      44
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___awdiv
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___fltol
     ___fldiv (ARG)
     ___flmul (ARG)
   ___xxtofl
   _convertirFecha
   _convertirHora
   _enviar_fecha
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _enviar_hora
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _leer_fecha
     _I2C_Ack
     _I2C_Nack
     _I2C_Read
     _I2C_Restart
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _leer_hora
     _I2C_Ack
     _I2C_Nack
     _I2C_Read
     _I2C_Restart
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _mostrar_fecha
     _Lcd_Write_Char
   _mostrar_hora
     _Lcd_Write_Char
   _setup
     _I2C_Init_Master
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1A      3C       7       75.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     40      4D       5       96.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      97      12        0.0%
ABS                  0      0      97       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 09 12:53:09 2023

            ___fldiv@aexp 0053              ___fldiv@bexp 0052                         pc 0002  
            ___fldiv@sign 004B              ___awdiv@sign 0076                        fsr 0004  
     __Umul8_16@word_mpld 0076                       l103 0A5F                       l113 0C16  
                     l210 0ABA                       l202 0AA2                       l122 0B37  
                     l203 0AA5                       l131 0E71                       l204 0AAB  
                     l108 0C57                       l116 0B66                       l205 0AAC  
                     l213 0A79                       l125 0D6C                       l206 0AB2  
                     l222 0D23                       l207 0AB3                       l119 0DB5  
                     l208 0AB9                       l216 0A18                       l128 0ECF  
                     l225 0E13                       l153 0A98                       l234 0C99  
                     l162 09DA                       l170 09E9                       l251 09CC  
                     l171 09EA                       l228 0B9B                       l156 09D0  
                     l164 09DF                       l180 09FA                       l165 09E0  
                     l158 09D5                       l174 09EF                       l182 09FF  
                     l255 0AE1                       l159 09D6                       l183 0A00  
                     _ADC 006C                       l176 09F4                       l192 0A04  
                     l168 09E4                       l257 0AD6                       l177 09F5  
                     l186 0A1E                       l194 0A09                       l195 0A0B  
                     l188 0A22                       l189 0A26                       l526 006A  
                     l369 0144                       l722 031C                       l724 0498  
                     l820 0FD5                       l812 0FAD                       l645 0CDD  
                     l566 0F32                       l806 0F6A                       l559 0F47  
                     l655 0BD5                       l744 0480                       l808 0FFF  
                     l569 0F47                       l746 048E                       l738 040E  
                     l762 07DD                       l819 0FC9                       l781 0AF6  
                     l774 07D1                       l783 0B08                       l768 074D  
                     _dia 0068           __end_of_I2C_Ack 09F6                       _mes 0067  
                     _min 006A                       _sec 006B                       fsr0 0004  
                     indf 0000              ___flmul@aexp 0032              ___flmul@bexp 0033  
         ??_mostrar_fecha 0075              ___flmul@sign 002D              ___flmul@temp 0038  
            ___flmul@prod 0034              ___fltol@exp1 005D                      l2001 0D83  
                    l2011 0DA3                      l2003 0D89                      l2021 0D29  
                    l2013 0DAB                      l2005 0D91                      l2031 0D4D  
                    l2023 0D2F                      l2015 0DB0                      l2007 0D96  
                    l2111 00E0                      l2033 0D55                      l2025 0D3A  
                    l2009 0D9E                      l2041 0E14                      l2017 0E72  
                    l2121 011E                      l2113 00E6                      l2105 00BA  
                    l2043 09C5                      l2211 0F27                      l2203 0F0E  
                    l2035 0D5A                      l2027 0D40                      l2019 0D24  
                    l2123 0123                      l2115 00EB                      l2045 09C8  
                    l2061 0AD5                      l2141 0009                      l2301 03C7  
                    l2221 02CF                      l2213 0F37                      l2205 0F20  
                    l2037 0D62                      l2029 0D48                      l2125 0127  
                    l2117 00EF                      l2109 00D6                      l2063 0ADA  
                    l2055 0AC5                      l2047 0ABC                      l2071 0C77  
                    l2151 001D                      l2143 000E                      l2311 03DF  
                    l2303 03CF                      l2231 02E6                      l2223 02D3  
                    l2215 0F3C                      l2039 0D67                      l2119 00F2  
                    l2127 0130                      l2057 0AC9                      l2049 0AC2  
                    l2073 0C7D                      l2161 0033                      l2153 001F  
                    l2145 0010                      l2137 0004                      l2321 03F7  
                    l2313 03E8                      l2305 03D1                      l2241 02FA  
                    l2233 02E7                      l2225 02D4                      l2217 02C6  
                    l2129 0140                      l2081 007C                      l2059 0AD4  
                    l2067 0C58                      l2171 0056                      l2163 0037  
                    l2155 0025                      l2147 0014                      l2139 0005  
                    l2331 0426                      l2323 040B                      l2307 03DA  
                    l2315 03EE                      l2251 0311                      l2243 02FE  
                    l2227 02D9                      l2235 02E9                      l2219 02CB  
                    l2411 0552                      l2403 0500                      l2091 00A7  
                    l2083 0081                      l2075 006E                      l2069 0C5B  
                    l2165 0048                      l2157 0028                      l2173 005C  
                    l2149 0019                      l2341 0464                      l2333 042A  
                    l2317 03F2                      l2309 03DE                      l2261 0334  
                    l2253 0312                      l2245 02FF                      l2237 02F1  
                    l2229 02DE                      l2421 05CB                      l2413 057C  
                    l2405 050E                      l2181 0ED0                      l2501 0F4E  
                    l2093 00AB                      l2077 0071                      l2175 0061  
                    l2167 004E                      l2159 002F                      l2351 0488  
                    l2343 0473                      l2335 0443                      l2327 0413  
                    l2319 03F3                      l2271 034B                      l2247 0304  
                    l2255 0314                      l2239 02F6                      l2431 0647  
                    l2423 05E8                      l2415 0598                      l2407 051B  
                    l2191 0EF8                      l2183 0EDB                      l2511 0F7B  
                    l2503 0F52                      l2095 00AF                      l2087 0082  
                    l2079 0077                      l1801 0B7F                      l2177 0066  
                    l2169 004F                      l2353 048A                      l2345 0477  
                    l2329 0418                      l2337 0449                      l2281 0377  
                    l2273 035D                      l2257 0324                      l2265 033D  
                    l2249 0309                      l2441 06F9                      l2433 0672  
                    l2425 05F6                      l2417 05B4                      l2409 0536  
                    l2361 049E                      l2193 0F00                      l2521 0FA4  
                    l2513 0F7E                      l2505 0F62                      l2097 00B3  
                    l2089 009F                      l1811 0B93                      l1803 0B82  
                    l2347 047F                      l2339 0456                      l2283 037C  
                    l2291 039C                      l2275 0365                      l2267 0342  
                    l2259 0330                      l2451 071E                      l2443 0702  
                    l2435 0680                      l2427 0613                      l2419 05BD  
                    l2371 04B1                      l2363 04A2                      l2195 0F02  
                    l2187 0EE4                      l2531 0FD7                      l2523 0FB4  
                    l2515 0F8B                      l2507 0F72                      l2099 00B8  
                    l1821 0A6D                      l1813 0B98                      l1805 0B87  
                    l2349 0484                      l2293 03AE                      l2285 038E  
                    l2277 036D                      l2461 0736                      l2453 0727  
                    l2445 0710                      l2437 06AB                      l2429 062A  
                    l2381 04CC                      l2373 04B9                      l2365 04A6  
                    l2197 0F06                      l2189 0EF7                      l2533 0FED  
                    l2525 0FBF                      l2517 0F92                      l1901 0A58  
                    l1751 0A9E                      l1823 0A76                      l1815 0A61  
                    l1911 0DD4                      l1807 0B8A                      l2295 03AF  
                    l2287 0392                      l2279 0375                      l2471 0765  
                    l2463 074A                      l2447 0719                      l2455 072D  
                    l2439 06D1                      l2391 04E3                      l2383 04D0  
                    l2375 04BB                      l2367 04A7                      l2359 0499  
                    l2535 0FF2                      l2527 0FC3                      l2519 0F96  
                    l1903 0A59                      l1831 0CA5                      l2551 0162  
                    l2543 0145                      l1753 0AA9                      l1817 0A64  
                    l1913 0DDA                      l1905 0DB6                      l1809 0B90  
                    l2297 03BD                      l2289 0393                      l2481 07A0  
                    l2473 0769                      l2457 0731                      l2449 071D  
                    l2393 04E5                      l2385 04D1                      l2377 04C3  
                    l2369 04AC                      l2537 0FF6                      l2529 0FCD  
                    l1761 0A7F                      l1841 0CCB                      l1833 0CAC  
                    l1825 0C9A                      l2561 017E                      l2553 0167  
                    l2545 0154                      l1755 0AB0                      l1819 0A6A  
                    l1915 0E0E                      l1907 0DBC                      l2299 03C1  
                    l2491 07CB                      l2483 07AF                      l2475 0782  
                    l2467 0752                      l2459 0732                      l2395 04ED  
                    l2387 04D6                      l2379 04C8                      l2539 0FF7  
                    l1931 0C2A                      l1771 0A96                      l1763 0A85  
                    l1843 0CCC                      l1835 0CB0                      l1827 0C9C  
                    l1851 0B9C                      l2619 0094                      l2571 019E  
                    l2563 0186                      l2555 016C                      l2547 0158  
                    l1757 0AB7                      l1749 0A9A                      l1917 0A0C  
                    l1909 0DC5                      l2493 07CC                      l2485 07B9  
                    l2469 0757                      l2477 0788                      l2397 04F2  
                    l2389 04DB                      l1925 0C18                      l1773 09CD  
                    l1781 09D7                      l1941 0B51                      l1933 0B38  
                    l1765 0A88                      l1845 0CD3                      l1837 0CB4  
                    l1829 0CA2                      l1861 0BB4                      l1853 0BA2  
                    l2581 01BA                      l2565 018B                      l2557 0174  
                    l2549 015D                      l2495 07D5                      l2487 07BB  
                    l2479 0795                      l2399 04F7                      l1927 0C20  
                    l1919 0C17                      l1775 0A1A                      l1943 0B59  
                    l1935 0B3D                      l1791 09EB                      l1783 09E1  
                    l1767 0A8E                      l1759 0A7B                      l1839 0CC5  
                    l1847 0CD9                      l1863 0BBE                      l1855 0BA5  
                    l2591 029B                      l2583 01C7                      l2567 0190  
                    l2559 0179                      l1881 0AFF                      l1873 0AE3  
                    l2489 07C7                      l1953 0BD7                      l1929 0C24  
                    l1777 0A23                      l1961 0B09                      l1945 0B61  
                    l1937 0B43                      l1793 09F6                      l1785 0A01  
                    l1769 0A91                      l1865 0BC4                      l1857 0BAC  
                    l2593 02B9                      l2585 01DC                      l2577 01A0  
                    l2569 019A                      l1795 0B68                      l1883 0B04  
                    l1875 0AE5                      l2499 0F49                      l1955 0BDF  
                    l1947 0BD6                      l1971 0B2A                      l1963 0B0E  
                    l1939 0B49                      l1787 0A0A                      l1891 0A4D  
                    l1867 0BCB                      l1859 0BB0                      l2587 0235  
                    l2579 01B4                      l1981 0CF4                      l1797 0B6E  
                    l1877 0AEC                      l1957 0BE3                      l1973 0B32  
                    l1965 0B14                      l1893 0A50                      l1869 0BD1  
                    l2589 0292                      l1991 0D17                      l1983 0CFA  
                    l1975 0CDF                      l1799 0B71                      l1879 0AF0  
                    l1959 0BE9                      l1967 0B1A                      l1895 0A53  
                    l1887 0A48                      l1993 0D1D                      l1977 0CE4  
                    l1985 0D01                      l1969 0B22                      l1897 0A54  
                    l1889 0A4C                      l1987 0D07                      l1979 0CF1  
                    l1995 0D6D                      l1899 0A57                      l1989 0D14  
                    l1997 0D72                      l1999 0D78                      STR_1 0821  
                    STR_2 081A                      u2010 0CE4                      u2011 0CE3  
                    u2005 0C0C                      u2110 0AC2                      u2030 0D07  
                    u2111 0AC1                      u2031 0D06                      u3000 0731  
                    u2200 00E0                      u2025 0CEA                      u3001 0730  
                    u2105 0E5B                      u2201 00DF                      u2130 0ADA  
                    u3010 0736                      u2210 00E6                      u2131 0AD9  
                    u3011 0735                      u2211 00E5                      u2140 0C65  
                    u2300 0048                      u3020 074A                      u3100 0F4E  
                    u2220 0130                      u2125 0ACC                      u2045 0D0D  
                    u2301 0047                      u3021 0749                      u3101 0F4D  
                    u2221 012F                      u2150 0C87                      u3030 0751  
                    u3110 0F52                      u2230 0140                      u3031 0750  
                    u3111 0F51                      u2055 0E77                      u2231 013F  
                    u2160 0C99                      u2320 005C                      u2240 0009  
                    u3040 0757                      u2400 0F26                      u3200 0FCD  
                    u3120 0F72                      u2161 0C98                      u2321 005B  
                    u2305 0044                      u2241 0008                      u3041 0756  
                    u2401 0F25                      u3201 0FCC                      u3121 0F71  
                    u2065 0E98                      u2330 0061                      u2250 0014  
                    u3050 0769                      u3210 0FE2                      u2170 0077  
                    u2331 0060                      u2315 0050                      u2251 0013  
                    u3051 0768                      u2075 0EB9                      u2171 0076  
                    u2260 0025                      u2500 0324                      u3060 0778  
                    u2420 0F37                      u2340 0EDB                      u3220 0FF2  
                    u3140 0F91                      u1700 0A22                      u2180 00AF  
                    u2261 0024                      u2501 0323                      u2421 0F36  
                    u2341 0EDA                      u3221 0FF1                      u3141 0F90  
                    u1701 0A21                      u2085 0E19                      u2181 00AE  
                    u1630 0A9E                      u2510 0342                      u3070 0795  
                    u2430 0F3C                      u2350 0EF2                      u3230 0FF6  
                    u1710 09DF                      u2190 00D5                      u1631 0A9D  
                    u2511 0341                      u3071 0794                      u2431 0F3B  
                    u2415 0F29                      u3231 0FF5                      u3215 0FDD  
                    u3135 0F83                      u1711 09DE                      u2095 0E3A  
                    u2191 00D4                      u1640 0AA9                      u2280 0037  
                    u2520 037C                      u2440 02D3                      u3080 07AF  
                    u2360 0F06                      u3160 0FB3                      u1720 09E9  
                    u3240 01C7                      u1641 0AA8                      u2281 0036  
                    u2521 037B                      u2441 02D2                      u3081 07AE  
                    u3065 0773                      u2361 0F05                      u3161 0FB2  
                    u1721 09E8                      u3241 01C6                      u1650 0AB0  
                    u2610 03DE                      u2450 02D9                      u3090 07CB  
                    u2370 0F0D                      u1730 0A09                      u1810 0CC5  
                    u1651 0AAF                      u3307 0DDC                      u2275 0029  
                    u2611 03DD                      u2451 02D8                      u3091 07CA  
                    u3075 0791                      u2371 0F0C                      u2355 0EED  
                    u3155 0FA5                      u1731 0A08                      u1811 0CC4  
                    u2195 00D1                      u1660 0AB7                      u2700 0456  
                    u2460 02DE                      u1900 0AF0                      u3180 0FC3  
                    u1740 09F4                      u1661 0AB6                      u3317 0E10  
                    u2701 0455                      u2605 03D3                      u2461 02DD  
                    u1901 0AEF                      u3085 07AB                      u3181 0FC2  
                    u1741 09F3                      u1805 0CB5                      u3245 01C3  
                    u2710 0473                      u2630 03F2                      u2550 0392  
                    u2470 02FE                      u2390 0F1F                      u3190 0FC9  
                    u1750 09FF                      u1670 0A8E                      u1830 0CD9  
                    u3327 0A71                      u2295 0038                      u2711 0472  
                    u2631 03F1                      u2551 0391                      u2535 037E  
                    u2471 02FD                      u2391 0F1E                      u3191 0FC8  
                    u3175 0FB8                      u1751 09FE                      u1671 0A8D  
                    u1831 0CD8                      u1815 0CC1                      u2720 0488  
                    u2640 03F7                      u2480 0304                      u1920 0B04  
                    u2800 04F7                      u1680 0A96                      u1840 0BA2  
                    u2721 0487                      u2705 0452                      u2641 03F6  
                    u2625 03E1                      u2545 0387                      u2481 0303  
                    u1921 0B03                      u2801 04F6                      u2385 0F0F  
                    u1681 0A95                      u1825 0CCD                      u1841 0BA1  
                    u3257 0196                      u2650 040B                      u2570 03AE  
                    u2490 0309                      u2730 04A6                      u1930 0C2A  
                    u1690 09D5                      u1770 0CA2                      u3267 0B84  
                    u2715 046F                      u2651 040A                      u2571 03AD  
                    u2491 0308                      u1915 0AF7                      u2811 0544  
                    u2731 04A5                      u1931 0C29                      u1691 09D4  
                    u1771 0CA1                      u2660 0412                      u2580 03C7  
                    u2812 054B                      u2740 04AC                      u1860 0BB4  
                    u3277 0B95                      u1765 0B74                      u2661 0411  
                    u2581 03C6                      u2565 0395                      u2901 0664  
                    u2821 0560                      u2813 0552                      u2741 04AB  
                    u1861 0BB3                      u2670 0418                      u2590 03CF  
                    u2902 066B                      u2822 0567                      u2750 04B1  
                    u1790 0CB4                      u1870 0BBE                      u3287 0DC0  
                    u2671 0417                      u2591 03CE                      u2575 03AA  
                    u2911 068F                      u2903 0672                      u2831 058A  
                    u2823 056E                      u2751 04B0                      u1791 0CB3  
                    u1871 0BBD                      u1855 0BA6                      u2680 042A  
                    u2920 06B7                      u2912 0696                      u2832 0591  
                    u2760 04D0                      u3297 0DCF                      u2681 0429  
                    u2913 069D                      u2841 05A6                      u2833 0598  
                    u2761 04CF                      u1945 0C2F                      u1785 0CA6  
                    u2690 0439                      u2842 05AD                      u2770 04D6  
                    u1970 0BE9                      u1890 0BD1                      u2931 06C3  
                    u2843 05B4                      u2771 04D5                      u1971 0BE8  
                    u1955 0C3E                      u1891 0BD0                      u1875 0BBA  
                    u2940 06DF                      u2932 06CA                      u2780 04DB  
                    u2933 06D1                      u2925 06B2                      u2861 05DA  
                    u2781 04DA                      u1965 0C4D                      u1885 0BC5  
                    u2862 05E1                      u2790 04F2                      u2695 0434  
                    u2951 06EB                      u2871 0605                      u2863 05E8  
                    u2855 05B6                      u2791 04F1                      u2952 06F2  
                    u2872 060C                      u2953 06F9                      u2945 06DA  
                    u2873 0613                      u1985 0BEE                      u2891 0639  
                    u1995 0BFD                      u2980 071D                      u2892 0640  
                    u2981 071C                      u2965 06FB                      u2893 0647  
                    u2885 0615                      u2975 0712                      u2995 0720  
                    _Hora 00D5         ?_Lcd_Write_String 0075                      _caso 0060  
                    _anio 0066                      _main 0145                      _hora 0069  
        __end_of_I2C_Nack 0A01          __end_of_I2C_Read 0A0C                      btemp 007E  
        __end_of_I2C_Stop 09E1          __end_of_ADC_Init 09CD          __end_of_ADC_Read 0AE2  
                    start 0000        ??_Lcd_Write_String 0077          ?_I2C_Init_Master 0070  
            ?_enviar_hora 0070           ___fldiv@new_exp 004C           __end_of_Lcd_Cmd 0A7A  
           ___fltol@sign1 005C                     ?_main 0070           __end_of___fldiv 0499  
         __end_of___awdiv 006B           __end_of___flmul 07DE             _convertirHora 0C17  
         __end_of___fltol 0F48                     _ANSEL 0188           ___awdiv@divisor 0070  
         __end_of___lwdiv 0CDE           __end_of___lwmod 0BD6           ___awdiv@counter 0075  
                   _PORTA 0005                     _TRISA 0085                     _Fecha 00CE  
         __end_of_dpowers 081A                     _setup 0A48                     main@i 00B6  
       __end_of_I2C_Start 09D7         __end_of_I2C_Write 0A27                     pclath 000A  
           ?_enviar_fecha 0070                     status 0003                     wtemp0 007E  
         __end_of_sprintf 0145             main@adc_value 00B8          __end_of_Lcd_Init 0E14  
        __end_of_Lcd_Port 0ABB           __initialization 07DE              __end_of_main 02C6  
               ??_I2C_Ack 0070            ?_convertirHora 0070                    ??_main 005E  
           main@co_string 00A0                    _ADCON0 001F                    _ADCON1 009F  
          _convertirFecha 0BD6                    _ADRESH 001E          ___awdiv@dividend 0072  
                  ?_setup 0070                    _ANSELH 0189            ??_enviar_fecha 0071  
               ??_Lcd_Cmd 0071                    _SSPADD 0093                    _SSPCON 0014  
                  _SSPBUF 0013          __end_of___xxtofl 1000                 ??___fldiv 0042  
               ??___awdiv 0074                 ??___flmul 0028                 ??___fltol 0058  
               ??___lwdiv 0074                 ??___lwmod 007C                    _buffer 00BA  
        ___awdiv@quotient 0077                 ?_I2C_Nack 0070                 ?_I2C_Read 0070  
               ?_I2C_Stop 0070                 ?_ADC_Init 0070                 ?_ADC_Read 0070  
  __end_of_convertirFecha 0C17                 ??_sprintf 0023           Lcd_Set_Cursor@a 0076  
         Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078           Lcd_Set_Cursor@z 0077  
            ___xxtofl@arg 007A              ___xxtofl@exp 0079              ___xxtofl@val 0070  
 __end_of__initialization 07FC         __end_of_Lcd_Clear 0A19                ___fltol@f1 0054  
          __pcstackCOMMON 0070              __pidataBANK1 0A27           ??_convertirHora 0070  
           __end_of_setup 0A60            _Lcd_Set_Cursor 0CDE                ??_I2C_Nack 0070  
              ??_I2C_Read 0070                ??_I2C_Stop 0070                ??_ADC_Init 0070  
              ??_ADC_Read 0072           ?_convertirFecha 0070                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070                   ??_setup 0071                __pbssBANK0 0060  
              __pbssBANK1 00BA            main@co_voltage 00B0         __end_of__Umul8_16 0B09  
              __pmaintext 0145                   _I2C_Ack 09EB    __end_of_Lcd_Set_Cursor 0D24  
              ADC_Read@ch 0074      __end_of_enviar_fecha 0B38             ??_I2C_Restart 0070  
               ?___xxtofl 0070                ??_Lcd_Init 0074                ??_Lcd_Port 0070  
                 _SSPCON2 0091     __end_of_mostrar_fecha 0E72                   _SSPSTAT 0094  
              __stringtab 0800      main@co_concentration 00B4            _Lcd_Write_Char 0B67  
                 _Lcd_Cmd 0A60                _leer_fecha 0D24                 _I2C_Start 09CD  
               _I2C_Write 0A19                   ___fldiv 02C6                   ___awdiv 0004  
                 ___flmul 0499                   ___fltol 0ED0                   ___lwdiv 0C9A  
                 ___lwmod 0B9C         __end_of_leer_hora 0DB6           ?_Lcd_Set_Cursor 0074  
                 __ptext1 006B                   __ptext2 0B9C                   __ptext3 0C9A  
                 __ptext4 0A48                   __ptext5 0A7A                   __ptext6 0E72  
                 __ptext7 0E14                   __ptext8 0D6D                   __ptext9 0D24  
                 _dpowers 0810                ??___xxtofl 0074                   _sprintf 006B  
                 clrloop0 09BD       __end_of_I2C_Restart 09EB    __end_of_Lcd_Write_Char 0B9C  
    end_of_initialization 07FC             ?_mostrar_hora 0070                ?_I2C_Start 0070  
              ?_I2C_Write 0070                 Lcd_Port@a 0070                 _PORTAbits 0005  
           ___xxtofl@sign 0078                 _TRISCbits 0087               ___fldiv@grs 004E  
             ___fldiv@rem 0047           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0075  
       Lcd_Write_String@i 007A               ___flmul@grs 002E            ??_mostrar_hora 0075  
             ?_leer_fecha 0070          _co_concentration 0062                 _Lcd_Clear 0A0C  
        _Lcd_Write_String 0C58          ??_convertirFecha 0070               _I2C_Restart 09E1  
     start_initialization 07DE         ??_I2C_Init_Master 0070     I2C_Init_Master@sp_i2c 0070  
            _enviar_fecha 0B09               ??_I2C_Start 0070               ??_I2C_Write 0070  
           ??_enviar_hora 0071                ?_Lcd_Clear 0070                init_fetch0 0A35  
               __Umul8_16 0AE2               __pdataBANK1 00CE                  ?_I2C_Ack 0070  
         Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073     __end_of_convertirHora 0C58  
               ___fldiv@a 003A                 ___fldiv@b 003E                 ___flmul@a 0024  
               ___flmul@b 0020                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0                 _adc_value 0064                  ?_Lcd_Cmd 0070  
             sprintf@flag 0027               sprintf@prec 0028          ___lwdiv@dividend 0072  
        ??_Lcd_Set_Cursor 0075                  ?___fldiv 003A                  ?___awdiv 0070  
                ?___flmul 0020                  ?___fltol 0054                ?__Umul8_16 0070  
                ?___lwdiv 0070                  ?___lwmod 0078       __end_of_enviar_hora 0B67  
               __pstrings 0800      __end_of_mostrar_hora 0ED0                  _I2C_Nack 09F6  
                _I2C_Read 0A01                 _leer_hora 0D6D                  _I2C_Stop 09D7  
                _ADC_Init 09C4                  _ADC_Read 0ABB          ___lwdiv@quotient 0075  
                ?_sprintf 0020                 clear_ram0 09BC                  Lcd_Cmd@a 0073  
                _PIR1bits 000C               ??_Lcd_Clear 0074                _ADCON0bits 001F  
             __stringbase 080F          ??_Lcd_Write_Char 0071                ?_leer_hora 0070  
                _Lcd_Init 0DB6                  _Lcd_Port 0A99           convertirFecha@i 0071  
__end_of_Lcd_Write_String 0C9A              ??_leer_fecha 0071               _enviar_hora 0B38  
           ADC_Init@p_ang 0070           _I2C_Init_Master 0A7A             I2C_Write@data 0070  
             ??__Umul8_16 0072        __end_of__stringtab 0810              ?_I2C_Restart 0070  
              sprintf@val 0029                  ___xxtofl 0F48        __end_of_leer_fecha 0D6D  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0077                  __ptext10 09E1  
                __ptext11 0A01                  __ptext20 0BD6                  __ptext12 09F6  
                __ptext21 0F48                  __ptext13 09EB                  __ptext30 0DB6  
                __ptext22 0ED0                  __ptext14 0B38                  __ptext31 0A0C  
                __ptext23 0499                  __ptext15 0B09                  __ptext32 0A60  
                __ptext24 0AE2                  __ptext16 0A19                  __ptext33 0A99  
                __ptext25 02C6                  __ptext17 09D7                  __ptext34 0ABB  
                __ptext26 0004                  __ptext18 09CD                  __ptext35 09C4  
                __ptext27 0C58                  __ptext19 0C17                  __ptext28 0B67  
                __ptext29 0CDE             _mostrar_fecha 0E14            convertirHora@i 0071  
             ??_leer_hora 0071                  init_ram0 0A39            ?_mostrar_fecha 0070  
      Lcd_Write_Char@temp 0072                 sprintf@ap 0026                 sprintf@sp 002B  
        ___lwmod@dividend 007A              _mostrar_hora 0E72   __end_of_I2C_Init_Master 0A99  
               stringcode 080A                _OSCCONbits 008F        Lcd_Set_Cursor@temp 0079  
  __Umul8_16@multiplicand 0070                  sprintf@c 002C                  sprintf@f 0020  
         ___lwmod@divisor 0078           ___lwmod@counter 007D                  stringdir 080A  
                stringtab 0800               _SSPCON2bits 0091      __Umul8_16@multiplier 0078  
       __Umul8_16@product 0074  
